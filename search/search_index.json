{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \uff5e \u00b6 \u563f\uff0c\u6765\u4e86\u5c31\u4e0d\u8981\u8d70\u4e86\uff5e \uff0c\u778e\u770b\u770b\u5427\uff0c\u5982\u53d1\u73b0\u6587\u6863\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u90a3\u4e48\u8bb0\u4f4f\u8fd9\u4e2a\u5751\uff0c\u6211\u5e94\u8be5\u4e0d\u4f1a\u6539\uff0c\u56e0\u4e3a\u6211\u5f88\u61d2\u3002 \u5982\u679c\u53d1\u73b0\u70b9\u51fb\u94fe\u63a5\u7a7a\u767d\uff0c\u6216\u8005\u662f\u70b9\u51fb\u8df3\u8f6c\u7684\u662f\u5176\u4ed6\u6587\u7ae0\uff0c\u4e0d\u8981\u60ca\u614c\uff0c\u90a3\u662f\u6211\u771f\u7684\u6ca1\u5199\u5185\u5bb9\uff0c\u968f\u4fbf\u505a\u4e86\u4e2a\u94fe\u63a5\u4ee5\u9632\u62a5\u9519\u3002 \u4e3b\u9875\u4e0d\u5199\u70b9\u4ec0\u4e48\u603b\u89c9\u5f97\u7a7a\u8361\u8361\uff0c\u60f3\u52a0\u70b9\u5185\u5bb9\uff0c\u4f46\u4e0d\u4f1a\u524d\u7aef\u3002\u60f3\u770b\u5565\u5728\u5de6\u4fa7\u70b9\u51fb\u5427\uff0c\u4f5b\u7cfb\u8fd0\u7ef4\u4e00\u679a\uff0c\u4e5f\u5728\u5b66\u4e60\u65e5\u8bed\u548c\u5fb7\u8bed\uff0c\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u6211\u89c9\u5f97\u53ef\u4ee5\u5206\u4eab\u7684\u5185\u5bb9\uff0c\u4e0d\u5b9a\u65f6\u66f4\u65b0\uff0c\u5982\u957f\u65f6\u95f4\u4e0d\u66f4\u65b0\uff0c\u90a3\u4e48\u53ef\u80fd\u5df2\u7ecf\u5fd8\u8bb0\u8fd9\u4e2a\u7ad9\u70b9\u7684\u5b58\u5728\u4e86 \uff5e","title":"Welcome \uff5e"},{"location":"#welcome","text":"\u563f\uff0c\u6765\u4e86\u5c31\u4e0d\u8981\u8d70\u4e86\uff5e \uff0c\u778e\u770b\u770b\u5427\uff0c\u5982\u53d1\u73b0\u6587\u6863\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u90a3\u4e48\u8bb0\u4f4f\u8fd9\u4e2a\u5751\uff0c\u6211\u5e94\u8be5\u4e0d\u4f1a\u6539\uff0c\u56e0\u4e3a\u6211\u5f88\u61d2\u3002 \u5982\u679c\u53d1\u73b0\u70b9\u51fb\u94fe\u63a5\u7a7a\u767d\uff0c\u6216\u8005\u662f\u70b9\u51fb\u8df3\u8f6c\u7684\u662f\u5176\u4ed6\u6587\u7ae0\uff0c\u4e0d\u8981\u60ca\u614c\uff0c\u90a3\u662f\u6211\u771f\u7684\u6ca1\u5199\u5185\u5bb9\uff0c\u968f\u4fbf\u505a\u4e86\u4e2a\u94fe\u63a5\u4ee5\u9632\u62a5\u9519\u3002 \u4e3b\u9875\u4e0d\u5199\u70b9\u4ec0\u4e48\u603b\u89c9\u5f97\u7a7a\u8361\u8361\uff0c\u60f3\u52a0\u70b9\u5185\u5bb9\uff0c\u4f46\u4e0d\u4f1a\u524d\u7aef\u3002\u60f3\u770b\u5565\u5728\u5de6\u4fa7\u70b9\u51fb\u5427\uff0c\u4f5b\u7cfb\u8fd0\u7ef4\u4e00\u679a\uff0c\u4e5f\u5728\u5b66\u4e60\u65e5\u8bed\u548c\u5fb7\u8bed\uff0c\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u6211\u89c9\u5f97\u53ef\u4ee5\u5206\u4eab\u7684\u5185\u5bb9\uff0c\u4e0d\u5b9a\u65f6\u66f4\u65b0\uff0c\u5982\u957f\u65f6\u95f4\u4e0d\u66f4\u65b0\uff0c\u90a3\u4e48\u53ef\u80fd\u5df2\u7ecf\u5fd8\u8bb0\u8fd9\u4e2a\u7ad9\u70b9\u7684\u5b58\u5728\u4e86 \uff5e","title":"Welcome \uff5e"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/","text":"1. Ngx lua waf \u8bf4\u660e \u00b6 \u9632\u6b62sql\u6ce8\u5165\uff0c\u672c\u5730\u5305\u542b\uff0c\u90e8\u5206\u6ea2\u51fa\uff0cfuzzing\u6d4b\u8bd5\uff0cxss,SSRF\u7b49web\u653b\u51fb \u9632\u6b62svn/\u5907\u4efd\u4e4b\u7c7b\u6587\u4ef6\u6cc4\u6f0f \u9632\u6b62ApacheBench\u4e4b\u7c7b\u538b\u529b\u6d4b\u8bd5\u5de5\u5177\u7684\u653b\u51fb \u5c4f\u853d\u5e38\u89c1\u7684\u626b\u63cf\u9ed1\u5ba2\u5de5\u5177\uff0c\u626b\u63cf\u5668 \u5c4f\u853d\u5f02\u5e38\u7684\u7f51\u7edc\u8bf7\u6c42 \u5c4f\u853d\u56fe\u7247\u9644\u4ef6\u7c7b\u76ee\u5f55php\u6267\u884c\u6743\u9650 \u9632\u6b62webshell\u4e0a\u4f20 2. \u4e0b\u8f7d waf \u00b6 \u4f7f\u7528git git clone https://github.com/loveshell/ngx_lua_waf.git \u4f7f\u7528wget wget https://github.com/loveshell/ngx_lua_waf/archive/master.zip 3. \u5b89\u88c5 \u00b6 \u4e0b\u8f7d\u89e3\u538b\u540e\uff0c\u5c06\u6574 ngx_lua_waf \u653e\u5230 nginx conf \u76ee\u5f55\u4e2d\uff0c\u5e76\u547d\u540d\u4e3a waf; 4. \u914d\u7f6e \u00b6 nginx\u5b89\u88c5\u8def\u5f84\u5047\u8bbe\u4e3a:/usr/local/nginx/conf/ \uff1b\u4ee5\u4e0b\u90fd\u5c06\u4ee5\u6b64\u914d\u7f6e\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e 4.1. \u5728nginx.conf\u7684http\u6bb5\u6dfb\u52a0 \u00b6 lua_package_path \"/usr/local/nginx/conf/waf/?.lua\"; lua_shared_dict limit 10m; init_by_lua_file /usr/local/nginx/conf/waf/init.lua; access_by_lua_file /usr/local/nginx/conf/waf/waf.lua; 4.2. \u914d\u7f6econfig.lua \u00b6 --\u914d\u7f6ewaf\u89c4\u5219\u76ee\u5f55 RulePath = \"/usr/local/nginx/conf/waf/wafconf/\" --\u4fee\u6539\u5931\u8d25\u63d0\u793a html=[[{\"retcode\":\"21000\",\"messages\":\"\u8bf7\u6c42\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5\",\"body\":{}}]] --\u5f00\u542fcc\u653b\u51fb\uff0c\u9700\u8981\u5728nginx.conf http \u6bb5\u914d\u7f6elua_shared_dict CCDeny=\"on\" -- \u8bbe\u7f6ecc\u653b\u51fb\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u79d2 \uff08\u5982\uff1a\u540c\u4e00\u4e2aip\u8bf7\u6c42\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u6bcf\u79d2\u6700\u591a\u8bf7\u6c4250\u6b21\uff09 CCrate = \"50/1\" 4.3. \u5176\u4ed6\u8be6\u7ec6\u914d\u7f6e\u8bf4\u660e \u00b6 RulePath = \"/usr/local/nginx/conf/waf/wafconf/\" --\u89c4\u5219\u5b58\u653e\u76ee\u5f55 attacklog = \"off\" --\u662f\u5426\u5f00\u542f\u653b\u51fb\u4fe1\u606f\u8bb0\u5f55\uff0c\u9700\u8981\u914d\u7f6elogdir logdir = \"/usr/local/nginx/logs/hack/\" --log\u5b58\u50a8\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u9700\u8981\u7528\u6237\u81ea\u5df1\u65b0\u5efa\uff0c\u5207\u9700\u8981nginx\u7528\u6237\u7684\u53ef\u5199\u6743\u9650 UrlDeny=\"on\" --\u662f\u5426\u62e6\u622aurl\u8bbf\u95ee Redirect=\"on\" --\u662f\u5426\u62e6\u622a\u540e\u91cd\u5b9a\u5411 CookieMatch = \"on\" --\u662f\u5426\u62e6\u622acookie\u653b\u51fb postMatch = \"on\" --\u662f\u5426\u62e6\u622apost\u653b\u51fb whiteModule = \"on\" --\u662f\u5426\u5f00\u542fURL\u767d\u540d\u5355 black_fileExt={\"php\",\"jsp\"} --\u586b\u5199\u4e0d\u5141\u8bb8\u4e0a\u4f20\u6587\u4ef6\u540e\u7f00\u7c7b\u578b ipWhitelist={\"127.0.0.1\"} --ip\u767d\u540d\u5355\uff0c\u591a\u4e2aip\u7528\u9017\u53f7\u5206\u9694 ipBlocklist={\"1.0.0.1\"} --ip\u9ed1\u540d\u5355\uff0c\u591a\u4e2aip\u7528\u9017\u53f7\u5206\u9694 CCDeny=\"on\" --\u662f\u5426\u5f00\u542f\u62e6\u622acc\u653b\u51fb(\u9700\u8981nginx.conf\u7684http\u6bb5\u589e\u52a0lua_shared_dict limit 10m;) CCrate = \"100/60\" --\u8bbe\u7f6ecc\u653b\u51fb\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u79d2. --\u9ed8\u8ba41\u5206\u949f\u540c\u4e00\u4e2aIP\u53ea\u80fd\u8bf7\u6c42\u540c\u4e00\u4e2a\u5730\u5740100\u6b21 html=[[Please go away~~]] --\u8b66\u544a\u5185\u5bb9,\u53ef\u5728\u4e2d\u62ec\u53f7\u5185\u81ea\u5b9a\u4e49 5 \u4fee\u6539 waf/init.lua \u6587\u4ef6 \u00b6 \u66ff\u6362sys_html \u51fd\u6570\uff1a function say_html() if Redirect then ngx.header.content_type = \"text/html;charset=UTF-8\" ngx.status = ngx.HTTP_FORBIDDEN ngx.say(html) ngx.exit(ngx.status) end end \u66ff\u6362denycc \u51fd\u6570\uff1a function denycc() if CCDeny then local uri=ngx.var.uri CCcount=tonumber(string.match(CCrate,'(.*)/')) CCseconds=tonumber(string.match(CCrate,'/(.*)')) local token = getClientIp()..uri local limit = ngx.shared.limit local req,_=limit:get(token) if req then if req > CCcount then ngx.header.content_type = \"application/json;charset=UTF-8\" local ret={returncode='22000',messages='\u8bf7\u6c42\u62d2\u7edd,\u8bf7\u7a0d\u540e\u518d\u8bd5',body={}} --ngx.header['Content-Type']=\"text/html;charset=UTF-8\" ngx.say(json.encode(ret)) ngx.exit(200) return true else limit:incr(token,1) end else limit:set(token,1,CCseconds) end end return false end 6. \u542f\u7528waf \u00b6 \u7136\u540e\u91cd\u542fnginx,\u6216reload \u5373\u53ef: /user/local/nginx/sbin/nginx -s reload 7. \u6d4b\u8bd5 \u00b6 curl http://www.test.cn/test/index?id=../etc/passwd \u8fd4\u56de\uff1a{\"retcode\":\"21000\",\"messages\":\"\u8bf7\u6c42\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5\",\"body\":{}} \u8bf4\u660e\u751f\u6548","title":"Openresty\u589e\u52a0waf\u914d\u7f6e"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#1-ngx-lua-waf","text":"\u9632\u6b62sql\u6ce8\u5165\uff0c\u672c\u5730\u5305\u542b\uff0c\u90e8\u5206\u6ea2\u51fa\uff0cfuzzing\u6d4b\u8bd5\uff0cxss,SSRF\u7b49web\u653b\u51fb \u9632\u6b62svn/\u5907\u4efd\u4e4b\u7c7b\u6587\u4ef6\u6cc4\u6f0f \u9632\u6b62ApacheBench\u4e4b\u7c7b\u538b\u529b\u6d4b\u8bd5\u5de5\u5177\u7684\u653b\u51fb \u5c4f\u853d\u5e38\u89c1\u7684\u626b\u63cf\u9ed1\u5ba2\u5de5\u5177\uff0c\u626b\u63cf\u5668 \u5c4f\u853d\u5f02\u5e38\u7684\u7f51\u7edc\u8bf7\u6c42 \u5c4f\u853d\u56fe\u7247\u9644\u4ef6\u7c7b\u76ee\u5f55php\u6267\u884c\u6743\u9650 \u9632\u6b62webshell\u4e0a\u4f20","title":"1. Ngx lua waf \u8bf4\u660e"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#2-waf","text":"\u4f7f\u7528git git clone https://github.com/loveshell/ngx_lua_waf.git \u4f7f\u7528wget wget https://github.com/loveshell/ngx_lua_waf/archive/master.zip","title":"2. \u4e0b\u8f7d waf"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#3","text":"\u4e0b\u8f7d\u89e3\u538b\u540e\uff0c\u5c06\u6574 ngx_lua_waf \u653e\u5230 nginx conf \u76ee\u5f55\u4e2d\uff0c\u5e76\u547d\u540d\u4e3a waf;","title":"3. \u5b89\u88c5"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#4","text":"nginx\u5b89\u88c5\u8def\u5f84\u5047\u8bbe\u4e3a:/usr/local/nginx/conf/ \uff1b\u4ee5\u4e0b\u90fd\u5c06\u4ee5\u6b64\u914d\u7f6e\u4e3a\u4f8b\u8fdb\u884c\u8bf4\u660e","title":"4. \u914d\u7f6e"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#41-nginxconfhttp","text":"lua_package_path \"/usr/local/nginx/conf/waf/?.lua\"; lua_shared_dict limit 10m; init_by_lua_file /usr/local/nginx/conf/waf/init.lua; access_by_lua_file /usr/local/nginx/conf/waf/waf.lua;","title":"4.1. \u5728nginx.conf\u7684http\u6bb5\u6dfb\u52a0"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#42-configlua","text":"--\u914d\u7f6ewaf\u89c4\u5219\u76ee\u5f55 RulePath = \"/usr/local/nginx/conf/waf/wafconf/\" --\u4fee\u6539\u5931\u8d25\u63d0\u793a html=[[{\"retcode\":\"21000\",\"messages\":\"\u8bf7\u6c42\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5\",\"body\":{}}]] --\u5f00\u542fcc\u653b\u51fb\uff0c\u9700\u8981\u5728nginx.conf http \u6bb5\u914d\u7f6elua_shared_dict CCDeny=\"on\" -- \u8bbe\u7f6ecc\u653b\u51fb\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u79d2 \uff08\u5982\uff1a\u540c\u4e00\u4e2aip\u8bf7\u6c42\u540c\u4e00\u4e2a\u5730\u5740\uff0c\u6bcf\u79d2\u6700\u591a\u8bf7\u6c4250\u6b21\uff09 CCrate = \"50/1\"","title":"4.2. \u914d\u7f6econfig.lua"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#43","text":"RulePath = \"/usr/local/nginx/conf/waf/wafconf/\" --\u89c4\u5219\u5b58\u653e\u76ee\u5f55 attacklog = \"off\" --\u662f\u5426\u5f00\u542f\u653b\u51fb\u4fe1\u606f\u8bb0\u5f55\uff0c\u9700\u8981\u914d\u7f6elogdir logdir = \"/usr/local/nginx/logs/hack/\" --log\u5b58\u50a8\u76ee\u5f55\uff0c\u8be5\u76ee\u5f55\u9700\u8981\u7528\u6237\u81ea\u5df1\u65b0\u5efa\uff0c\u5207\u9700\u8981nginx\u7528\u6237\u7684\u53ef\u5199\u6743\u9650 UrlDeny=\"on\" --\u662f\u5426\u62e6\u622aurl\u8bbf\u95ee Redirect=\"on\" --\u662f\u5426\u62e6\u622a\u540e\u91cd\u5b9a\u5411 CookieMatch = \"on\" --\u662f\u5426\u62e6\u622acookie\u653b\u51fb postMatch = \"on\" --\u662f\u5426\u62e6\u622apost\u653b\u51fb whiteModule = \"on\" --\u662f\u5426\u5f00\u542fURL\u767d\u540d\u5355 black_fileExt={\"php\",\"jsp\"} --\u586b\u5199\u4e0d\u5141\u8bb8\u4e0a\u4f20\u6587\u4ef6\u540e\u7f00\u7c7b\u578b ipWhitelist={\"127.0.0.1\"} --ip\u767d\u540d\u5355\uff0c\u591a\u4e2aip\u7528\u9017\u53f7\u5206\u9694 ipBlocklist={\"1.0.0.1\"} --ip\u9ed1\u540d\u5355\uff0c\u591a\u4e2aip\u7528\u9017\u53f7\u5206\u9694 CCDeny=\"on\" --\u662f\u5426\u5f00\u542f\u62e6\u622acc\u653b\u51fb(\u9700\u8981nginx.conf\u7684http\u6bb5\u589e\u52a0lua_shared_dict limit 10m;) CCrate = \"100/60\" --\u8bbe\u7f6ecc\u653b\u51fb\u9891\u7387\uff0c\u5355\u4f4d\u4e3a\u79d2. --\u9ed8\u8ba41\u5206\u949f\u540c\u4e00\u4e2aIP\u53ea\u80fd\u8bf7\u6c42\u540c\u4e00\u4e2a\u5730\u5740100\u6b21 html=[[Please go away~~]] --\u8b66\u544a\u5185\u5bb9,\u53ef\u5728\u4e2d\u62ec\u53f7\u5185\u81ea\u5b9a\u4e49","title":"4.3. \u5176\u4ed6\u8be6\u7ec6\u914d\u7f6e\u8bf4\u660e"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#5-wafinitlua","text":"\u66ff\u6362sys_html \u51fd\u6570\uff1a function say_html() if Redirect then ngx.header.content_type = \"text/html;charset=UTF-8\" ngx.status = ngx.HTTP_FORBIDDEN ngx.say(html) ngx.exit(ngx.status) end end \u66ff\u6362denycc \u51fd\u6570\uff1a function denycc() if CCDeny then local uri=ngx.var.uri CCcount=tonumber(string.match(CCrate,'(.*)/')) CCseconds=tonumber(string.match(CCrate,'/(.*)')) local token = getClientIp()..uri local limit = ngx.shared.limit local req,_=limit:get(token) if req then if req > CCcount then ngx.header.content_type = \"application/json;charset=UTF-8\" local ret={returncode='22000',messages='\u8bf7\u6c42\u62d2\u7edd,\u8bf7\u7a0d\u540e\u518d\u8bd5',body={}} --ngx.header['Content-Type']=\"text/html;charset=UTF-8\" ngx.say(json.encode(ret)) ngx.exit(200) return true else limit:incr(token,1) end else limit:set(token,1,CCseconds) end end return false end","title":"5 \u4fee\u6539 waf/init.lua \u6587\u4ef6"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#6-waf","text":"\u7136\u540e\u91cd\u542fnginx,\u6216reload \u5373\u53ef: /user/local/nginx/sbin/nginx -s reload","title":"6. \u542f\u7528waf"},{"location":"DevOps/01%20Nginx/Openresty%20adds%20WAF%20configuration/#7","text":"curl http://www.test.cn/test/index?id=../etc/passwd \u8fd4\u56de\uff1a{\"retcode\":\"21000\",\"messages\":\"\u8bf7\u6c42\u5931\u8d25,\u8bf7\u7a0d\u540e\u518d\u8bd5\",\"body\":{}} \u8bf4\u660e\u751f\u6548","title":"7. \u6d4b\u8bd5"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/","text":"\u4e00.\u57fa\u672c\u4fe1\u606f \u00b6 1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f \u00b6 ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 172.16.200.71 zk1\u3001codis-dashboard\u3001codis-fe\u3001codis-ha\u3001 codis-proxy1\u3001group1_M(6379)\u3001group2_S(6380) 172.16.200.72 zk2\u3001codis-proxy2\u3001group2_M(6379)\u3001group3_S(6380) 172.16.200.73 zk3\u3001codis-proxy3\u3001group3_M(6379)\u3001group1_S(6380) \u53c2\u8003\u6587\u6863\uff1a https://github.com/CodisLabs/codis/blob/release3.1/doc/tutorial_zh.md 2. \u73af\u5883\u4fe1\u606f \u00b6 2.1 codis\u7248\u672c\uff1a3.1 \u7248\u672c \u00b6 git clone https://github.com/CodisLabs/codis.git -b release3.1 2.2 Go\u4f7f\u7528\u7248\u672c\uff1ago1.5.2.Linux-amd64.tar.gz \u00b6 https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz 2.3 jdk\u7248\u672c\uff1ajdk1.8.0_11 \u00b6 http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz 2.4 zookeeper\u7248\u672c\uff1azookeeper-3.4.8.tar.gz \u00b6 http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz \u4e8c.\u90e8\u7f72codis \u00b6 1. \u76f8\u5173\u7ec4\u4ef6\u5b89\u88c5\u914d\u7f6e \u00b6 1.1 \u5b89\u88c5\u6240\u9700\u4f9d\u8d56\u5305 \u00b6 \u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c yum install -y gcc make gcc-c++ automake lrzsz openssl-devel zlib-* bzip2-* readline* zlib-* bzip2-* git nmap unzip wget lsof xz net-tools mercurial vim 1.2 \u4fee\u6539\u5185\u6838 \u00b6 \u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c vi /etc/sysctl.conf vm.overcommit_memory = 1 sysctl vm.overcommit_memory=1 \u624b\u5de5\u6267\u884c\uff1a echo never > /sys/kernel/mm/transparent_hugepage/enabled \u5e76\u52a0\u5230 /etc/rc.local\u4e2d 2.\u5b89\u88c5go(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 2.1 \u4e0b\u8f7dgo \u00b6 cd /usr/local/src wget https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz 2.2 \u89e3\u5305 \u00b6 cd /usr/local/src tar -C /usr/local -xzf go1.5.2.linux-amd64.tar.gz 2.3 \u65b0\u5efagopath \u00b6 mkdir /usr/local/gopkg 2.4 \u914d\u7f6ego\u73af\u5883\u53d8\u91cf \u00b6 vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export GOROOT=/usr/local/go export GOPATH=/usr/local/gopkg export PATH=$GOROOT/bin:$PATH \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#go version go version go1.5.2 linux/amd64 2.5 godep\u5b89\u88c5 \u00b6 \u5b89\u88c5godep\u5751\u6bd4\u8f83\u591a\uff0c\u53ef\u4f7f\u7528\u4e00\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b89\u88c5 \u79bb\u7ebf\u5b89\u88c5 godep \u65b9\u6cd5\uff1a \u8fd0\u884c git clone https://github.com/tools/godep.git \u4e0b\u8f7d godep \u6e90\u7801\uff1b \u5c06 godep \u76ee\u5f55\u79fb\u52a8\u5230 /usr/loca/gopkg/src/github.com/tools/godep\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\uff1b \u8fd0\u884c\u547d\u4ee4 go install ./\uff0c\u8be5\u547d\u4ee4\u4f1a\u5c06 godep \u751f\u6210\u5230/usr/loca/gopkg/bin \u4e0b\u3002 \u5c06\u7f16\u8bd1\u597d\u7684godep\u4e0a\u4f20\u5230/usr/bin\u4e0b \u7ecf\u8fc7\u5bf9\u6bd4\uff0c\u6211\u9009\u62e9\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u76f4\u63a5\u5c06\u7f16\u8bd1\u597d\u7684godep\u4e0a\u4f20\u5230/usr/bin/ \u67e5\u770bgodep\u547d\u4ee4\u8def\u5f84 [root@codis01 ~]# which godep /usr/bin/godep \u67e5\u770bgodep\u7248\u672c [root@codis01 ~]# godep version godep v1 (linux/amd64/go1.4.2) 3.\u5b89\u88c5jdk(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#java -version java version \"1.8.0_111\" Java(TM) SE Runtime Environment (build 1.8.0_111-b14) Java HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode) 4.\u5b89\u88c5zookeeper(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 4.1 \u5b89\u88c5zookeeper \u00b6 cd /usr/local/src/ tar -C /usr/local/ -xzf zookeeper-3.4.8.tar.gz cd /usr/local/zookeeper-3.4.8 ln -s zookeeper-3.4.8 zookeeper 4.2 \u751f\u6210\u914d\u7f6e\u6587\u4ef6 \u00b6 cd /usr/local/zookeeper cp conf/zoo_sample.cfg conf/zoo.cfg 4.3 \u4fee\u6539zookeeper\u914d\u7f6e\u6587\u4ef6 \u00b6 vim /usr/local/zookeeper/conf/zoo.cfg \u4fee\u6539\u4ee5\u4e0b\u5185\u5bb9 maxClientCnxns=60 tickTime=2000 initLimit=10 syncLimit=5 dataDir=/usr/local/zookeeper/data dataLogDir=/data/logs/zookeeper clientPort=2181 server.1=172.15.200.71:2888:3888 server.2=172.15.200.72:2888:3888 server.3=172.15.200.73:2888:3888 2888\u8868\u793azookeeper\u7a0b\u5e8f\u76d1\u542c\u7aef\u53e3\uff0c3888\u8868\u793azookeeper\u9009\u4e3e\u901a\u4fe1\u7aef\u53e3\u3002 4.4 \u521b\u5efa\u6240\u9700\u6587\u4ef6\u5939 \u00b6 mkdir -p /usr/local/zookeeper/data mkdir -p /data/logs/zookeeper 4.5 \u751f\u6210myid \u00b6 \u4e3b\u673a(172.16.200.71) echo \"1\" >/usr/local/zookeeper/data/myid ##\u751f\u6210ID\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c myid\u5bf9\u5e94\u7684zoo.cfg\u7684server.ID\uff0c\u6bd4\u5982\u7b2c\u4e8c\u53f0zookeeper\u4e3b\u673a\u5bf9\u5e94\u7684myid\u5e94\u8be5\u662f2 \u4e3b\u673a(172.16.200.72) echo \"2\" >/usr/local/zookeeper/data/myid \u4e3b\u673a(172.16.200.73) echo \"3\" >/usr/local/zookeeper/data/myid 4.6 \u542f\u52a8zookeeper \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh start# 4.7 \u5173\u95edzookeeper \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh stot 4.8 \u67e5\u770bzk\u72b6\u6001 \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh status 4.9 \u67e5\u770b\u76f8\u5173\u4fe1\u606f\uff1a \u00b6 /usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181 5.\u5b89\u88c5codis(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 5.1 \u4e0b\u8f7dcodis \u00b6 mkdir -p /usr/local/gopkg/src/github.com/CodisLabs/ cd /usr/local/gopkg/src/github.com/CodisLabs/ git clone https://github.com/CodisLabs/codis.git -b release3.1 5.2 \u7f16\u8bd1codis \u00b6 cd /usr/local/gopkg/src/github.com/CodisLabs/codis make 5.3 \u67e5\u770bbin \u00b6 [root@codis01 codis]# ll bin/ \u603b\u7528\u91cf 82728 drwxr-xr-x 4 root root 111 12\u6708 18 21:54 assets -rwxr-xr-x 1 root root 18261200 12\u6708 18 21:54 codis-admin -rwxr-xr-x 1 root root 19101304 12\u6708 18 21:54 codis-dashboard -rwxr-xr-x 1 root root 17655424 12\u6708 18 21:54 codis-fe -rwxr-xr-x 1 root root 10032096 12\u6708 18 21:54 codis-ha -rwxr-xr-x 1 root root 11202080 12\u6708 18 21:54 codis-proxy -rwxr-xr-x 1 root root 4167892 12\u6708 18 21:54 codis-server -rwxr-xr-x 1 root root 2073794 12\u6708 18 21:54 redis-benchmark -rwxr-xr-x 1 root root 2197701 12\u6708 18 21:54 redis-cli -rw-r--r-- 1 root root 148 12\u6708 18 21:54 version [root@zt-redis01 codis]# \u6267\u884c\u5168\u90e8\u6307\u4ee4\u540e\uff0c\u4f1a\u5728 bin \u6587\u4ef6\u5939\u5185\u751f\u6210 codis-admin\u3001codis-dashboard\u3001codis-fe\u3001codis-ha\u3001codis-proxy\u3001codis-server \u516d\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u53e6\u5916, bin/assets \u6587\u4ef6\u5939\u662f codis-dashboard http \u670d\u52a1\u9700\u8981\u7684\u524d\u7aef\u8d44\u6e90, \u9700\u8981\u548ccodis-dashboard \u653e\u7f6e\u5728\u540c\u4e00\u6587\u4ef6\u5939\u4e0b 5.4 \u521b\u5efacodis\u6240\u9700\u76ee\u5f55 \u00b6 mkdir -p /usr/local/codis mkdir -p /data/logs/codis mkdir -p /data/codis/redis_conf mkdir -p /data/components/redis 5.5 \u62f7\u8d1dcodis\u7684bin\u76ee\u5f55 \u00b6 cp -r /usr/local/gopkg/src/github.com/CodisLabs/codis/bin /usr/local/codis/ \u7531\u4e8ecodis \u672c\u8eab\u53ea\u6709codis-server \uff0c\u6ca1\u6709Redis-cli\uff0c\u9700\u8981\u628aredis 2.8.21 \u5b89\u88c5\u5305\u91cc\u9762\u7684redis-cli copy\u5230/usr/local/codis/bin \u4e0b\u9762: cd /usr/local/gopkg/src/github.com/CodisLabs/codis/extern/redis-2.8.21/src cp redis-cli /usr/local/codis/bin 5.6 \u914d\u7f6e\u548c\u542f\u52a8\u5404\u7ec4\u4ef6 \u00b6 \u914d\u7f6e\u548c\u542f\u52a8 Codis\u7684Redis \u914d\u7f6e\u6587\u4ef6 : /usr/local/codis/redis_conf/redis6379.conf \u8bbe\u7f6e\u5bc6\u7801: xxxxx \u8003\u8651\u6027\u80fd\uff0c\u4e3b\u5e93\u5173\u95edaof\u548crdp\uff0c\u4ece\u5e93\u53ea\u5f00\u542faof: cd /usr/local/gopkg/src/github.com/CodisLabs/codis/extern/redis-2.8.21/ cp redis.conf /usr/local/codis/conf/redis6379.conf cp redis.conf /usr/local/codis/conf/redis6380.conf \u5c06redis6379.conf\u66f4\u6539\u4ee5\u4e0b\u53c2\u6570(\u4e3b\u5e93)\uff1a daemonize yes pidfile /usr/locai/codis/run/redis6379.pid port 6379 timeout 86400 tcp-keepalive 60 loglevel notice logfile /data/logs/codis/redis6379.log databases 16 save \"\" #save 900 1 ----\u5173\u95edaof #save 300 10 #save 60 10000 stop-writes-on-bgsave-error no rdbcompression yes dbfilename dump6379.rdb dir /data/codis/redis_data_6379 masterauth \"xxxxx\" slave-serve-stale-data yes repl-disable-tcp-nodelay no slave-priority 100 requirepass \"xxxxx\" maxmemory 10gb maxmemory-policy allkeys-lru appendonly no appendfsync everysec no-appendfsync-on-rewrite yes auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb lua-time-limit 5000 slowlog-log-slower-than 10000 slowlog-max-len 128 hash-max-ziplist-entries 512 hash-max-ziplist-value 64 list-max-ziplist-entries 512 list-max-ziplist-value 64 set-max-intset-entries 512 zset-max-ziplist-entries 128 zset-max-ziplist-value 64 client-output-buffer-limit normal 0 0 0 client-output-buffer-limit slave 0 0 0 client-output-buffer-limit pubsub 0 0 0 hz 10 aof-rewrite-incremental-fsync yes repl-backlog-size 33554432 \u5c06redis6380.conf\u66f4\u6539\u4ee5\u4e0b\u53c2\u6570(\u4ece\u5e93)\uff1a daemonize yes pidfile /usr/local/codis/run/redis6380.pid port 6380 timeout 86400 tcp-keepalive 60 loglevel notice logfile /data/logs/codis/redis6380.log databases 16 save \"\" #save 900 1 ----\u5173\u95edaof #save 300 10 #save 60 10000 stop-writes-on-bgsave-error no rdbcompression yes dbfilename dump6379.rdb dir /data/codis/redis_data_6380 masterauth \"xxxxx\" slave-serve-stale-data yes repl-disable-tcp-nodelay no slave-priority 100 requirepass \"xxxxx\" maxmemory 10gb maxmemory-policy allkeys-lru appendonly no appendfsync everysec no-appendfsync-on-rewrite yes auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb lua-time-limit 5000 slowlog-log-slower-than 10000 slowlog-max-len 128 hash-max-ziplist-entries 512 hash-max-ziplist-value 64 list-max-ziplist-entries 512 list-max-ziplist-value 64 set-max-intset-entries 512 zset-max-ziplist-entries 128 zset-max-ziplist-value 64 client-output-buffer-limit normal 0 0 0 client-output-buffer-limit slave 0 0 0 client-output-buffer-limit pubsub 0 0 0 hz 10 aof-rewrite-incremental-fsync yes repl-backlog-size 33554432 5.7 \u542f\u52a8redis \u00b6 /usr/local/codis/bin/codis-server /usr/local/codis/redis_conf/redis6379.conf & /usr/local/codis/bin/codis-server /usr/local/codis/redis_conf/redis6380.conf & \u4e09. \u914d\u7f6ecodis \u00b6 1. Codis Dashboard \u00b6 Coddis3.0\u7684dashboard\u4e0ecodis 2.0\u6709\u6240\u4e0d\u540c\uff0c\u4f5c\u4e3a\u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff0c\u5b83\u652f\u6301codis-proxy,codis-server\u7684\u6dfb\u52a0\u3001\u5220\u9664\u4ee5\u53ca\u6570\u636e\u8fc1\u79fb\u7b49\u64cd\u4f5c\u3002\u5728\u96c6\u7fa4\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0ccodis-dashboard \u7ef4\u62a4\u96c6\u7fa4\u4e0b\u6240\u6709 codis-proxy \u7684\u72b6\u6001\u4e00\u81f4\u6027\u3002\u6709\u4ee5\u4e0b\u4e24\u70b9\u6ce8\u610f\u4e8b\u9879\uff1a * \u5bf9\u4e8e\u540c\u4e00\u4e2a\u4e1a\u52a1\u96c6\u7fa4\u800c\u8a00\uff0c\u540c\u4e00\u4e2a\u65f6\u523bcodis-dashboard\u53ea\u80fd\u67090\u4e2a\u6216\u80051\u4e2a\uff1b * \u6240\u6709\u5bf9\u96c6\u7fa4\u7684\u4fee\u6539\u90fd\u5fc5\u987b\u901a\u8fc7codis-dashboard\u5b8c\u6210\u3002 1.1 \u914d\u7f6eCodis Dashboard \u00b6 \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6dashboard.toml\u53ef\u7531codis-dashboard\u751f\u6210\u3002 #/usr/local/codis/bin/codis-dashboard --default-config | tee dashboard.toml\uff08\u5c31\u662fdashboard.conf\uff09 \u751f\u6210dashboard.toml\u6587\u4ef6\uff0c\u53ef\u81ea\u884c\u914d\u7f6e\u3002 # Set Coordinator, only accept\"zookeeper\"&\"etcd\" coordinator_name = \"zookeeper\" coordinator_addr = \"172.16.200.71:2181,172.16.200.72:2181,172.16.200.73:2181\" #zookeeper\u662f\u96c6\u7fa4\u7684\u8bdd\u5c31\u5199\u591a\u4e2aip\u548c\u7aef\u53e3\u7528\u9017\u53f7\u9694\u5f00 # Set Codis Product {Name/Auth} product_name = \"codis-demo\" product_auth = \"\" # Set bind address for admin(rpc), tcp only. admin_addr = \"0.0.0.0:18080\" \u53c2\u6570\u8bf4\u660e\uff1a coordinator_name \u5916\u90e8\u5b58\u50a8\u7c7b\u578b\uff0c\u63a5\u53d7 zookeeper/etcd coordinator_addr \u5916\u90e8\u5b58\u50a8\u5730\u5740 product_name \u96c6\u7fa4\u540d\u79f0\uff0c\u6ee1\u8db3\u6b63\u5219 \\w[\\w\\.\\-]* product_auth \u96c6\u7fa4\u5bc6\u7801\uff0c\u9ed8\u8ba4\u4e3a\u7a7a admin_addr RESTful API \u7aef\u53e3 1.2 \u542f\u52a8Codis Dashboard \u00b6 nohup /usr/local/codis/bin/codis-dashboard --ncpu=4 --config=dashboard.toml\uff08\u8fd9\u91cc\u6307\u5b9adashboard.conf\u4e5f\u53ef\u4ee5\uff09 --log=dashboard.log --log-level=WARN & #bin/codis-dashboard -h Usage: codis-dashboard [--ncpu=N][--config=CONF] [--log=FILE] [--log-level=LEVEL] [--host-admin=ADDR] codis-dashboard --default-config codis-dashboard --version \u53c2\u6570\u8bf4\u660e\uff1a --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -c CONF, --config=CONF \u6307\u5b9a\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6elog\u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN \u6b63\u5e38\u5173\u95eddashboard\u547d\u4ee4\uff1a bin/codis-admin --dashboard=172.16.200.71:18080 --shutdown 2. Codis Proxy \u00b6 \u5bf9\u4e8e\u540c\u4e00\u4e2a\u4e1a\u52a1\u96c6\u7fa4\u800c\u8a00\uff0c\u53ef\u4ee5\u540c\u65f6\u90e8\u7f72\u591a\u4e2acodis-proxy \u5b9e\u4f8b\uff1b \u4e0d\u540c codis-proxy \u4e4b\u95f4\u7531 codis-dashboard \u4fdd\u8bc1\u72b6\u6001\u540c\u6b65\u3002 2.1 \u914d\u7f6eproxy \u00b6 \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 proxy.toml \u53ef\u7531 codis-proxy \u751f\u6210\u3002 /usr/local/codis/bin/codis-proxy --default-config | tee proxy.toml\uff08proxy.conf\uff09 \u751f\u6210proxy.toml\u53ef\u81ea\u884c\u914d\u7f6e\u3002 # Set Codis Product {Name/Auth}. product_name = \"codis-demo\" product_auth = \"\" # Set bind address for admin(rpc), tcp only. admin_addr = \"0.0.0.0:11080\" # Set bind address for proxy, proto_type can be \"tcp\",\"tcp4\", \"tcp6\", \"unix\" or \"unixpacket\". proto_type = \"tcp4\" proxy_addr = \"0.0.0.0:19000\" # Set jodis address & session timeout. jodis_addr = \"\" jodis_timeout = 10 # Proxy will ping-pong backend redis periodly to keep-alive backend_ping_period = 5 # If there is no request from client for a long time, the connectionwill be droped. Set 0 to disable. session_max_timeout = 1800 # Buffer size for each client connection. session_max_bufsize = 131072 # Number of buffered requests for each client connection. # Make sure this is higher than the max number of requests for eachpipeline request, or your client may be blocked. session_max_pipeline = 1024 # Set period between keep alives. Set 0 to disable. session_keepalive_period = 60 \u53c2\u6570\u8bf4\u660e\uff1a product_name \u96c6\u7fa4\u540d\u79f0\uff0c\u53c2\u8003dashboard\u53c2\u6570\u8bf4\u660e product_auth \u96c6\u7fa4\u5bc6\u7801\uff0c\u9ed8\u8ba4\u4e3a\u7a7a admin_addr RESTfulAPI \u7aef\u53e3 proto_type Redis \u7aef\u53e3\u7c7b\u578b\uff0c\u63a5\u53d7tcp/tcp4/tcp6/unix/unixpacket proxy_addr Redis \u7aef\u53e3\u5730\u5740\u6216\u8005\u8def\u5f84 jodis_addr Jodis\u6ce8\u518czookeeper\u5730\u5740 jodis_timeout Jodis\u6ce8\u518csessiontimeout\u65f6\u95f4\uff0c\u5355\u4f4dsecond jodis_compatible Jodis\u6ce8\u518c zookeeper \u7684\u8def\u5f84 backend_ping_period \u4e0ecodis-server \u63a2\u6d3b\u5468\u671f\uff0c\u5355\u4f4dsecond\uff0c0\u8868\u793a\u7981\u6b62 session_max_timeout \u4e0eclient \u8fde\u63a5\u6700\u5927\u8bfb\u8d85\u65f6\uff0c\u5355\u4f4dsecond\uff0c0\u8868\u793a\u7981\u6b62 session_max_bufsize \u4e0eclient \u8fde\u63a5\u8bfb\u5199\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5355\u4f4dbyte session_max_pipeline \u4e0eclient \u8fde\u63a5\u6700\u5927\u7684pipeline\u5927\u5c0f session_keepalive_period \u4e0eclient \u7684 tcp keepalive\u5468\u671f\uff0c\u4ec5tcp\u6709\u6548\uff0c0\u8868\u793a\u7981\u6b62 2.2 \u542f\u52a8proxy \u00b6 nohup /usr/local/codis/bin/codis-proxy --ncpu=4 --config=proxy.toml \\ --log=proxy.log --log-level=WARN & codis-proxy\u542f\u52a8\u540e\uff0c\u5904\u4e8e waiting \u72b6\u6001\uff0c\u76d1\u542cproxy_addr \u5730\u5740\uff0c\u4f46\u662f\u4e0d\u4f1aaccept\u8fde\u63a5\u3002\u6dfb\u52a0\u5230\u96c6\u7fa4\u5e76\u5b8c\u6210\u96c6\u7fa4\u72b6\u6001\u7684\u540c\u6b65\uff0c\u624d\u80fd\u6539\u53d8\u72b6\u6001\u4e3aonline\u3002\u6dfb\u52a0\u7684\u65b9\u6cd5\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a \u901a\u8fc7codis-fe\u6dfb\u52a0\uff1a\u901a\u8fc7Add Proxy\u6309\u94ae\uff0c\u5c06admin_addr\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\uff1b \u901a\u8fc7codis-admin\u547d\u4ee4\u884c\u5de5\u5177\u6dfb\u52a0\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a \u6700\u597d\u91c7\u7528\u901a\u8fc7codis-fe\u6dfb\u52a0 /usr/local/codis/bin/codis-admin --dashboard=172.16.200.71:18080 --create-proxy -x 172.16.200.71:11080 \u5176\u4e2d172.16.200.71:18080 \u4ee5\u53ca172.16.200.71:11080 \u5206\u522b\u4e3adashboard\u548cproxy\u7684admin_addr \u5730\u5740\u3002 \u6dfb\u52a0\u8fc7\u7a0b\u4e2d\uff0cdashboard\u4f1a\u5b8c\u6210\u5982\u4e0b\u4e00\u7cfb\u5217\u52a8\u4f5c\uff1a \u2460\u3000\u83b7\u53d6 proxy \u4fe1\u606f\uff0c\u5bf9\u96c6\u7fa4name\u4ee5\u53caauth\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5e76\u5c06\u5176\u4fe1\u606f\u5199\u5165\u5230\u5916\u90e8\u5b58\u50a8\u4e2d\uff1b \u2461\u3000\u540c\u6b65slots\u72b6\u6001\uff1b \u2462\u3000\u6807\u8bb0proxy\u72b6\u6001\u4e3aonline\uff0c\u6b64\u540eproxy\u5f00\u59cbaccept\u8fde\u63a5\u5e76\u5f00\u59cb\u63d0\u4f9b\u670d\u52a1\u3002 \u6b63\u5e38\u5173\u95edproxy\u64cd\u4f5c /usr/local/codis/bin/codis-admin --proxy=172.16.200.71:11080 --auth=\"xxxxx\"(\u6709\u5c31\u52a0\uff0c\u6ca1\u6709\u5c31\u4e0d\u52a0) --shutdown /usr/local/codis/bin/codis-proxy -h Usage: codis-proxy [--ncpu=N][--config=CONF] [--log=FILE] [--log-level=LEVEL] [--host-admin=ADDR] [--host-proxy=ADDR] [--ulimit=NLIMIT] codis-proxy --default-config codis-proxy --version Options: --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -c CONF, --config=CONF \u6307\u5b9a\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6e log \u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN --ulimit=NLIMIT \u68c0\u67e5ulimit -n\u7684\u7ed3\u679c\uff0c\u786e\u4fdd\u8fd0\u884c\u65f6\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u4e0d\u5c11\u4e8eNLIMIT 3. Codis FE \u00b6 3.1 \u96c6\u7fa4\u7ba1\u7406\u754c\u9762 \u00b6 \u591a\u4e2a\u96c6\u7fa4\u5b9e\u4f8b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u524d\u7aef\u5c55\u793a\u9875\u9762\uff1b \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u7ba1\u7406\u540e\u7aefcodis-dashboard\u5217\u8868\uff0c\u914d\u7f6e\u6587\u4ef6\u53ef\u81ea\u52a8\u66f4\u65b0\u3002 3.2 \u914d\u7f6ecodis-fe \u00b6 \u914d\u7f6e\u6587\u4ef6codis.json\uff08fe.conf\uff09\u53ef\u4ee5\u624b\u52a8\u7f16\u8f91\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7codis-admin\u4ece\u5916\u90e8\u5b58\u50a8\u4e2d\u62c9\u53d6\u3002 /usr/local/codis/bin/codis-admin --dashboard-list --zookeeper=172.16.200.71:2181 | tee codis.json [ { \"name\": \"codis-demo\", \"dashboard\": \"127.0.0.1:18080\" } ] 3.3 \u542f\u52a8codis-fe \u00b6 nohup /usr/local/codis/bin/codis-fe --ncpu=4 --log=fe.log --log-level=WARN \\ --dashboard-list=codis.json --listen=0.0.0.0:18090 &#(\u8fd9\u91cc\u6307\u5b9a\u7aef\u53e3\u53f7\u4e3a18090\u662f\u4e3a\u4e86\u9632\u6b62\u548ccodis-dashboard\u7684\u7aef\u53e3\u53f718080\u51b2\u7a81) /usr/local/codis/bin/codis-fe -h Usage: codis-fe [--ncpu=N][--log=FILE] [--log-level=LEVEL] --dashboard-list=LIST --listen=ADDR codis-fe --version Options: --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -d LIST,--dashboard-list=LIST \u914d\u7f6e\u6587\u4ef6\uff0c\u80fd\u591f\u81ea\u52a8\u5237\u65b0 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6e log \u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN --listen=ADDR HTTP \u670d\u52a1\u7aef\u53e3 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u5728\u5730\u5740\u680f\u91cc\u8f93\u5165http://172.16.200.71:18090\uff0c\u901a\u8fc7\u7ba1\u7406\u754c\u9762\u64cd\u4f5cCodis\u3002","title":"Codis3.1 \u96c6\u7fa4\u642d\u5efa\uff08\u5305\u542bzookeeper\u96c6\u7fa4\uff09"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#_1","text":"","title":"\u4e00.\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#1","text":"ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 172.16.200.71 zk1\u3001codis-dashboard\u3001codis-fe\u3001codis-ha\u3001 codis-proxy1\u3001group1_M(6379)\u3001group2_S(6380) 172.16.200.72 zk2\u3001codis-proxy2\u3001group2_M(6379)\u3001group3_S(6380) 172.16.200.73 zk3\u3001codis-proxy3\u3001group3_M(6379)\u3001group1_S(6380) \u53c2\u8003\u6587\u6863\uff1a https://github.com/CodisLabs/codis/blob/release3.1/doc/tutorial_zh.md","title":"1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#2","text":"","title":"2. \u73af\u5883\u4fe1\u606f"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#21-codis31","text":"git clone https://github.com/CodisLabs/codis.git -b release3.1","title":"2.1 codis\u7248\u672c\uff1a3.1 \u7248\u672c"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#22-gogo152linux-amd64targz","text":"https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz","title":"2.2 Go\u4f7f\u7528\u7248\u672c\uff1ago1.5.2.Linux-amd64.tar.gz"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#23-jdkjdk180_11","text":"http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz","title":"2.3 jdk\u7248\u672c\uff1ajdk1.8.0_11"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#24-zookeeperzookeeper-348targz","text":"http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz","title":"2.4 zookeeper\u7248\u672c\uff1azookeeper-3.4.8.tar.gz"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#codis","text":"","title":"\u4e8c.\u90e8\u7f72codis"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#1_1","text":"","title":"1. \u76f8\u5173\u7ec4\u4ef6\u5b89\u88c5\u914d\u7f6e"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#11","text":"\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c yum install -y gcc make gcc-c++ automake lrzsz openssl-devel zlib-* bzip2-* readline* zlib-* bzip2-* git nmap unzip wget lsof xz net-tools mercurial vim","title":"1.1  \u5b89\u88c5\u6240\u9700\u4f9d\u8d56\u5305"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#12","text":"\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c vi /etc/sysctl.conf vm.overcommit_memory = 1 sysctl vm.overcommit_memory=1 \u624b\u5de5\u6267\u884c\uff1a echo never > /sys/kernel/mm/transparent_hugepage/enabled \u5e76\u52a0\u5230 /etc/rc.local\u4e2d","title":"1.2 \u4fee\u6539\u5185\u6838"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#2go","text":"","title":"2.\u5b89\u88c5go(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#21-go","text":"cd /usr/local/src wget https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz","title":"2.1 \u4e0b\u8f7dgo"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#22","text":"cd /usr/local/src tar -C /usr/local -xzf go1.5.2.linux-amd64.tar.gz","title":"2.2 \u89e3\u5305"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#23-gopath","text":"mkdir /usr/local/gopkg","title":"2.3 \u65b0\u5efagopath"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#24-go","text":"vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export GOROOT=/usr/local/go export GOPATH=/usr/local/gopkg export PATH=$GOROOT/bin:$PATH \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#go version go version go1.5.2 linux/amd64","title":"2.4 \u914d\u7f6ego\u73af\u5883\u53d8\u91cf"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#25-godep","text":"\u5b89\u88c5godep\u5751\u6bd4\u8f83\u591a\uff0c\u53ef\u4f7f\u7528\u4e00\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b89\u88c5 \u79bb\u7ebf\u5b89\u88c5 godep \u65b9\u6cd5\uff1a \u8fd0\u884c git clone https://github.com/tools/godep.git \u4e0b\u8f7d godep \u6e90\u7801\uff1b \u5c06 godep \u76ee\u5f55\u79fb\u52a8\u5230 /usr/loca/gopkg/src/github.com/tools/godep\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\uff1b \u8fd0\u884c\u547d\u4ee4 go install ./\uff0c\u8be5\u547d\u4ee4\u4f1a\u5c06 godep \u751f\u6210\u5230/usr/loca/gopkg/bin \u4e0b\u3002 \u5c06\u7f16\u8bd1\u597d\u7684godep\u4e0a\u4f20\u5230/usr/bin\u4e0b \u7ecf\u8fc7\u5bf9\u6bd4\uff0c\u6211\u9009\u62e9\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u76f4\u63a5\u5c06\u7f16\u8bd1\u597d\u7684godep\u4e0a\u4f20\u5230/usr/bin/ \u67e5\u770bgodep\u547d\u4ee4\u8def\u5f84 [root@codis01 ~]# which godep /usr/bin/godep \u67e5\u770bgodep\u7248\u672c [root@codis01 ~]# godep version godep v1 (linux/amd64/go1.4.2)","title":"2.5 godep\u5b89\u88c5"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#3jdk","text":"cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#java -version java version \"1.8.0_111\" Java(TM) SE Runtime Environment (build 1.8.0_111-b14) Java HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)","title":"3.\u5b89\u88c5jdk(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#4zookeeper","text":"","title":"4.\u5b89\u88c5zookeeper(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#41-zookeeper","text":"cd /usr/local/src/ tar -C /usr/local/ -xzf zookeeper-3.4.8.tar.gz cd /usr/local/zookeeper-3.4.8 ln -s zookeeper-3.4.8 zookeeper","title":"4.1 \u5b89\u88c5zookeeper"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#42","text":"cd /usr/local/zookeeper cp conf/zoo_sample.cfg conf/zoo.cfg","title":"4.2 \u751f\u6210\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#43-zookeeper","text":"vim /usr/local/zookeeper/conf/zoo.cfg \u4fee\u6539\u4ee5\u4e0b\u5185\u5bb9 maxClientCnxns=60 tickTime=2000 initLimit=10 syncLimit=5 dataDir=/usr/local/zookeeper/data dataLogDir=/data/logs/zookeeper clientPort=2181 server.1=172.15.200.71:2888:3888 server.2=172.15.200.72:2888:3888 server.3=172.15.200.73:2888:3888 2888\u8868\u793azookeeper\u7a0b\u5e8f\u76d1\u542c\u7aef\u53e3\uff0c3888\u8868\u793azookeeper\u9009\u4e3e\u901a\u4fe1\u7aef\u53e3\u3002","title":"4.3 \u4fee\u6539zookeeper\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#44","text":"mkdir -p /usr/local/zookeeper/data mkdir -p /data/logs/zookeeper","title":"4.4 \u521b\u5efa\u6240\u9700\u6587\u4ef6\u5939"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#45-myid","text":"\u4e3b\u673a(172.16.200.71) echo \"1\" >/usr/local/zookeeper/data/myid ##\u751f\u6210ID\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c myid\u5bf9\u5e94\u7684zoo.cfg\u7684server.ID\uff0c\u6bd4\u5982\u7b2c\u4e8c\u53f0zookeeper\u4e3b\u673a\u5bf9\u5e94\u7684myid\u5e94\u8be5\u662f2 \u4e3b\u673a(172.16.200.72) echo \"2\" >/usr/local/zookeeper/data/myid \u4e3b\u673a(172.16.200.73) echo \"3\" >/usr/local/zookeeper/data/myid","title":"4.5 \u751f\u6210myid"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#46-zookeeper","text":"cd /usr/local/zookeeper/bin ./zkServer.sh start#","title":"4.6 \u542f\u52a8zookeeper"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#47-zookeeper","text":"cd /usr/local/zookeeper/bin ./zkServer.sh stot","title":"4.7 \u5173\u95edzookeeper"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#48-zk","text":"cd /usr/local/zookeeper/bin ./zkServer.sh status","title":"4.8 \u67e5\u770bzk\u72b6\u6001"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#49","text":"/usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181","title":"4.9 \u67e5\u770b\u76f8\u5173\u4fe1\u606f\uff1a"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#5codis","text":"","title":"5.\u5b89\u88c5codis(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#51-codis","text":"mkdir -p /usr/local/gopkg/src/github.com/CodisLabs/ cd /usr/local/gopkg/src/github.com/CodisLabs/ git clone https://github.com/CodisLabs/codis.git -b release3.1","title":"5.1 \u4e0b\u8f7dcodis"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#52-codis","text":"cd /usr/local/gopkg/src/github.com/CodisLabs/codis make","title":"5.2 \u7f16\u8bd1codis"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#53-bin","text":"[root@codis01 codis]# ll bin/ \u603b\u7528\u91cf 82728 drwxr-xr-x 4 root root 111 12\u6708 18 21:54 assets -rwxr-xr-x 1 root root 18261200 12\u6708 18 21:54 codis-admin -rwxr-xr-x 1 root root 19101304 12\u6708 18 21:54 codis-dashboard -rwxr-xr-x 1 root root 17655424 12\u6708 18 21:54 codis-fe -rwxr-xr-x 1 root root 10032096 12\u6708 18 21:54 codis-ha -rwxr-xr-x 1 root root 11202080 12\u6708 18 21:54 codis-proxy -rwxr-xr-x 1 root root 4167892 12\u6708 18 21:54 codis-server -rwxr-xr-x 1 root root 2073794 12\u6708 18 21:54 redis-benchmark -rwxr-xr-x 1 root root 2197701 12\u6708 18 21:54 redis-cli -rw-r--r-- 1 root root 148 12\u6708 18 21:54 version [root@zt-redis01 codis]# \u6267\u884c\u5168\u90e8\u6307\u4ee4\u540e\uff0c\u4f1a\u5728 bin \u6587\u4ef6\u5939\u5185\u751f\u6210 codis-admin\u3001codis-dashboard\u3001codis-fe\u3001codis-ha\u3001codis-proxy\u3001codis-server \u516d\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u53e6\u5916, bin/assets \u6587\u4ef6\u5939\u662f codis-dashboard http \u670d\u52a1\u9700\u8981\u7684\u524d\u7aef\u8d44\u6e90, \u9700\u8981\u548ccodis-dashboard \u653e\u7f6e\u5728\u540c\u4e00\u6587\u4ef6\u5939\u4e0b","title":"5.3 \u67e5\u770bbin"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#54-codis","text":"mkdir -p /usr/local/codis mkdir -p /data/logs/codis mkdir -p /data/codis/redis_conf mkdir -p /data/components/redis","title":"5.4 \u521b\u5efacodis\u6240\u9700\u76ee\u5f55"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#55-codisbin","text":"cp -r /usr/local/gopkg/src/github.com/CodisLabs/codis/bin /usr/local/codis/ \u7531\u4e8ecodis \u672c\u8eab\u53ea\u6709codis-server \uff0c\u6ca1\u6709Redis-cli\uff0c\u9700\u8981\u628aredis 2.8.21 \u5b89\u88c5\u5305\u91cc\u9762\u7684redis-cli copy\u5230/usr/local/codis/bin \u4e0b\u9762: cd /usr/local/gopkg/src/github.com/CodisLabs/codis/extern/redis-2.8.21/src cp redis-cli /usr/local/codis/bin","title":"5.5 \u62f7\u8d1dcodis\u7684bin\u76ee\u5f55"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#56","text":"\u914d\u7f6e\u548c\u542f\u52a8 Codis\u7684Redis \u914d\u7f6e\u6587\u4ef6 : /usr/local/codis/redis_conf/redis6379.conf \u8bbe\u7f6e\u5bc6\u7801: xxxxx \u8003\u8651\u6027\u80fd\uff0c\u4e3b\u5e93\u5173\u95edaof\u548crdp\uff0c\u4ece\u5e93\u53ea\u5f00\u542faof: cd /usr/local/gopkg/src/github.com/CodisLabs/codis/extern/redis-2.8.21/ cp redis.conf /usr/local/codis/conf/redis6379.conf cp redis.conf /usr/local/codis/conf/redis6380.conf \u5c06redis6379.conf\u66f4\u6539\u4ee5\u4e0b\u53c2\u6570(\u4e3b\u5e93)\uff1a daemonize yes pidfile /usr/locai/codis/run/redis6379.pid port 6379 timeout 86400 tcp-keepalive 60 loglevel notice logfile /data/logs/codis/redis6379.log databases 16 save \"\" #save 900 1 ----\u5173\u95edaof #save 300 10 #save 60 10000 stop-writes-on-bgsave-error no rdbcompression yes dbfilename dump6379.rdb dir /data/codis/redis_data_6379 masterauth \"xxxxx\" slave-serve-stale-data yes repl-disable-tcp-nodelay no slave-priority 100 requirepass \"xxxxx\" maxmemory 10gb maxmemory-policy allkeys-lru appendonly no appendfsync everysec no-appendfsync-on-rewrite yes auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb lua-time-limit 5000 slowlog-log-slower-than 10000 slowlog-max-len 128 hash-max-ziplist-entries 512 hash-max-ziplist-value 64 list-max-ziplist-entries 512 list-max-ziplist-value 64 set-max-intset-entries 512 zset-max-ziplist-entries 128 zset-max-ziplist-value 64 client-output-buffer-limit normal 0 0 0 client-output-buffer-limit slave 0 0 0 client-output-buffer-limit pubsub 0 0 0 hz 10 aof-rewrite-incremental-fsync yes repl-backlog-size 33554432 \u5c06redis6380.conf\u66f4\u6539\u4ee5\u4e0b\u53c2\u6570(\u4ece\u5e93)\uff1a daemonize yes pidfile /usr/local/codis/run/redis6380.pid port 6380 timeout 86400 tcp-keepalive 60 loglevel notice logfile /data/logs/codis/redis6380.log databases 16 save \"\" #save 900 1 ----\u5173\u95edaof #save 300 10 #save 60 10000 stop-writes-on-bgsave-error no rdbcompression yes dbfilename dump6379.rdb dir /data/codis/redis_data_6380 masterauth \"xxxxx\" slave-serve-stale-data yes repl-disable-tcp-nodelay no slave-priority 100 requirepass \"xxxxx\" maxmemory 10gb maxmemory-policy allkeys-lru appendonly no appendfsync everysec no-appendfsync-on-rewrite yes auto-aof-rewrite-percentage 100 auto-aof-rewrite-min-size 64mb lua-time-limit 5000 slowlog-log-slower-than 10000 slowlog-max-len 128 hash-max-ziplist-entries 512 hash-max-ziplist-value 64 list-max-ziplist-entries 512 list-max-ziplist-value 64 set-max-intset-entries 512 zset-max-ziplist-entries 128 zset-max-ziplist-value 64 client-output-buffer-limit normal 0 0 0 client-output-buffer-limit slave 0 0 0 client-output-buffer-limit pubsub 0 0 0 hz 10 aof-rewrite-incremental-fsync yes repl-backlog-size 33554432","title":"5.6 \u914d\u7f6e\u548c\u542f\u52a8\u5404\u7ec4\u4ef6"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#57-redis","text":"/usr/local/codis/bin/codis-server /usr/local/codis/redis_conf/redis6379.conf & /usr/local/codis/bin/codis-server /usr/local/codis/redis_conf/redis6380.conf &","title":"5.7 \u542f\u52a8redis"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#codis_1","text":"","title":"\u4e09.  \u914d\u7f6ecodis"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#1-codis-dashboard","text":"Coddis3.0\u7684dashboard\u4e0ecodis 2.0\u6709\u6240\u4e0d\u540c\uff0c\u4f5c\u4e3a\u96c6\u7fa4\u7ba1\u7406\u5de5\u5177\uff0c\u5b83\u652f\u6301codis-proxy,codis-server\u7684\u6dfb\u52a0\u3001\u5220\u9664\u4ee5\u53ca\u6570\u636e\u8fc1\u79fb\u7b49\u64cd\u4f5c\u3002\u5728\u96c6\u7fa4\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0ccodis-dashboard \u7ef4\u62a4\u96c6\u7fa4\u4e0b\u6240\u6709 codis-proxy \u7684\u72b6\u6001\u4e00\u81f4\u6027\u3002\u6709\u4ee5\u4e0b\u4e24\u70b9\u6ce8\u610f\u4e8b\u9879\uff1a * \u5bf9\u4e8e\u540c\u4e00\u4e2a\u4e1a\u52a1\u96c6\u7fa4\u800c\u8a00\uff0c\u540c\u4e00\u4e2a\u65f6\u523bcodis-dashboard\u53ea\u80fd\u67090\u4e2a\u6216\u80051\u4e2a\uff1b * \u6240\u6709\u5bf9\u96c6\u7fa4\u7684\u4fee\u6539\u90fd\u5fc5\u987b\u901a\u8fc7codis-dashboard\u5b8c\u6210\u3002","title":"1. Codis Dashboard"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#11-codis-dashboard","text":"\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6dashboard.toml\u53ef\u7531codis-dashboard\u751f\u6210\u3002 #/usr/local/codis/bin/codis-dashboard --default-config | tee dashboard.toml\uff08\u5c31\u662fdashboard.conf\uff09 \u751f\u6210dashboard.toml\u6587\u4ef6\uff0c\u53ef\u81ea\u884c\u914d\u7f6e\u3002 # Set Coordinator, only accept\"zookeeper\"&\"etcd\" coordinator_name = \"zookeeper\" coordinator_addr = \"172.16.200.71:2181,172.16.200.72:2181,172.16.200.73:2181\" #zookeeper\u662f\u96c6\u7fa4\u7684\u8bdd\u5c31\u5199\u591a\u4e2aip\u548c\u7aef\u53e3\u7528\u9017\u53f7\u9694\u5f00 # Set Codis Product {Name/Auth} product_name = \"codis-demo\" product_auth = \"\" # Set bind address for admin(rpc), tcp only. admin_addr = \"0.0.0.0:18080\" \u53c2\u6570\u8bf4\u660e\uff1a coordinator_name \u5916\u90e8\u5b58\u50a8\u7c7b\u578b\uff0c\u63a5\u53d7 zookeeper/etcd coordinator_addr \u5916\u90e8\u5b58\u50a8\u5730\u5740 product_name \u96c6\u7fa4\u540d\u79f0\uff0c\u6ee1\u8db3\u6b63\u5219 \\w[\\w\\.\\-]* product_auth \u96c6\u7fa4\u5bc6\u7801\uff0c\u9ed8\u8ba4\u4e3a\u7a7a admin_addr RESTful API \u7aef\u53e3","title":"1.1 \u914d\u7f6eCodis Dashboard"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#12-codis-dashboard","text":"nohup /usr/local/codis/bin/codis-dashboard --ncpu=4 --config=dashboard.toml\uff08\u8fd9\u91cc\u6307\u5b9adashboard.conf\u4e5f\u53ef\u4ee5\uff09 --log=dashboard.log --log-level=WARN & #bin/codis-dashboard -h Usage: codis-dashboard [--ncpu=N][--config=CONF] [--log=FILE] [--log-level=LEVEL] [--host-admin=ADDR] codis-dashboard --default-config codis-dashboard --version \u53c2\u6570\u8bf4\u660e\uff1a --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -c CONF, --config=CONF \u6307\u5b9a\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6elog\u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN \u6b63\u5e38\u5173\u95eddashboard\u547d\u4ee4\uff1a bin/codis-admin --dashboard=172.16.200.71:18080 --shutdown","title":"1.2 \u542f\u52a8Codis Dashboard"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#2-codis-proxy","text":"\u5bf9\u4e8e\u540c\u4e00\u4e2a\u4e1a\u52a1\u96c6\u7fa4\u800c\u8a00\uff0c\u53ef\u4ee5\u540c\u65f6\u90e8\u7f72\u591a\u4e2acodis-proxy \u5b9e\u4f8b\uff1b \u4e0d\u540c codis-proxy \u4e4b\u95f4\u7531 codis-dashboard \u4fdd\u8bc1\u72b6\u6001\u540c\u6b65\u3002","title":"2. Codis Proxy"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#21-proxy","text":"\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6 proxy.toml \u53ef\u7531 codis-proxy \u751f\u6210\u3002 /usr/local/codis/bin/codis-proxy --default-config | tee proxy.toml\uff08proxy.conf\uff09 \u751f\u6210proxy.toml\u53ef\u81ea\u884c\u914d\u7f6e\u3002 # Set Codis Product {Name/Auth}. product_name = \"codis-demo\" product_auth = \"\" # Set bind address for admin(rpc), tcp only. admin_addr = \"0.0.0.0:11080\" # Set bind address for proxy, proto_type can be \"tcp\",\"tcp4\", \"tcp6\", \"unix\" or \"unixpacket\". proto_type = \"tcp4\" proxy_addr = \"0.0.0.0:19000\" # Set jodis address & session timeout. jodis_addr = \"\" jodis_timeout = 10 # Proxy will ping-pong backend redis periodly to keep-alive backend_ping_period = 5 # If there is no request from client for a long time, the connectionwill be droped. Set 0 to disable. session_max_timeout = 1800 # Buffer size for each client connection. session_max_bufsize = 131072 # Number of buffered requests for each client connection. # Make sure this is higher than the max number of requests for eachpipeline request, or your client may be blocked. session_max_pipeline = 1024 # Set period between keep alives. Set 0 to disable. session_keepalive_period = 60 \u53c2\u6570\u8bf4\u660e\uff1a product_name \u96c6\u7fa4\u540d\u79f0\uff0c\u53c2\u8003dashboard\u53c2\u6570\u8bf4\u660e product_auth \u96c6\u7fa4\u5bc6\u7801\uff0c\u9ed8\u8ba4\u4e3a\u7a7a admin_addr RESTfulAPI \u7aef\u53e3 proto_type Redis \u7aef\u53e3\u7c7b\u578b\uff0c\u63a5\u53d7tcp/tcp4/tcp6/unix/unixpacket proxy_addr Redis \u7aef\u53e3\u5730\u5740\u6216\u8005\u8def\u5f84 jodis_addr Jodis\u6ce8\u518czookeeper\u5730\u5740 jodis_timeout Jodis\u6ce8\u518csessiontimeout\u65f6\u95f4\uff0c\u5355\u4f4dsecond jodis_compatible Jodis\u6ce8\u518c zookeeper \u7684\u8def\u5f84 backend_ping_period \u4e0ecodis-server \u63a2\u6d3b\u5468\u671f\uff0c\u5355\u4f4dsecond\uff0c0\u8868\u793a\u7981\u6b62 session_max_timeout \u4e0eclient \u8fde\u63a5\u6700\u5927\u8bfb\u8d85\u65f6\uff0c\u5355\u4f4dsecond\uff0c0\u8868\u793a\u7981\u6b62 session_max_bufsize \u4e0eclient \u8fde\u63a5\u8bfb\u5199\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u5355\u4f4dbyte session_max_pipeline \u4e0eclient \u8fde\u63a5\u6700\u5927\u7684pipeline\u5927\u5c0f session_keepalive_period \u4e0eclient \u7684 tcp keepalive\u5468\u671f\uff0c\u4ec5tcp\u6709\u6548\uff0c0\u8868\u793a\u7981\u6b62","title":"2.1 \u914d\u7f6eproxy"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#22-proxy","text":"nohup /usr/local/codis/bin/codis-proxy --ncpu=4 --config=proxy.toml \\ --log=proxy.log --log-level=WARN & codis-proxy\u542f\u52a8\u540e\uff0c\u5904\u4e8e waiting \u72b6\u6001\uff0c\u76d1\u542cproxy_addr \u5730\u5740\uff0c\u4f46\u662f\u4e0d\u4f1aaccept\u8fde\u63a5\u3002\u6dfb\u52a0\u5230\u96c6\u7fa4\u5e76\u5b8c\u6210\u96c6\u7fa4\u72b6\u6001\u7684\u540c\u6b65\uff0c\u624d\u80fd\u6539\u53d8\u72b6\u6001\u4e3aonline\u3002\u6dfb\u52a0\u7684\u65b9\u6cd5\u6709\u4ee5\u4e0b\u4e24\u79cd\uff1a \u901a\u8fc7codis-fe\u6dfb\u52a0\uff1a\u901a\u8fc7Add Proxy\u6309\u94ae\uff0c\u5c06admin_addr\u52a0\u5165\u5230\u96c6\u7fa4\u4e2d\uff1b \u901a\u8fc7codis-admin\u547d\u4ee4\u884c\u5de5\u5177\u6dfb\u52a0\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a \u6700\u597d\u91c7\u7528\u901a\u8fc7codis-fe\u6dfb\u52a0 /usr/local/codis/bin/codis-admin --dashboard=172.16.200.71:18080 --create-proxy -x 172.16.200.71:11080 \u5176\u4e2d172.16.200.71:18080 \u4ee5\u53ca172.16.200.71:11080 \u5206\u522b\u4e3adashboard\u548cproxy\u7684admin_addr \u5730\u5740\u3002 \u6dfb\u52a0\u8fc7\u7a0b\u4e2d\uff0cdashboard\u4f1a\u5b8c\u6210\u5982\u4e0b\u4e00\u7cfb\u5217\u52a8\u4f5c\uff1a \u2460\u3000\u83b7\u53d6 proxy \u4fe1\u606f\uff0c\u5bf9\u96c6\u7fa4name\u4ee5\u53caauth\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5e76\u5c06\u5176\u4fe1\u606f\u5199\u5165\u5230\u5916\u90e8\u5b58\u50a8\u4e2d\uff1b \u2461\u3000\u540c\u6b65slots\u72b6\u6001\uff1b \u2462\u3000\u6807\u8bb0proxy\u72b6\u6001\u4e3aonline\uff0c\u6b64\u540eproxy\u5f00\u59cbaccept\u8fde\u63a5\u5e76\u5f00\u59cb\u63d0\u4f9b\u670d\u52a1\u3002 \u6b63\u5e38\u5173\u95edproxy\u64cd\u4f5c /usr/local/codis/bin/codis-admin --proxy=172.16.200.71:11080 --auth=\"xxxxx\"(\u6709\u5c31\u52a0\uff0c\u6ca1\u6709\u5c31\u4e0d\u52a0) --shutdown /usr/local/codis/bin/codis-proxy -h Usage: codis-proxy [--ncpu=N][--config=CONF] [--log=FILE] [--log-level=LEVEL] [--host-admin=ADDR] [--host-proxy=ADDR] [--ulimit=NLIMIT] codis-proxy --default-config codis-proxy --version Options: --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -c CONF, --config=CONF \u6307\u5b9a\u542f\u52a8\u914d\u7f6e\u6587\u4ef6 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6e log \u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN --ulimit=NLIMIT \u68c0\u67e5ulimit -n\u7684\u7ed3\u679c\uff0c\u786e\u4fdd\u8fd0\u884c\u65f6\u6700\u5927\u6587\u4ef6\u63cf\u8ff0\u4e0d\u5c11\u4e8eNLIMIT","title":"2.2 \u542f\u52a8proxy"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#3-codis-fe","text":"","title":"3.  Codis FE"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#31","text":"\u591a\u4e2a\u96c6\u7fa4\u5b9e\u4f8b\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u524d\u7aef\u5c55\u793a\u9875\u9762\uff1b \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u7ba1\u7406\u540e\u7aefcodis-dashboard\u5217\u8868\uff0c\u914d\u7f6e\u6587\u4ef6\u53ef\u81ea\u52a8\u66f4\u65b0\u3002","title":"3.1 \u96c6\u7fa4\u7ba1\u7406\u754c\u9762"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#32-codis-fe","text":"\u914d\u7f6e\u6587\u4ef6codis.json\uff08fe.conf\uff09\u53ef\u4ee5\u624b\u52a8\u7f16\u8f91\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7codis-admin\u4ece\u5916\u90e8\u5b58\u50a8\u4e2d\u62c9\u53d6\u3002 /usr/local/codis/bin/codis-admin --dashboard-list --zookeeper=172.16.200.71:2181 | tee codis.json [ { \"name\": \"codis-demo\", \"dashboard\": \"127.0.0.1:18080\" } ]","title":"3.2 \u914d\u7f6ecodis-fe"},{"location":"DevOps/02%20Redis/codis3.1-cluster-building-including-zookeeper-cluster/#33-codis-fe","text":"nohup /usr/local/codis/bin/codis-fe --ncpu=4 --log=fe.log --log-level=WARN \\ --dashboard-list=codis.json --listen=0.0.0.0:18090 &#(\u8fd9\u91cc\u6307\u5b9a\u7aef\u53e3\u53f7\u4e3a18090\u662f\u4e3a\u4e86\u9632\u6b62\u548ccodis-dashboard\u7684\u7aef\u53e3\u53f718080\u51b2\u7a81) /usr/local/codis/bin/codis-fe -h Usage: codis-fe [--ncpu=N][--log=FILE] [--log-level=LEVEL] --dashboard-list=LIST --listen=ADDR codis-fe --version Options: --ncpu=N \u6700\u5927\u4f7f\u7528 CPU \u4e2a\u6570 -d LIST,--dashboard-list=LIST \u914d\u7f6e\u6587\u4ef6\uff0c\u80fd\u591f\u81ea\u52a8\u5237\u65b0 -l FILE, --log=FILE \u8bbe\u7f6e log \u8f93\u51fa\u6587\u4ef6 --log-level=LEVEL \u8bbe\u7f6e log \u8f93\u51fa\u7b49\u7ea7\uff1aINFO,WARN,DEBUG,ERROR\uff1b\u9ed8\u8ba4INFO\uff0c\u63a8\u8350WARN --listen=ADDR HTTP \u670d\u52a1\u7aef\u53e3 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u5728\u5730\u5740\u680f\u91cc\u8f93\u5165http://172.16.200.71:18090\uff0c\u901a\u8fc7\u7ba1\u7406\u754c\u9762\u64cd\u4f5cCodis\u3002","title":"3.3 \u542f\u52a8codis-fe"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/","text":"\u4e00. \u7f16\u8bd1IK\u5206\u8bcd\u5668 \u00b6 1. maven\u73af\u5883\u914d\u7f6e \u00b6 \u4e0b\u8f7dmaven wget http://mirrors.cnnic.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \u89e3\u538b tar xvf apache-maven-3.3.9-bin.tar.gz mv maven to /usr/local/apache-maven mv apache-maven-3.3.9 /usr/local/apache-maven \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim ~/.bashrc # \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 export M2_HOME=/usr/local/apache-maven export M2=$M2_HOME/bin export PATH=$M2:$PATH \u52a0\u8f7d\u73af\u5883\u53d8\u91cf source ~/.bashrc \u67e5\u770b\u7248\u672c mvn -version 2. IK \u7248\u672c\u9009\u62e9 \u00b6 IK \u4e0e ElasticSearch\u5bf9\u5e94\u7248\u672c IK version ES version master 5.x -> master 5.6.1 5.6.1 5.5.3 5.5.3 5.4.3 5.4.3 5.3.3 5.3.3 5.2.2 5.2.2 5.1.2 5.1.2 1.10.1 2.4.1 1.9.5 2.3.5 1.8.1 2.2.1 1.7.0 2.1.1 1.5.0 2.0.0 1.2.6 1.0.0 1.2.5 0.90.x 1.1.3 0.20.x 1.0.0 0.16.2 -> 0.19.0 \u76ee\u524d\u4f7f\u7528\u7684elasticsearch\u4e3a2.4 \u7248\u672c\uff0c\u6839\u636e\u4ee5\u4e0a\u5bf9\u5e94\u8868\u5f97\u51fa\uff0c\u5e94\u8be5\u9009\u62e91.10.1\u7248\u672cIK 1.10.1 \u7248\u672cIK GitHub\u5730\u5740 https://github.com/medcl/elasticsearch-analysis-ik/tree/v1.10.1 \u4e8c. \u5b89\u88c5IK \u00b6 \u4e0b\u8f7dIK\u6e90\u7801\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u8fdb\u5165\u5230\u8be5\u76ee\u5f55\u4e0b 1. \u6253\u5305IK \u00b6 mvn package \u6253\u5305\u9700\u8981\u5411maven\u5e93\u4e0b\u8f7d\u4e00\u4e9bjar\u5305\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u9759\u7b49 ~ \u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728target/releases\u76ee\u5f55\u4e0b\u627e\u5230\u5bf9\u5e94\u7684zip\u5305 cd target/releases \u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u540e\u7684IK\u5305\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef elasticsearch-analysis-ik-1.10.1.zip 2. \u914d\u7f6eIK \u00b6 \u5c06IK \u89e3\u538b\u540e\uff0c\u653e\u5230 /data/components/elasticsearch/plugins/ik \u76ee\u5f55\u4e0b vim plugin-descriptor.properties # \u6309\u7167\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u4ee5\u4e0b\u53c2\u6570 elasticsearch.version=2.4.1 java.version=1.7 \u4e09. \u914d\u7f6eelasticsearch \u00b6 1. \u4fee\u6539elasticsearch\u914d\u7f6e \u00b6 vim /etc/elasticsearch/elasticsearch.yml # \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 index.analysis.analyzer.default.type: ik 2. \u91cd\u542felasticsearch \u00b6 systemctl restart elasticsearch.service \u914d\u7f6e\u5b8c\u6210\uff0c\u6d4b\u8bd5\u4e0b ~ \u56db. \u6d4b\u8bd5IK\u5206\u8bcd\u5668 \u00b6 ik \u5e26\u6709\u4e24\u4e2a\u5206\u8bcd\u5668 **ik_max_word \uff1a**\u4f1a\u5c06\u6587\u672c\u505a\u6700\u7ec6\u7c92\u5ea6\u7684\u62c6\u5206\uff1b\u5c3d\u53ef\u80fd\u591a\u7684\u62c6\u5206\u51fa\u8bcd\u8bed **ik_smart\uff1a**\u4f1a\u505a\u6700\u7c97\u7c92\u5ea6\u7684\u62c6\u5206\uff1b\u5df2\u88ab\u5206\u51fa\u7684\u8bcd\u8bed\u5c06\u4e0d\u4f1a\u518d\u6b21\u88ab\u5176\u5b83\u8bcd\u8bed\u5360\u6709 1. ik_max_word \u6d4b\u8bd5 \u00b6 curl -XGET 'http://172.16.200.101:9200/_analyze?pretty&analyzer=ik_max_word' -d '\u638c\u901a\u5bb6\u56ed\u662f\u5168\u7403\u6700\u5927\u7684\u5e7c\u6559\u7ba1\u7406\u5e73\u53f0' # \u8fd4\u56de\u4fe1\u606f\u5982\u4e0b { \"tokens\" : [ { \"token\" : \"\u638c\", \"start_offset\" : 0, \"end_offset\" : 1, \"type\" : \"CN_WORD\", \"position\" : 0 }, { \"token\" : \"\u901a\", \"start_offset\" : 1, \"end_offset\" : 2, \"type\" : \"CN_CHAR\", \"position\" : 1 }, { \"token\" : \"\u5bb6\u56ed\", \"start_offset\" : 2, \"end_offset\" : 4, \"type\" : \"CN_WORD\", \"position\" : 2 }, { \"token\" : \"\u5bb6\", \"start_offset\" : 2, \"end_offset\" : 3, \"type\" : \"CN_WORD\", \"position\" : 3 }, { \"token\" : \"\u5168\u7403\", \"start_offset\" : 5, \"end_offset\" : 7, \"type\" : \"CN_WORD\", \"position\" : 4 }, { \"token\" : \"\u6700\u5927\", \"start_offset\" : 7, \"end_offset\" : 9, \"type\" : \"CN_WORD\", \"position\" : 5 }, { \"token\" : \"\u5e7c\u6559\", \"start_offset\" : 10, \"end_offset\" : 12, \"type\" : \"CN_WORD\", \"position\" : 6 }, { \"token\" : \"\u6559\u7ba1\", \"start_offset\" : 11, \"end_offset\" : 13, \"type\" : \"CN_WORD\", \"position\" : 7 }, { \"token\" : \"\u7ba1\u7406\", \"start_offset\" : 12, \"end_offset\" : 14, \"type\" : \"CN_WORD\", \"position\" : 8 }, { \"token\" : \"\u5e73\u53f0\", \"start_offset\" : 14, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 9 }, { \"token\" : \"\u53f0\", \"start_offset\" : 15, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 10 } ] } 2. ik_smart \u6d4b\u8bd5 \u00b6 curl -XGET 'http://172.16.200.101:9200/_analyze?pretty&analyzer=ik_smart' -d '\u638c\u901a\u5bb6\u56ed\u662f\u5168\u7403\u6700\u5927\u7684\u5e7c\u6559\u7ba1\u7406\u5e73\u53f0' # \u8fd4\u56de\u4fe1\u606f\u5982\u4e0b { \"tokens\" : [ { \"token\" : \"\u638c\", \"start_offset\" : 0, \"end_offset\" : 1, \"type\" : \"CN_WORD\", \"position\" : 0 }, { \"token\" : \"\u901a\", \"start_offset\" : 1, \"end_offset\" : 2, \"type\" : \"CN_CHAR\", \"position\" : 1 }, { \"token\" : \"\u5bb6\u56ed\", \"start_offset\" : 2, \"end_offset\" : 4, \"type\" : \"CN_WORD\", \"position\" : 2 }, { \"token\" : \"\u5168\u7403\", \"start_offset\" : 5, \"end_offset\" : 7, \"type\" : \"CN_WORD\", \"position\" : 3 }, { \"token\" : \"\u6700\u5927\", \"start_offset\" : 7, \"end_offset\" : 9, \"type\" : \"CN_WORD\", \"position\" : 4 }, { \"token\" : \"\u5e7c\u6559\", \"start_offset\" : 10, \"end_offset\" : 12, \"type\" : \"CN_WORD\", \"position\" : 5 }, { \"token\" : \"\u7ba1\u7406\", \"start_offset\" : 12, \"end_offset\" : 14, \"type\" : \"CN_WORD\", \"position\" : 6 }, { \"token\" : \"\u5e73\u53f0\", \"start_offset\" : 14, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 7 } ] }","title":"ElasticSearch\u5b89\u88c5IK\u4e2d\u6587\u5206\u8bcd\u5668"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#ik","text":"","title":"\u4e00. \u7f16\u8bd1IK\u5206\u8bcd\u5668"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#1-maven","text":"\u4e0b\u8f7dmaven wget http://mirrors.cnnic.cn/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \u89e3\u538b tar xvf apache-maven-3.3.9-bin.tar.gz mv maven to /usr/local/apache-maven mv apache-maven-3.3.9 /usr/local/apache-maven \u914d\u7f6e\u73af\u5883\u53d8\u91cf vim ~/.bashrc # \u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9 export M2_HOME=/usr/local/apache-maven export M2=$M2_HOME/bin export PATH=$M2:$PATH \u52a0\u8f7d\u73af\u5883\u53d8\u91cf source ~/.bashrc \u67e5\u770b\u7248\u672c mvn -version","title":"1. maven\u73af\u5883\u914d\u7f6e"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#2-ik","text":"IK \u4e0e ElasticSearch\u5bf9\u5e94\u7248\u672c IK version ES version master 5.x -> master 5.6.1 5.6.1 5.5.3 5.5.3 5.4.3 5.4.3 5.3.3 5.3.3 5.2.2 5.2.2 5.1.2 5.1.2 1.10.1 2.4.1 1.9.5 2.3.5 1.8.1 2.2.1 1.7.0 2.1.1 1.5.0 2.0.0 1.2.6 1.0.0 1.2.5 0.90.x 1.1.3 0.20.x 1.0.0 0.16.2 -> 0.19.0 \u76ee\u524d\u4f7f\u7528\u7684elasticsearch\u4e3a2.4 \u7248\u672c\uff0c\u6839\u636e\u4ee5\u4e0a\u5bf9\u5e94\u8868\u5f97\u51fa\uff0c\u5e94\u8be5\u9009\u62e91.10.1\u7248\u672cIK 1.10.1 \u7248\u672cIK GitHub\u5730\u5740 https://github.com/medcl/elasticsearch-analysis-ik/tree/v1.10.1","title":"2. IK \u7248\u672c\u9009\u62e9"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#ik_1","text":"\u4e0b\u8f7dIK\u6e90\u7801\u4e0a\u4f20\u5230\u670d\u52a1\u5668\uff0c\u8fdb\u5165\u5230\u8be5\u76ee\u5f55\u4e0b","title":"\u4e8c. \u5b89\u88c5IK"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#1-ik","text":"mvn package \u6253\u5305\u9700\u8981\u5411maven\u5e93\u4e0b\u8f7d\u4e00\u4e9bjar\u5305\uff0c\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u9759\u7b49 ~ \u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728target/releases\u76ee\u5f55\u4e0b\u627e\u5230\u5bf9\u5e94\u7684zip\u5305 cd target/releases \u53ef\u4ee5\u770b\u5230\u7f16\u8bd1\u540e\u7684IK\u5305\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef elasticsearch-analysis-ik-1.10.1.zip","title":"1. \u6253\u5305IK"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#2-ik_1","text":"\u5c06IK \u89e3\u538b\u540e\uff0c\u653e\u5230 /data/components/elasticsearch/plugins/ik \u76ee\u5f55\u4e0b vim plugin-descriptor.properties # \u6309\u7167\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u4ee5\u4e0b\u53c2\u6570 elasticsearch.version=2.4.1 java.version=1.7","title":"2. \u914d\u7f6eIK"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#elasticsearch","text":"","title":"\u4e09. \u914d\u7f6eelasticsearch"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#1-elasticsearch","text":"vim /etc/elasticsearch/elasticsearch.yml # \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 index.analysis.analyzer.default.type: ik","title":"1. \u4fee\u6539elasticsearch\u914d\u7f6e"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#2-elasticsearch","text":"systemctl restart elasticsearch.service \u914d\u7f6e\u5b8c\u6210\uff0c\u6d4b\u8bd5\u4e0b ~","title":"2. \u91cd\u542felasticsearch"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#ik_2","text":"ik \u5e26\u6709\u4e24\u4e2a\u5206\u8bcd\u5668 **ik_max_word \uff1a**\u4f1a\u5c06\u6587\u672c\u505a\u6700\u7ec6\u7c92\u5ea6\u7684\u62c6\u5206\uff1b\u5c3d\u53ef\u80fd\u591a\u7684\u62c6\u5206\u51fa\u8bcd\u8bed **ik_smart\uff1a**\u4f1a\u505a\u6700\u7c97\u7c92\u5ea6\u7684\u62c6\u5206\uff1b\u5df2\u88ab\u5206\u51fa\u7684\u8bcd\u8bed\u5c06\u4e0d\u4f1a\u518d\u6b21\u88ab\u5176\u5b83\u8bcd\u8bed\u5360\u6709","title":"\u56db. \u6d4b\u8bd5IK\u5206\u8bcd\u5668"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#1-ik_max_word","text":"curl -XGET 'http://172.16.200.101:9200/_analyze?pretty&analyzer=ik_max_word' -d '\u638c\u901a\u5bb6\u56ed\u662f\u5168\u7403\u6700\u5927\u7684\u5e7c\u6559\u7ba1\u7406\u5e73\u53f0' # \u8fd4\u56de\u4fe1\u606f\u5982\u4e0b { \"tokens\" : [ { \"token\" : \"\u638c\", \"start_offset\" : 0, \"end_offset\" : 1, \"type\" : \"CN_WORD\", \"position\" : 0 }, { \"token\" : \"\u901a\", \"start_offset\" : 1, \"end_offset\" : 2, \"type\" : \"CN_CHAR\", \"position\" : 1 }, { \"token\" : \"\u5bb6\u56ed\", \"start_offset\" : 2, \"end_offset\" : 4, \"type\" : \"CN_WORD\", \"position\" : 2 }, { \"token\" : \"\u5bb6\", \"start_offset\" : 2, \"end_offset\" : 3, \"type\" : \"CN_WORD\", \"position\" : 3 }, { \"token\" : \"\u5168\u7403\", \"start_offset\" : 5, \"end_offset\" : 7, \"type\" : \"CN_WORD\", \"position\" : 4 }, { \"token\" : \"\u6700\u5927\", \"start_offset\" : 7, \"end_offset\" : 9, \"type\" : \"CN_WORD\", \"position\" : 5 }, { \"token\" : \"\u5e7c\u6559\", \"start_offset\" : 10, \"end_offset\" : 12, \"type\" : \"CN_WORD\", \"position\" : 6 }, { \"token\" : \"\u6559\u7ba1\", \"start_offset\" : 11, \"end_offset\" : 13, \"type\" : \"CN_WORD\", \"position\" : 7 }, { \"token\" : \"\u7ba1\u7406\", \"start_offset\" : 12, \"end_offset\" : 14, \"type\" : \"CN_WORD\", \"position\" : 8 }, { \"token\" : \"\u5e73\u53f0\", \"start_offset\" : 14, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 9 }, { \"token\" : \"\u53f0\", \"start_offset\" : 15, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 10 } ] }","title":"1. ik_max_word \u6d4b\u8bd5"},{"location":"DevOps/03%20Elk/elasticsearch-install-ik-chinese-word-breaker/#2-ik_smart","text":"curl -XGET 'http://172.16.200.101:9200/_analyze?pretty&analyzer=ik_smart' -d '\u638c\u901a\u5bb6\u56ed\u662f\u5168\u7403\u6700\u5927\u7684\u5e7c\u6559\u7ba1\u7406\u5e73\u53f0' # \u8fd4\u56de\u4fe1\u606f\u5982\u4e0b { \"tokens\" : [ { \"token\" : \"\u638c\", \"start_offset\" : 0, \"end_offset\" : 1, \"type\" : \"CN_WORD\", \"position\" : 0 }, { \"token\" : \"\u901a\", \"start_offset\" : 1, \"end_offset\" : 2, \"type\" : \"CN_CHAR\", \"position\" : 1 }, { \"token\" : \"\u5bb6\u56ed\", \"start_offset\" : 2, \"end_offset\" : 4, \"type\" : \"CN_WORD\", \"position\" : 2 }, { \"token\" : \"\u5168\u7403\", \"start_offset\" : 5, \"end_offset\" : 7, \"type\" : \"CN_WORD\", \"position\" : 3 }, { \"token\" : \"\u6700\u5927\", \"start_offset\" : 7, \"end_offset\" : 9, \"type\" : \"CN_WORD\", \"position\" : 4 }, { \"token\" : \"\u5e7c\u6559\", \"start_offset\" : 10, \"end_offset\" : 12, \"type\" : \"CN_WORD\", \"position\" : 5 }, { \"token\" : \"\u7ba1\u7406\", \"start_offset\" : 12, \"end_offset\" : 14, \"type\" : \"CN_WORD\", \"position\" : 6 }, { \"token\" : \"\u5e73\u53f0\", \"start_offset\" : 14, \"end_offset\" : 16, \"type\" : \"CN_WORD\", \"position\" : 7 } ] }","title":"2. ik_smart \u6d4b\u8bd5"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/","text":"1. Logstash \u00b6 1.1 \u5b89\u88c5 \u00b6 **\u6ce8\uff1a**\u5b89\u88c5\u5728\u9700\u8981\u6536\u96c6\u65e5\u5fd7\u7684\u673a\u5668\u4e0a\u3002 cd /data/softs sudo wget https://download.elastic.co/logstash/logstash/logstash-2.4.0.tar.gz sudo tar -zxf logstash-2.4.0.tar.gz sudo mv logstash-2.4.0 /usr/local/logstash 1.2 \u521b\u5efa\u914d\u7f6e \u00b6 cd /usr/local/logstash sudo vim logstash.conf \u8f93\u5165\uff1a input { file { path => [\"/data/logs/error/program.error.log\"] type => \"error\" tags => [\"error\"] start_position => \"beginning\" #sincedb_path => \"/dev/null\" codec => \"json\" } file { path => [\"/data/logs/error/program.warning.log\"] type => \"warning\" tags => [\"warning\"] start_position => \"beginning\" #sincedb_path => \"/dev/null\" codec => \"json\" } #file { # path => [\"/data/logs/access/nginx.access.log\"] # type => \"access\" # tags => [\"access\"] # start_position => \"beginning\" # codec => \"json\" #} } output { if \"error\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" index => \"error_log\" } stdout { codec=> rubydebug } } if \"warning\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" index => \"warning_log\" } stdout { codec=> rubydebug } } if \"access\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" #index => \"access_log\" index => \"access_log_%{+YYYY.MM.dd}\" } stdout { } } } 1.3 \u542f\u52a8 \u00b6 sudo /usr/local/logstash/bin/logstash agent -f /usr/local/logstash/logstash.conf 2>>/data/logs/error/logstash.error.log & 2. ElasticSearch\u96c6\u7fa4\uff08\u4e09\u53f0\uff09 \u00b6 2.1 \u5b89\u88c5 \u00b6 # \u5b89\u88c5JDK sudo yum -y install java-1.8.0-openjdk # \u4e0b\u8f7dES RPM\u5305 sudo wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-2.4.0.rpm # \u5b89\u88c5 rpm -ivh elasticsearch-5.2.0.rpm # \u5f00\u673a\u542f\u52a8 sudo /bin/systemctl daemon-reload sudo /bin/systemctl enable elasticsearch.service 2.2 \u914d\u7f6e \u00b6 2.2.1 elasticsearch01 \u00b6 # \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins node.name: zt-elk01 path.logs: /data/logs/ network.host: 10.0.0.23 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.24\",\"10.0.0.25\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service 2.2.2 elasticsearch02 \u00b6 # \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins cluster.name: zt-elk node.name: zt-elk02 path.logs: /data/logs/ network.host: 10.0.0.24 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.23\",\"10.0.0.25\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service 2.2.3 elasticsearch03 \u00b6 # \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins cluster.name: zt-elk node.name: zt-elk03 path.logs: /data/logs/ network.host: 10.0.0.25 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.23\",\"10.0.0.24\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service 3. \u5b89\u88c5Kibana \u00b6 3.1 \u5b89\u88c5 \u00b6 **\u6ce8\uff1a**\u5b89\u88c5\u5728\u80fd\u5bf9\u5916\u8bbf\u95ee\u7684\u673a\u5668\u4e0a\u3002 cd /data/softs sudo wget https://download.elastic.co/kibana/kibana/kibana-4.6.0-linux-x86_64.tar.gz sudo tar -zxf kibana-4.6.0-linux-x86_64.tar.gz sudo mv kibana-4.6.0-linux-x86_64 /usr/local/kibana 3.2 \u914d\u7f6e \u00b6 \u66f4\u6539\u76f8\u5173\u914d\u7f6e\uff1a cd /usr/local/kibana vim config/kibana.yml server.port: 5601 server.host: \"127.0.0.1\" elasticsearch.url: \"http://10.0.0.23:9200\" 3.3 \u542f\u52a8 \u00b6 sudo /usr/local/kibana/bin/kibana 4. tips \u00b6 4.1 \u5220\u9664\u7d22\u5f15 \u00b6 curl -XDELETE 'http://127.0.0.1:9200/applog'","title":"ELK\u96c6\u7fa4\u642d\u5efa\uff08ElasticSearch Logstash Kinaba\uff09"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#1-logstash","text":"","title":"1. Logstash"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#11","text":"**\u6ce8\uff1a**\u5b89\u88c5\u5728\u9700\u8981\u6536\u96c6\u65e5\u5fd7\u7684\u673a\u5668\u4e0a\u3002 cd /data/softs sudo wget https://download.elastic.co/logstash/logstash/logstash-2.4.0.tar.gz sudo tar -zxf logstash-2.4.0.tar.gz sudo mv logstash-2.4.0 /usr/local/logstash","title":"1.1 \u5b89\u88c5"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#12","text":"cd /usr/local/logstash sudo vim logstash.conf \u8f93\u5165\uff1a input { file { path => [\"/data/logs/error/program.error.log\"] type => \"error\" tags => [\"error\"] start_position => \"beginning\" #sincedb_path => \"/dev/null\" codec => \"json\" } file { path => [\"/data/logs/error/program.warning.log\"] type => \"warning\" tags => [\"warning\"] start_position => \"beginning\" #sincedb_path => \"/dev/null\" codec => \"json\" } #file { # path => [\"/data/logs/access/nginx.access.log\"] # type => \"access\" # tags => [\"access\"] # start_position => \"beginning\" # codec => \"json\" #} } output { if \"error\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" index => \"error_log\" } stdout { codec=> rubydebug } } if \"warning\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" index => \"warning_log\" } stdout { codec=> rubydebug } } if \"access\" in [tags] { elasticsearch { hosts => \"10.0.0.23:9200\" #index => \"access_log\" index => \"access_log_%{+YYYY.MM.dd}\" } stdout { } } }","title":"1.2 \u521b\u5efa\u914d\u7f6e"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#13","text":"sudo /usr/local/logstash/bin/logstash agent -f /usr/local/logstash/logstash.conf 2>>/data/logs/error/logstash.error.log &","title":"1.3 \u542f\u52a8"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#2-elasticsearch","text":"","title":"2. ElasticSearch\u96c6\u7fa4\uff08\u4e09\u53f0\uff09"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#21","text":"# \u5b89\u88c5JDK sudo yum -y install java-1.8.0-openjdk # \u4e0b\u8f7dES RPM\u5305 sudo wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-2.4.0.rpm # \u5b89\u88c5 rpm -ivh elasticsearch-5.2.0.rpm # \u5f00\u673a\u542f\u52a8 sudo /bin/systemctl daemon-reload sudo /bin/systemctl enable elasticsearch.service","title":"2.1 \u5b89\u88c5"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#22","text":"","title":"2.2 \u914d\u7f6e"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#221-elasticsearch01","text":"# \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins node.name: zt-elk01 path.logs: /data/logs/ network.host: 10.0.0.23 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.24\",\"10.0.0.25\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service","title":"2.2.1 elasticsearch01"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#222-elasticsearch02","text":"# \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins cluster.name: zt-elk node.name: zt-elk02 path.logs: /data/logs/ network.host: 10.0.0.24 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.23\",\"10.0.0.25\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service","title":"2.2.2 elasticsearch02"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#223-elasticsearch03","text":"# \u66f4\u6539\u914d\u7f6e sudo vim /etc/elasticsearch/elasticsearch.yml path.data: /data/components/elasticsearch path.plugins: /data/components/elasticsearch/plugins cluster.name: zt-elk node.name: zt-elk03 path.logs: /data/logs/ network.host: 10.0.0.25 http.port: 9200 discovery.zen.ping.unicast.hosts: [\"10.0.0.23\",\"10.0.0.24\"] # \u91cd\u542f sudo systemctl enable elasticsearch.service sudo systemctl restart elasticsearch.service","title":"2.2.3 elasticsearch03"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#3-kibana","text":"","title":"3. \u5b89\u88c5Kibana"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#31","text":"**\u6ce8\uff1a**\u5b89\u88c5\u5728\u80fd\u5bf9\u5916\u8bbf\u95ee\u7684\u673a\u5668\u4e0a\u3002 cd /data/softs sudo wget https://download.elastic.co/kibana/kibana/kibana-4.6.0-linux-x86_64.tar.gz sudo tar -zxf kibana-4.6.0-linux-x86_64.tar.gz sudo mv kibana-4.6.0-linux-x86_64 /usr/local/kibana","title":"3.1 \u5b89\u88c5"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#32","text":"\u66f4\u6539\u76f8\u5173\u914d\u7f6e\uff1a cd /usr/local/kibana vim config/kibana.yml server.port: 5601 server.host: \"127.0.0.1\" elasticsearch.url: \"http://10.0.0.23:9200\"","title":"3.2 \u914d\u7f6e"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#33","text":"sudo /usr/local/kibana/bin/kibana","title":"3.3 \u542f\u52a8"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#4-tips","text":"","title":"4. tips"},{"location":"DevOps/03%20Elk/elk-cluster-building-elasticsearch-logstash-kinaba/#41","text":"curl -XDELETE 'http://127.0.0.1:9200/applog'","title":"4.1 \u5220\u9664\u7d22\u5f15"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/","text":"\u4e00.\u57fa\u672c\u4fe1\u606f \u00b6 1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f \u00b6 \u4e3b\u673a\u540d ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 spark-master 172.16.200.81 jdk\u3001hadoop\u3001spark\u3001scala spark-slave01 172.16.200.82 jdk\u3001hadoop\u3001spark spark-slave02 172.16.200.83 jdk\u3001hadoop\u3001spark spark-slave03 172.16.200.84 jdk\u3001hadoop\u3001spark 2. \u8f6f\u4ef6\u57fa\u672c\u4fe1\u606f \u00b6 \u8f6f\u4ef6\u540d \u7248\u672c \u5b89\u88c5\u8def\u5f84 oracle jdk 1.8.0_111 /usr/local/jdk1.8.0_111 hadoop 2.7.1 /usr/local/hadoop-2.7.3 spark 2.0.2 /usr/local/spark-2.0.2 scala 2.12.1 usr/local/2.12.1 3.\u73af\u5883\u53d8\u91cf\u6c47\u603b \u00b6 ############# java ############ export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ########### hadoop ########## export HADOOP_HOME=/usr/local/hadoop-2.7.3 export PATH=$JAVA_HOme/bin:$HADOOP_HOME/bin:$PATH export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin ######### spark ############ export SPARK_HOME=/usr/local/spark-2.0.2 export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin ######### scala ########## export SCALA_HOME=/usr/local/scala-2.12.1 export PATH=$PATH:$SCALA_HOME/bin 4. \u57fa\u672c\u73af\u5883\u914d\u7f6e\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09 \u00b6 4.1 \u914d\u7f6ejdk \u00b6 cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz 4.2 \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf \u00b6 vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### jdk ############ export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar 4.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a \u00b6 source /etc/profile 4.4 \u914d\u7f6ehosts \u00b6 vim /etc/hosts 172.16.200.81 spark-master 172.16.200.82 spark-slave1 172.16.200.83 spark-slave2 4.5 \u914d\u7f6e\u514d\u5bc6\u7801 \u00b6 \u751f\u6210\u5bc6\u94a5\u5bf9 ssh-keygen \u5982\u679c\u5bc6\u94a5\u4e0d\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5219\u8fde\u6309\u51e0\u4e0b\u56de\u8f66 \u5148\u914d\u7f6e\u672c\u673a\u514d\u5bc6\u7801\u767b\u5f55 cd /root/.ssh cat id_rsa.pub > authorized_keys chmod 600 authorized_keys \u518d\u5c06\u5176\u5b83\u4e3b\u673aid_rsa.pub \u5185\u5bb9\u8ffd\u52a0\u5230 authorized_keys\u4e2d\uff0c\u4e09\u53f0\u914d\u7f6e\u5b8c\u6210\u540e\u5373\u53ef\u5b9e\u73b0\u514d\u5bc6\u7801\u767b\u5f55 \u4e8c.\u5927\u6570\u636e\u5e73\u53f0\u642d\u5efa \u00b6 1. \u642d\u5efaHadoop\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09 \u00b6 1.1 \u5b89\u88c5hadoop \u00b6 cd /usr/loca/src/ tar -C /usr/local/ -xzf hadoop-2.7.3.tar.gz 1.2 \u914d\u7f6ehadoop\u73af\u5883\u53d8\u91cf \u00b6 vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### hadoop ############ export HADOOP_HOME=/usr/local/hadoop-2.7.3 export PATH=$JAVA_HOme/bin:$HADOOP_HOME/bin:$PATH export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin 1.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a \u00b6 source /etc/profile 1.4 \u4fee\u6539hadoop\u914d\u7f6e\u6587\u4ef6 \u00b6 cd /usr/local/hadoop-2.7.3/etc/hadoop \u67e5\u770b root@spark-master hadoop]# ll \u603b\u7528\u91cf 152 -rw-r--r--. 1 root root 4436 8\u6708 18 09:49 capacity-scheduler.xml -rw-r--r--. 1 root root 1335 8\u6708 18 09:49 configuration.xsl -rw-r--r--. 1 root root 318 8\u6708 18 09:49 container-executor.cfg -rw-r--r--. 1 root root 1037 12\u6708 21 14:58 core-site.xml -rw-r--r--. 1 root root 3589 8\u6708 18 09:49 hadoop-env.cmd -rw-r--r--. 1 root root 4235 12\u6708 21 11:17 hadoop-env.sh -rw-r--r--. 1 root root 2598 8\u6708 18 09:49 hadoop-metrics2.properties -rw-r--r--. 1 root root 2490 8\u6708 18 09:49 hadoop-metrics.properties -rw-r--r--. 1 root root 9683 8\u6708 18 09:49 hadoop-policy.xml -rw-r--r--. 1 root root 1826 12\u6708 21 14:11 hdfs-site.xml -rw-r--r--. 1 root root 1449 8\u6708 18 09:49 httpfs-env.sh -rw-r--r--. 1 root root 1657 8\u6708 18 09:49 httpfs-log4j.properties -rw-r--r--. 1 root root 21 8\u6708 18 09:49 httpfs-signature.secret -rw-r--r--. 1 root root 620 8\u6708 18 09:49 httpfs-site.xml -rw-r--r--. 1 root root 3518 8\u6708 18 09:49 kms-acls.xml -rw-r--r--. 1 root root 1527 8\u6708 18 09:49 kms-env.sh -rw-r--r--. 1 root root 1631 8\u6708 18 09:49 kms-log4j.properties -rw-r--r--. 1 root root 5511 8\u6708 18 09:49 kms-site.xml -rw-r--r--. 1 root root 11237 8\u6708 18 09:49 log4j.properties -rw-r--r--. 1 root root 931 8\u6708 18 09:49 mapred-env.cmd -rw-r--r--. 1 root root 1383 8\u6708 18 09:49 mapred-env.sh -rw-r--r--. 1 root root 4113 8\u6708 18 09:49 mapred-queues.xml.template -rw-r--r--. 1 root root 1612 12\u6708 21 12:03 mapred-site.xml -rw-r--r--. 1 root root 56 12\u6708 21 16:30 slaves -rw-r--r--. 1 root root 2316 8\u6708 18 09:49 ssl-client.xml.example -rw-r--r--. 1 root root 2268 8\u6708 18 09:49 ssl-server.xml.example -rw-r--r--. 1 root root 2191 8\u6708 18 09:49 yarn-env.cmd -rw-r--r--. 1 root root 4564 12\u6708 21 11:19 yarn-env.sh -rw-r--r--. 1 root root 1195 12\u6708 21 14:24 yarn-site.xml 1.4.1 \u4fee\u6539hadoop\u5168\u5c40\u914d\u7f6e\u6587\u4ef6 \u00b6 vim core-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Put site-specific property overrides in this file. --> <configuration> <!--\u914d\u7f6enamenode\u7684\u5730\u5740--> <property> <name>fs.defaultFS</name> <value>hdfs://172.16.200.81:9000</value> </property> <!-- \u6307\u5b9ahadoop\u8fd0\u884c\u65f6\u4ea7\u751f\u6587\u4ef6\u7684\u5b58\u50a8\u76ee\u5f55 --> <property> <name>hadoop.tmp.dir</name> <value>file:///data/hadoop/data/tmp</value> </property> </configuration> 1.4.2 \u914d\u7f6ehadoop\u5173\u8054jdk \u00b6 vim hadoop-env.sh # Licensed to the Apache Software Foundation (ASF) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. The ASF licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # Set Hadoop-specific environment variables here. # The only required environment variable is JAVA_HOME. All others are # optional. When running a distributed configuration it is best to # set JAVA_HOME in this file, so that it is correctly defined on # remote nodes. # The java implementation to use. #\u914d\u7f6ejdk\u7684\u73af\u5883 export JAVA_HOME=/usr/local/jdk1.8.0_111 # The jsvc implementation to use. Jsvc is required to run secure datanodes # that bind to privileged ports to provide authentication of data transfer # protocol. Jsvc is not required if SASL is configured for authentication of # data transfer protocol using non-privileged ports. #export JSVC_HOME=${JSVC_HOME} export HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-\"/etc/hadoop\"} # Extra Java CLASSPATH elements. Automatically insert capacity-scheduler. for f in $HADOOP_HOME/contrib/capacity-scheduler/*.jar; do if [ \"$HADOOP_CLASSPATH\" ]; then export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$f else export HADOOP_CLASSPATH=$f fi done # The maximum amount of heap to use, in MB. Default is 1000. #export HADOOP_HEAPSIZE= #export HADOOP_NAMENODE_INIT_HEAPSIZE=\"\" # Extra Java runtime options. Empty by default. export HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true\" # Command specific options appended to HADOOP_OPTS when specified export HADOOP_NAMENODE_OPTS=\"-Dhadoop.security.logger=${HADOOP_SECURITY_LOGGER:-INFO,RFAS} -Dhdfs.audit.logger=${HDFS_AUDIT_LOGGER:-INFO,NullAppender} $HADOOP_NAMENODE_OPTS\" export HADOOP_DATANODE_OPTS=\"-Dhadoop.security.logger=ERROR,RFAS $HADOOP_DATANODE_OPTS\" export HADOOP_SECONDARYNAMENODE_OPTS=\"-Dhadoop.security.logger=${HADOOP_SECURITY_LOGGER:-INFO,RFAS} -Dhdfs.audit.logger=${HDFS_AUDIT_LOGGER:-INFO,NullAppender} $HADOOP_SECONDARYNAMENODE_OPTS\" export HADOOP_NFS3_OPTS=\"$HADOOP_NFS3_OPTS\" export HADOOP_PORTMAP_OPTS=\"-Xmx512m $HADOOP_PORTMAP_OPTS\" # The following applies to multiple commands (fs, dfs, fsck, distcp etc) export HADOOP_CLIENT_OPTS=\"-Xmx512m $HADOOP_CLIENT_OPTS\" #HADOOP_JAVA_PLATFORM_OPTS=\"-XX:-UsePerfData $HADOOP_JAVA_PLATFORM_OPTS\" # On secure datanodes, user to run the datanode as after dropping privileges. # This **MUST** be uncommented to enable secure HDFS if using privileged ports # to provide authentication of data transfer protocol. This **MUST NOT** be # defined if SASL is configured for authentication of data transfer protocol # using non-privileged ports. export HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER} # Where log files are stored. $HADOOP_HOME/logs by default. #export HADOOP_LOG_DIR=${HADOOP_LOG_DIR}/$USER # Where log files are stored in the secure data environment. export HADOOP_SECURE_DN_LOG_DIR=${HADOOP_LOG_DIR}/${HADOOP_HDFS_USER} ### # HDFS Mover specific parameters ### # Specify the JVM options to be used when starting the HDFS Mover. # These options will be appended to the options specified as HADOOP_OPTS # and therefore may override any similar flags set in HADOOP_OPTS # # export HADOOP_MOVER_OPTS=\"\" ### # Advanced Users Only! ### # The directory where pid files are stored. /tmp by default. # NOTE: this should be set to a directory that can only be written to by # the user that will run the hadoop daemons. Otherwise there is the # potential for a symlink attack. export HADOOP_PID_DIR=${HADOOP_PID_DIR} export HADOOP_SECURE_DN_PID_DIR=${HADOOP_PID_DIR} # A string representing this instance of hadoop. $USER by default. export HADOOP_IDENT_STRING=$USER 1.4.3 \u914d\u7f6ehdfs \u00b6 vim hdfs-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <!-- Put site-specific property overrides in this file. --> <configuration> <!--\u6307\u5b9ahdfs\u7684\u526f\u672c\u6570--> <property> <name>dfs.replication</name> <value>3</value> </property> <!--\u8bbe\u7f6ehdfs\u7684\u6743\u9650--> <property> <name>dfs.permissions</name> <value>false</value> </property> <!-- secondary name node web \u76d1\u542c\u7aef\u53e3 --> <property> <name>dfs.namenode.secondary.http-address</name> <value>172.16.200.81:50090</value> </property> <!-- name node web \u76d1\u542c\u7aef\u53e3 --> <property> <name>dfs.namenode.http-address</name> <value>172.16.200.81:50070</value> </property> <!-- \u771f\u6b63\u7684datanode\u6570\u636e\u4fdd\u5b58\u8def\u5f84 --> <property> <name>dfs.datanode.data.dir</name> <value>file:///data/hadoop/data/dfs/dn</value> </property> <!-- NN\u6240\u4f7f\u7528\u7684\u5143\u6570\u636e\u4fdd\u5b58--> <property> <name>dfs.namenode.name.dir</name> <value>file:///data/hadoop/data/dfs/nn/name</value> </property> <!--\u5b58\u653e edit \u6587\u4ef6--> <property> <name>dfs.namenode.edits.dir</name> <value>file:///data/hadoop/data/dfs/nn/edits</value> </property> <!-- secondary namenode \u8282\u70b9\u5b58\u50a8 checkpoint \u6587\u4ef6\u76ee\u5f55--> <property> <name>dfs.namenode.checkpoint.dir</name> <value>file:///data/hadoop/data/dfs/snn/name</value> </property> <!-- secondary namenode \u8282\u70b9\u5b58\u50a8 edits \u6587\u4ef6\u76ee\u5f55--> <property> <name>dfs.namenode.checkpoint.edits.dir</name> <value>file:///data/hadoop/data/dfs/snn/edits</value> </property> </configuration> 1.4.4 \u914d\u7f6emapred \u00b6 vim mapred-site.xml <?xml version=\"1.0\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <!-- Put site-specific property overrides in this file. --> <configuration> <!-- \u6307\u5b9amr\u8fd0\u884c\u5728yarn\u4e0a --> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> <!--\u5386\u53f2\u670d\u52a1\u7684web\u7aef\u53e3\u5730\u5740 --> <property> <name>mapreduce.jobhistory.webapp.address</name> <value>172.16.200.81:19888</value> </property> <!--\u5386\u53f2\u670d\u52a1\u7684\u7aef\u53e3\u5730\u5740--> <property> <name>mapreduce.jobhistory.address</name> <value>172.16.200.81:10020</value> </property> <!--Uber\u8fd0\u884c\u6a21\u5f0f--> <property> <name>mapreduce.job.ubertask.enable</name> <value>false</value> </property> <!--MapReduce\u4f5c\u4e1a\u4ea7\u751f\u7684\u65e5\u5fd7\u5b58\u653e\u4f4d\u7f6e\u3002--> <property> <name>mapreduce.jobhistory.intermediate-done-dir</name> <value>${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate</value> </property> <!--MR JobHistory Server\u7ba1\u7406\u7684\u65e5\u5fd7\u7684\u5b58\u653e\u4f4d\u7f6e--> <property> <name>mapreduce.jobhistory.done-dir</name> <value>${yarn.app.mapreduce.am.staging-dir}/history/done</value> </property> <!--\u662fjob\u8fd0\u884c\u65f6\u7684\u4e34\u65f6\u6587\u4ef6\u5939--> <property> <name>yarn.app.mapreduce.am.staging-dir</name> <value>/data/hadoop/hadoop-yarn/staging</value> </property> </configuration> 1.4.5 \u914d\u7f6eslaves \u00b6 vim slaves 172.16.200.81 172.16.200.82 172.16.200.83 172.16.200.84 1.4.6 \u914d\u7f6eyarn \u00b6 vim yarn-site.xml <?xml version=\"1.0\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <configuration> <!-- \u6307\u5b9anodeManager\u7ec4\u4ef6\u5728\u54ea\u4e2a\u673a\u5b50\u4e0a\u8dd1 --> <property> <name>yarn.nodemanager.aux-services</name> <value>mapreduce_shuffle</value> </property> <!-- \u6307\u5b9aresourcemanager\u7ec4\u4ef6\u5728\u54ea\u4e2a\u673a\u5b50\u4e0a\u8dd1 --> <property> <name>yarn.resourcemanager.hostname</name> <value>172.16.200.81</value> </property> <!--resourcemanager web\u5730\u5740--> <property> <name>yarn.resourcemanager.webapp.address</name> <value>172.16.200.81:8088</value> </property> <!--\u542f\u7528\u65e5\u5fd7\u805a\u96c6\u529f\u80fd--> <property> <name>yarn.log-aggregation-enable</name> <value>true</value> </property> <!--\u5728HDFS\u4e0a\u805a\u96c6\u7684\u65e5\u5fd7\u6700\u591a\u4fdd\u5b58\u591a\u957f\u65f6\u95f4--> <property> <name>yarn.log-aggregation.retain-seconds</name> <value>86400</value> </property> </configuration> 2. \u642d\u5efaSpark\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09 \u00b6 2.1 \u5b89\u88c5spark \u00b6 cd /usr/loca/src/ tar zxvf spark-2.0.2-bin-hadoop2.7.tgz mv spark-2.0.2-bin-hadoop2.7 /usr/local/spark-2.0.2 2.2 \u914d\u7f6espark\u73af\u5883\u53d8\u91cf \u00b6 vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### spark ############ export SPARK_HOME=/usr/local/spark-2.0.2 export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin 2.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a \u00b6 source /etc/profile 2.4 \u4fee\u6539spark\u914d\u7f6e\u6587\u4ef6 \u00b6 cd /usr/local/spark-2.0.2/conf mv spark-env.sh.template spark-env.sh [root@spark-master conf]# ll \u603b\u7528\u91cf 36 -rw-r--r--. 1 500 500 987 11\u6708 8 09:58 docker.properties.template -rw-r--r--. 1 500 500 1105 11\u6708 8 09:58 fairscheduler.xml.template -rw-r--r--. 1 500 500 2025 11\u6708 8 09:58 log4j.properties.template -rw-r--r--. 1 500 500 7239 11\u6708 8 09:58 metrics.properties.template -rw-r--r--. 1 500 500 912 12\u6708 21 16:55 slaves -rw-r--r--. 1 500 500 1292 11\u6708 8 09:58 spark-defaults.conf.template -rwxr-xr-x. 1 root root 3969 12\u6708 21 15:50 spark-env.sh -rwxr-xr-x. 1 500 500 3861 11\u6708 8 09:58 spark-env.sh.template 2.4.1 spark\u5173\u8054jdk \u00b6 vim spark-env.sh #!/usr/bin/env bash # # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements. See the NOTICE file distributed with # this work for additional information regarding copyright ownership. # The ASF licenses this file to You under the Apache License, Version 2.0 # (the \"License\"); you may not use this file except in compliance with # the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # # This file is sourced when running various Spark programs. # Copy it as spark-env.sh and edit that to configure Spark for your site. # Options read when launching programs locally with # ./bin/run-example or ./bin/spark-submit # - HADOOP_CONF_DIR, to point Spark towards Hadoop configuration files # - SPARK_LOCAL_IP, to set the IP address Spark binds to on this node # - SPARK_PUBLIC_DNS, to set the public dns name of the driver program # - SPARK_CLASSPATH, default classpath entries to append # Options read by executors and drivers running inside the cluster # - SPARK_LOCAL_IP, to set the IP address Spark binds to on this node # - SPARK_PUBLIC_DNS, to set the public DNS name of the driver program # - SPARK_CLASSPATH, default classpath entries to append # - SPARK_LOCAL_DIRS, storage directories to use on this node for shuffle and RDD data # - MESOS_NATIVE_JAVA_LIBRARY, to point to your libmesos.so if you use Mesos # Options read in YARN client mode # - HADOOP_CONF_DIR, to point Spark towards Hadoop configuration files # - SPARK_EXECUTOR_INSTANCES, Number of executors to start (Default: 2) # - SPARK_EXECUTOR_CORES, Number of cores for the executors (Default: 1). # - SPARK_EXECUTOR_MEMORY, Memory per Executor (e.g. 1000M, 2G) (Default: 1G) # - SPARK_DRIVER_MEMORY, Memory for Driver (e.g. 1000M, 2G) (Default: 1G) # Options for the daemons used in the standalone deploy mode # - SPARK_MASTER_HOST, to bind the master to a different IP address or hostname # - SPARK_MASTER_PORT / SPARK_MASTER_WEBUI_PORT, to use non-default ports for the master # - SPARK_MASTER_OPTS, to set config properties only for the master (e.g. \"-Dx=y\") # - SPARK_WORKER_CORES, to set the number of cores to use on this machine # - SPARK_WORKER_MEMORY, to set how much total memory workers have to give executors (e.g. 1000m, 2g) # - SPARK_WORKER_PORT / SPARK_WORKER_WEBUI_PORT, to use non-default ports for the worker # - SPARK_WORKER_INSTANCES, to set the number of worker processes per node # - SPARK_WORKER_DIR, to set the working directory of worker processes # - SPARK_WORKER_OPTS, to set config properties only for the worker (e.g. \"-Dx=y\") # - SPARK_DAEMON_MEMORY, to allocate to the master, worker and history server themselves (default: 1g). # - SPARK_HISTORY_OPTS, to set config properties only for the history server (e.g. \"-Dx=y\") # - SPARK_SHUFFLE_OPTS, to set config properties only for the external shuffle service (e.g. \"-Dx=y\") # - SPARK_DAEMON_JAVA_OPTS, to set config properties for all daemons (e.g. \"-Dx=y\") # - SPARK_PUBLIC_DNS, to set the public dns name of the master or workers # Generic options for the daemons used in the standalone deploy mode # - SPARK_CONF_DIR Alternate conf dir. (Default: ${SPARK_HOME}/conf) # - SPARK_LOG_DIR Where log files are stored. (Default: ${SPARK_HOME}/logs) # - SPARK_PID_DIR Where the pid file is stored. (Default: /tmp) # - SPARK_IDENT_STRING A string representing this instance of spark. (Default: $USER) # - SPARK_NICENESS The scheduling priority for daemons. (Default: 0) #java\u7684\u73af\u5883\u53d8\u91cf export JAVA_HOME=/usr/local/jdk1.8.0_111 #spark\u4e3b\u8282\u70b9\u7684ip export SPARK_MASTER_IP=172.16.200.81 #spark\u4e3b\u8282\u70b9\u7684\u7aef\u53e3\u53f7 export SPARK_MASTER_PORT=7077 2.4.2 \u914d\u7f6eslaves \u00b6 vim slaves # # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements. See the NOTICE file distributed with # this work for additional information regarding copyright ownership. # The ASF licenses this file to You under the Apache License, Version 2.0 # (the \"License\"); you may not use this file except in compliance with # the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # # A Spark Worker will be started on each of the machines listed below. 172.16.200.81 172.16.200.82 172.16.200.83 172.16.200.84 3. \u5b89\u88c5scala \u00b6 cd /usr/loca/src/ tar zxvf scala-2.12.1.tgz mv scala-2.12.1 /usr/local 3.1 \u914d\u7f6escala\u73af\u5883\u53d8\u91cf\uff08\u53eamaster\u5b89\u88c5\uff09 \u00b6 vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### scala ########## export SCALA_HOME=/usr/local/scala-2.12.1 export PATH=$PATH:$SCALA_HOME/bin 3.2 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a \u00b6 source /etc/profile 4. \u542f\u52a8\u7a0b\u5e8f \u00b6 4.1 \u542f\u52a8hadoop \u00b6 4.1.1 \u683c\u5f0f\u5316namenode \u00b6 hadoop namenode -format 4.1.2 master\u542f\u52a8hadoop \u00b6 cd /usr/local/hadoop-2.7.3/sbin ./start-all.sh \u63d0\u793a start-all.sh //\u542f\u52a8master\u548cslaves stop-all.sh //\u505c\u6b62master\u548cslaves \u67e5\u770b\u8fdb\u7a0b \uff08master\uff09 [root@spark-master sbin]# jps 8961 NodeManager 8327 DataNode 8503 SecondaryNameNode 8187 NameNode 8670 ResourceManager 9102 Jps [root@spark-master sbin]# \u67e5\u770b\u8fdb\u7a0b \uff08slave\uff09 [root@spark-slave01 ~]# jps 4289 NodeManager 4439 Jps 4175 DataNode [root@spark-slave01 ~]# slave01\u3001slve02\u3001slave03\u663e\u793a\u76f8\u540c 4.2 \u542f\u52a8spark \u00b6 4.1.2 master\u542f\u52a8hadoop \u00b6 cd /usr/local/spark-2.0.2/sbin ./start-all.sh \u63d0\u793a start-all.sh //\u542f\u52a8master\u548cslaves stop-all.sh //\u505c\u6b62master\u548cslaves","title":"\u5927\u6570\u636e\u5e73\u53f0\u642d\u5efa\uff08Hadoop+Spark\uff09"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#_1","text":"","title":"\u4e00.\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#1","text":"\u4e3b\u673a\u540d ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 spark-master 172.16.200.81 jdk\u3001hadoop\u3001spark\u3001scala spark-slave01 172.16.200.82 jdk\u3001hadoop\u3001spark spark-slave02 172.16.200.83 jdk\u3001hadoop\u3001spark spark-slave03 172.16.200.84 jdk\u3001hadoop\u3001spark","title":"1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#2","text":"\u8f6f\u4ef6\u540d \u7248\u672c \u5b89\u88c5\u8def\u5f84 oracle jdk 1.8.0_111 /usr/local/jdk1.8.0_111 hadoop 2.7.1 /usr/local/hadoop-2.7.3 spark 2.0.2 /usr/local/spark-2.0.2 scala 2.12.1 usr/local/2.12.1","title":"2. \u8f6f\u4ef6\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#3","text":"############# java ############ export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ########### hadoop ########## export HADOOP_HOME=/usr/local/hadoop-2.7.3 export PATH=$JAVA_HOme/bin:$HADOOP_HOME/bin:$PATH export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin ######### spark ############ export SPARK_HOME=/usr/local/spark-2.0.2 export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin ######### scala ########## export SCALA_HOME=/usr/local/scala-2.12.1 export PATH=$PATH:$SCALA_HOME/bin","title":"3.\u73af\u5883\u53d8\u91cf\u6c47\u603b"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#4-masterslave","text":"","title":"4. \u57fa\u672c\u73af\u5883\u914d\u7f6e\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#41-jdk","text":"cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz","title":"4.1 \u914d\u7f6ejdk"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#42-java","text":"vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### jdk ############ export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar","title":"4.2 \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#43","text":"source /etc/profile","title":"4.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#44-hosts","text":"vim /etc/hosts 172.16.200.81 spark-master 172.16.200.82 spark-slave1 172.16.200.83 spark-slave2","title":"4.4 \u914d\u7f6ehosts"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#45","text":"\u751f\u6210\u5bc6\u94a5\u5bf9 ssh-keygen \u5982\u679c\u5bc6\u94a5\u4e0d\u8bbe\u7f6e\u5bc6\u7801\uff0c\u5219\u8fde\u6309\u51e0\u4e0b\u56de\u8f66 \u5148\u914d\u7f6e\u672c\u673a\u514d\u5bc6\u7801\u767b\u5f55 cd /root/.ssh cat id_rsa.pub > authorized_keys chmod 600 authorized_keys \u518d\u5c06\u5176\u5b83\u4e3b\u673aid_rsa.pub \u5185\u5bb9\u8ffd\u52a0\u5230 authorized_keys\u4e2d\uff0c\u4e09\u53f0\u914d\u7f6e\u5b8c\u6210\u540e\u5373\u53ef\u5b9e\u73b0\u514d\u5bc6\u7801\u767b\u5f55","title":"4.5 \u914d\u7f6e\u514d\u5bc6\u7801"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#_2","text":"","title":"\u4e8c.\u5927\u6570\u636e\u5e73\u53f0\u642d\u5efa"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#1-hadoopmasterslave","text":"","title":"1. \u642d\u5efaHadoop\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#11-hadoop","text":"cd /usr/loca/src/ tar -C /usr/local/ -xzf hadoop-2.7.3.tar.gz","title":"1.1 \u5b89\u88c5hadoop"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#12-hadoop","text":"vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### hadoop ############ export HADOOP_HOME=/usr/local/hadoop-2.7.3 export PATH=$JAVA_HOme/bin:$HADOOP_HOME/bin:$PATH export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native export PATH=$PATH:$JAVA_HOME/bin:$HADOOP_HOME/bin:$HADOOP_HOME/sbin","title":"1.2 \u914d\u7f6ehadoop\u73af\u5883\u53d8\u91cf"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#13","text":"source /etc/profile","title":"1.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#14-hadoop","text":"cd /usr/local/hadoop-2.7.3/etc/hadoop \u67e5\u770b root@spark-master hadoop]# ll \u603b\u7528\u91cf 152 -rw-r--r--. 1 root root 4436 8\u6708 18 09:49 capacity-scheduler.xml -rw-r--r--. 1 root root 1335 8\u6708 18 09:49 configuration.xsl -rw-r--r--. 1 root root 318 8\u6708 18 09:49 container-executor.cfg -rw-r--r--. 1 root root 1037 12\u6708 21 14:58 core-site.xml -rw-r--r--. 1 root root 3589 8\u6708 18 09:49 hadoop-env.cmd -rw-r--r--. 1 root root 4235 12\u6708 21 11:17 hadoop-env.sh -rw-r--r--. 1 root root 2598 8\u6708 18 09:49 hadoop-metrics2.properties -rw-r--r--. 1 root root 2490 8\u6708 18 09:49 hadoop-metrics.properties -rw-r--r--. 1 root root 9683 8\u6708 18 09:49 hadoop-policy.xml -rw-r--r--. 1 root root 1826 12\u6708 21 14:11 hdfs-site.xml -rw-r--r--. 1 root root 1449 8\u6708 18 09:49 httpfs-env.sh -rw-r--r--. 1 root root 1657 8\u6708 18 09:49 httpfs-log4j.properties -rw-r--r--. 1 root root 21 8\u6708 18 09:49 httpfs-signature.secret -rw-r--r--. 1 root root 620 8\u6708 18 09:49 httpfs-site.xml -rw-r--r--. 1 root root 3518 8\u6708 18 09:49 kms-acls.xml -rw-r--r--. 1 root root 1527 8\u6708 18 09:49 kms-env.sh -rw-r--r--. 1 root root 1631 8\u6708 18 09:49 kms-log4j.properties -rw-r--r--. 1 root root 5511 8\u6708 18 09:49 kms-site.xml -rw-r--r--. 1 root root 11237 8\u6708 18 09:49 log4j.properties -rw-r--r--. 1 root root 931 8\u6708 18 09:49 mapred-env.cmd -rw-r--r--. 1 root root 1383 8\u6708 18 09:49 mapred-env.sh -rw-r--r--. 1 root root 4113 8\u6708 18 09:49 mapred-queues.xml.template -rw-r--r--. 1 root root 1612 12\u6708 21 12:03 mapred-site.xml -rw-r--r--. 1 root root 56 12\u6708 21 16:30 slaves -rw-r--r--. 1 root root 2316 8\u6708 18 09:49 ssl-client.xml.example -rw-r--r--. 1 root root 2268 8\u6708 18 09:49 ssl-server.xml.example -rw-r--r--. 1 root root 2191 8\u6708 18 09:49 yarn-env.cmd -rw-r--r--. 1 root root 4564 12\u6708 21 11:19 yarn-env.sh -rw-r--r--. 1 root root 1195 12\u6708 21 14:24 yarn-site.xml","title":"1.4 \u4fee\u6539hadoop\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#141-hadoop","text":"vim core-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Put site-specific property overrides in this file. --> <configuration> <!--\u914d\u7f6enamenode\u7684\u5730\u5740--> <property> <name>fs.defaultFS</name> <value>hdfs://172.16.200.81:9000</value> </property> <!-- \u6307\u5b9ahadoop\u8fd0\u884c\u65f6\u4ea7\u751f\u6587\u4ef6\u7684\u5b58\u50a8\u76ee\u5f55 --> <property> <name>hadoop.tmp.dir</name> <value>file:///data/hadoop/data/tmp</value> </property> </configuration>","title":"1.4.1 \u4fee\u6539hadoop\u5168\u5c40\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#142-hadoopjdk","text":"vim hadoop-env.sh # Licensed to the Apache Software Foundation (ASF) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. The ASF licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # Set Hadoop-specific environment variables here. # The only required environment variable is JAVA_HOME. All others are # optional. When running a distributed configuration it is best to # set JAVA_HOME in this file, so that it is correctly defined on # remote nodes. # The java implementation to use. #\u914d\u7f6ejdk\u7684\u73af\u5883 export JAVA_HOME=/usr/local/jdk1.8.0_111 # The jsvc implementation to use. Jsvc is required to run secure datanodes # that bind to privileged ports to provide authentication of data transfer # protocol. Jsvc is not required if SASL is configured for authentication of # data transfer protocol using non-privileged ports. #export JSVC_HOME=${JSVC_HOME} export HADOOP_CONF_DIR=${HADOOP_CONF_DIR:-\"/etc/hadoop\"} # Extra Java CLASSPATH elements. Automatically insert capacity-scheduler. for f in $HADOOP_HOME/contrib/capacity-scheduler/*.jar; do if [ \"$HADOOP_CLASSPATH\" ]; then export HADOOP_CLASSPATH=$HADOOP_CLASSPATH:$f else export HADOOP_CLASSPATH=$f fi done # The maximum amount of heap to use, in MB. Default is 1000. #export HADOOP_HEAPSIZE= #export HADOOP_NAMENODE_INIT_HEAPSIZE=\"\" # Extra Java runtime options. Empty by default. export HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true\" # Command specific options appended to HADOOP_OPTS when specified export HADOOP_NAMENODE_OPTS=\"-Dhadoop.security.logger=${HADOOP_SECURITY_LOGGER:-INFO,RFAS} -Dhdfs.audit.logger=${HDFS_AUDIT_LOGGER:-INFO,NullAppender} $HADOOP_NAMENODE_OPTS\" export HADOOP_DATANODE_OPTS=\"-Dhadoop.security.logger=ERROR,RFAS $HADOOP_DATANODE_OPTS\" export HADOOP_SECONDARYNAMENODE_OPTS=\"-Dhadoop.security.logger=${HADOOP_SECURITY_LOGGER:-INFO,RFAS} -Dhdfs.audit.logger=${HDFS_AUDIT_LOGGER:-INFO,NullAppender} $HADOOP_SECONDARYNAMENODE_OPTS\" export HADOOP_NFS3_OPTS=\"$HADOOP_NFS3_OPTS\" export HADOOP_PORTMAP_OPTS=\"-Xmx512m $HADOOP_PORTMAP_OPTS\" # The following applies to multiple commands (fs, dfs, fsck, distcp etc) export HADOOP_CLIENT_OPTS=\"-Xmx512m $HADOOP_CLIENT_OPTS\" #HADOOP_JAVA_PLATFORM_OPTS=\"-XX:-UsePerfData $HADOOP_JAVA_PLATFORM_OPTS\" # On secure datanodes, user to run the datanode as after dropping privileges. # This **MUST** be uncommented to enable secure HDFS if using privileged ports # to provide authentication of data transfer protocol. This **MUST NOT** be # defined if SASL is configured for authentication of data transfer protocol # using non-privileged ports. export HADOOP_SECURE_DN_USER=${HADOOP_SECURE_DN_USER} # Where log files are stored. $HADOOP_HOME/logs by default. #export HADOOP_LOG_DIR=${HADOOP_LOG_DIR}/$USER # Where log files are stored in the secure data environment. export HADOOP_SECURE_DN_LOG_DIR=${HADOOP_LOG_DIR}/${HADOOP_HDFS_USER} ### # HDFS Mover specific parameters ### # Specify the JVM options to be used when starting the HDFS Mover. # These options will be appended to the options specified as HADOOP_OPTS # and therefore may override any similar flags set in HADOOP_OPTS # # export HADOOP_MOVER_OPTS=\"\" ### # Advanced Users Only! ### # The directory where pid files are stored. /tmp by default. # NOTE: this should be set to a directory that can only be written to by # the user that will run the hadoop daemons. Otherwise there is the # potential for a symlink attack. export HADOOP_PID_DIR=${HADOOP_PID_DIR} export HADOOP_SECURE_DN_PID_DIR=${HADOOP_PID_DIR} # A string representing this instance of hadoop. $USER by default. export HADOOP_IDENT_STRING=$USER","title":"1.4.2 \u914d\u7f6ehadoop\u5173\u8054jdk"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#143-hdfs","text":"vim hdfs-site.xml <?xml version=\"1.0\" encoding=\"UTF-8\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <!-- Put site-specific property overrides in this file. --> <configuration> <!--\u6307\u5b9ahdfs\u7684\u526f\u672c\u6570--> <property> <name>dfs.replication</name> <value>3</value> </property> <!--\u8bbe\u7f6ehdfs\u7684\u6743\u9650--> <property> <name>dfs.permissions</name> <value>false</value> </property> <!-- secondary name node web \u76d1\u542c\u7aef\u53e3 --> <property> <name>dfs.namenode.secondary.http-address</name> <value>172.16.200.81:50090</value> </property> <!-- name node web \u76d1\u542c\u7aef\u53e3 --> <property> <name>dfs.namenode.http-address</name> <value>172.16.200.81:50070</value> </property> <!-- \u771f\u6b63\u7684datanode\u6570\u636e\u4fdd\u5b58\u8def\u5f84 --> <property> <name>dfs.datanode.data.dir</name> <value>file:///data/hadoop/data/dfs/dn</value> </property> <!-- NN\u6240\u4f7f\u7528\u7684\u5143\u6570\u636e\u4fdd\u5b58--> <property> <name>dfs.namenode.name.dir</name> <value>file:///data/hadoop/data/dfs/nn/name</value> </property> <!--\u5b58\u653e edit \u6587\u4ef6--> <property> <name>dfs.namenode.edits.dir</name> <value>file:///data/hadoop/data/dfs/nn/edits</value> </property> <!-- secondary namenode \u8282\u70b9\u5b58\u50a8 checkpoint \u6587\u4ef6\u76ee\u5f55--> <property> <name>dfs.namenode.checkpoint.dir</name> <value>file:///data/hadoop/data/dfs/snn/name</value> </property> <!-- secondary namenode \u8282\u70b9\u5b58\u50a8 edits \u6587\u4ef6\u76ee\u5f55--> <property> <name>dfs.namenode.checkpoint.edits.dir</name> <value>file:///data/hadoop/data/dfs/snn/edits</value> </property> </configuration>","title":"1.4.3 \u914d\u7f6ehdfs"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#144-mapred","text":"vim mapred-site.xml <?xml version=\"1.0\"?> <?xml-stylesheet type=\"text/xsl\" href=\"configuration.xsl\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <!-- Put site-specific property overrides in this file. --> <configuration> <!-- \u6307\u5b9amr\u8fd0\u884c\u5728yarn\u4e0a --> <property> <name>mapreduce.framework.name</name> <value>yarn</value> </property> <!--\u5386\u53f2\u670d\u52a1\u7684web\u7aef\u53e3\u5730\u5740 --> <property> <name>mapreduce.jobhistory.webapp.address</name> <value>172.16.200.81:19888</value> </property> <!--\u5386\u53f2\u670d\u52a1\u7684\u7aef\u53e3\u5730\u5740--> <property> <name>mapreduce.jobhistory.address</name> <value>172.16.200.81:10020</value> </property> <!--Uber\u8fd0\u884c\u6a21\u5f0f--> <property> <name>mapreduce.job.ubertask.enable</name> <value>false</value> </property> <!--MapReduce\u4f5c\u4e1a\u4ea7\u751f\u7684\u65e5\u5fd7\u5b58\u653e\u4f4d\u7f6e\u3002--> <property> <name>mapreduce.jobhistory.intermediate-done-dir</name> <value>${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate</value> </property> <!--MR JobHistory Server\u7ba1\u7406\u7684\u65e5\u5fd7\u7684\u5b58\u653e\u4f4d\u7f6e--> <property> <name>mapreduce.jobhistory.done-dir</name> <value>${yarn.app.mapreduce.am.staging-dir}/history/done</value> </property> <!--\u662fjob\u8fd0\u884c\u65f6\u7684\u4e34\u65f6\u6587\u4ef6\u5939--> <property> <name>yarn.app.mapreduce.am.staging-dir</name> <value>/data/hadoop/hadoop-yarn/staging</value> </property> </configuration>","title":"1.4.4 \u914d\u7f6emapred"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#145-slaves","text":"vim slaves 172.16.200.81 172.16.200.82 172.16.200.83 172.16.200.84","title":"1.4.5 \u914d\u7f6eslaves"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#146-yarn","text":"vim yarn-site.xml <?xml version=\"1.0\"?> <!-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. See accompanying LICENSE file. --> <configuration> <!-- \u6307\u5b9anodeManager\u7ec4\u4ef6\u5728\u54ea\u4e2a\u673a\u5b50\u4e0a\u8dd1 --> <property> <name>yarn.nodemanager.aux-services</name> <value>mapreduce_shuffle</value> </property> <!-- \u6307\u5b9aresourcemanager\u7ec4\u4ef6\u5728\u54ea\u4e2a\u673a\u5b50\u4e0a\u8dd1 --> <property> <name>yarn.resourcemanager.hostname</name> <value>172.16.200.81</value> </property> <!--resourcemanager web\u5730\u5740--> <property> <name>yarn.resourcemanager.webapp.address</name> <value>172.16.200.81:8088</value> </property> <!--\u542f\u7528\u65e5\u5fd7\u805a\u96c6\u529f\u80fd--> <property> <name>yarn.log-aggregation-enable</name> <value>true</value> </property> <!--\u5728HDFS\u4e0a\u805a\u96c6\u7684\u65e5\u5fd7\u6700\u591a\u4fdd\u5b58\u591a\u957f\u65f6\u95f4--> <property> <name>yarn.log-aggregation.retain-seconds</name> <value>86400</value> </property> </configuration>","title":"1.4.6 \u914d\u7f6eyarn"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#2-sparkmasterslave","text":"","title":"2. \u642d\u5efaSpark\uff08master\u3001slave\u76f8\u540c\u64cd\u4f5c\uff09"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#21-spark","text":"cd /usr/loca/src/ tar zxvf spark-2.0.2-bin-hadoop2.7.tgz mv spark-2.0.2-bin-hadoop2.7 /usr/local/spark-2.0.2","title":"2.1  \u5b89\u88c5spark"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#22-spark","text":"vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### spark ############ export SPARK_HOME=/usr/local/spark-2.0.2 export PATH=$PATH:$SPARK_HOME/bin:$SPARK_HOME/sbin","title":"2.2 \u914d\u7f6espark\u73af\u5883\u53d8\u91cf"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#23","text":"source /etc/profile","title":"2.3 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#24-spark","text":"cd /usr/local/spark-2.0.2/conf mv spark-env.sh.template spark-env.sh [root@spark-master conf]# ll \u603b\u7528\u91cf 36 -rw-r--r--. 1 500 500 987 11\u6708 8 09:58 docker.properties.template -rw-r--r--. 1 500 500 1105 11\u6708 8 09:58 fairscheduler.xml.template -rw-r--r--. 1 500 500 2025 11\u6708 8 09:58 log4j.properties.template -rw-r--r--. 1 500 500 7239 11\u6708 8 09:58 metrics.properties.template -rw-r--r--. 1 500 500 912 12\u6708 21 16:55 slaves -rw-r--r--. 1 500 500 1292 11\u6708 8 09:58 spark-defaults.conf.template -rwxr-xr-x. 1 root root 3969 12\u6708 21 15:50 spark-env.sh -rwxr-xr-x. 1 500 500 3861 11\u6708 8 09:58 spark-env.sh.template","title":"2.4 \u4fee\u6539spark\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#241-sparkjdk","text":"vim spark-env.sh #!/usr/bin/env bash # # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements. See the NOTICE file distributed with # this work for additional information regarding copyright ownership. # The ASF licenses this file to You under the Apache License, Version 2.0 # (the \"License\"); you may not use this file except in compliance with # the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # # This file is sourced when running various Spark programs. # Copy it as spark-env.sh and edit that to configure Spark for your site. # Options read when launching programs locally with # ./bin/run-example or ./bin/spark-submit # - HADOOP_CONF_DIR, to point Spark towards Hadoop configuration files # - SPARK_LOCAL_IP, to set the IP address Spark binds to on this node # - SPARK_PUBLIC_DNS, to set the public dns name of the driver program # - SPARK_CLASSPATH, default classpath entries to append # Options read by executors and drivers running inside the cluster # - SPARK_LOCAL_IP, to set the IP address Spark binds to on this node # - SPARK_PUBLIC_DNS, to set the public DNS name of the driver program # - SPARK_CLASSPATH, default classpath entries to append # - SPARK_LOCAL_DIRS, storage directories to use on this node for shuffle and RDD data # - MESOS_NATIVE_JAVA_LIBRARY, to point to your libmesos.so if you use Mesos # Options read in YARN client mode # - HADOOP_CONF_DIR, to point Spark towards Hadoop configuration files # - SPARK_EXECUTOR_INSTANCES, Number of executors to start (Default: 2) # - SPARK_EXECUTOR_CORES, Number of cores for the executors (Default: 1). # - SPARK_EXECUTOR_MEMORY, Memory per Executor (e.g. 1000M, 2G) (Default: 1G) # - SPARK_DRIVER_MEMORY, Memory for Driver (e.g. 1000M, 2G) (Default: 1G) # Options for the daemons used in the standalone deploy mode # - SPARK_MASTER_HOST, to bind the master to a different IP address or hostname # - SPARK_MASTER_PORT / SPARK_MASTER_WEBUI_PORT, to use non-default ports for the master # - SPARK_MASTER_OPTS, to set config properties only for the master (e.g. \"-Dx=y\") # - SPARK_WORKER_CORES, to set the number of cores to use on this machine # - SPARK_WORKER_MEMORY, to set how much total memory workers have to give executors (e.g. 1000m, 2g) # - SPARK_WORKER_PORT / SPARK_WORKER_WEBUI_PORT, to use non-default ports for the worker # - SPARK_WORKER_INSTANCES, to set the number of worker processes per node # - SPARK_WORKER_DIR, to set the working directory of worker processes # - SPARK_WORKER_OPTS, to set config properties only for the worker (e.g. \"-Dx=y\") # - SPARK_DAEMON_MEMORY, to allocate to the master, worker and history server themselves (default: 1g). # - SPARK_HISTORY_OPTS, to set config properties only for the history server (e.g. \"-Dx=y\") # - SPARK_SHUFFLE_OPTS, to set config properties only for the external shuffle service (e.g. \"-Dx=y\") # - SPARK_DAEMON_JAVA_OPTS, to set config properties for all daemons (e.g. \"-Dx=y\") # - SPARK_PUBLIC_DNS, to set the public dns name of the master or workers # Generic options for the daemons used in the standalone deploy mode # - SPARK_CONF_DIR Alternate conf dir. (Default: ${SPARK_HOME}/conf) # - SPARK_LOG_DIR Where log files are stored. (Default: ${SPARK_HOME}/logs) # - SPARK_PID_DIR Where the pid file is stored. (Default: /tmp) # - SPARK_IDENT_STRING A string representing this instance of spark. (Default: $USER) # - SPARK_NICENESS The scheduling priority for daemons. (Default: 0) #java\u7684\u73af\u5883\u53d8\u91cf export JAVA_HOME=/usr/local/jdk1.8.0_111 #spark\u4e3b\u8282\u70b9\u7684ip export SPARK_MASTER_IP=172.16.200.81 #spark\u4e3b\u8282\u70b9\u7684\u7aef\u53e3\u53f7 export SPARK_MASTER_PORT=7077","title":"2.4.1 spark\u5173\u8054jdk"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#242-slaves","text":"vim slaves # # Licensed to the Apache Software Foundation (ASF) under one or more # contributor license agreements. See the NOTICE file distributed with # this work for additional information regarding copyright ownership. # The ASF licenses this file to You under the Apache License, Version 2.0 # (the \"License\"); you may not use this file except in compliance with # the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, software # distributed under the License is distributed on an \"AS IS\" BASIS, # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. # See the License for the specific language governing permissions and # limitations under the License. # # A Spark Worker will be started on each of the machines listed below. 172.16.200.81 172.16.200.82 172.16.200.83 172.16.200.84","title":"2.4.2 \u914d\u7f6eslaves"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#3-scala","text":"cd /usr/loca/src/ tar zxvf scala-2.12.1.tgz mv scala-2.12.1 /usr/local","title":"3. \u5b89\u88c5scala"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#31-scalamaster","text":"vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f ######### scala ########## export SCALA_HOME=/usr/local/scala-2.12.1 export PATH=$PATH:$SCALA_HOME/bin","title":"3.1 \u914d\u7f6escala\u73af\u5883\u53d8\u91cf\uff08\u53eamaster\u5b89\u88c5\uff09"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#32","text":"source /etc/profile","title":"3.2 \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#4","text":"","title":"4. \u542f\u52a8\u7a0b\u5e8f"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#41-hadoop","text":"","title":"4.1 \u542f\u52a8hadoop"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#411-namenode","text":"hadoop namenode -format","title":"4.1.1 \u683c\u5f0f\u5316namenode"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#412-masterhadoop","text":"cd /usr/local/hadoop-2.7.3/sbin ./start-all.sh \u63d0\u793a start-all.sh //\u542f\u52a8master\u548cslaves stop-all.sh //\u505c\u6b62master\u548cslaves \u67e5\u770b\u8fdb\u7a0b \uff08master\uff09 [root@spark-master sbin]# jps 8961 NodeManager 8327 DataNode 8503 SecondaryNameNode 8187 NameNode 8670 ResourceManager 9102 Jps [root@spark-master sbin]# \u67e5\u770b\u8fdb\u7a0b \uff08slave\uff09 [root@spark-slave01 ~]# jps 4289 NodeManager 4439 Jps 4175 DataNode [root@spark-slave01 ~]# slave01\u3001slve02\u3001slave03\u663e\u793a\u76f8\u540c","title":"4.1.2 master\u542f\u52a8hadoop"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#42-spark","text":"","title":"4.2 \u542f\u52a8spark"},{"location":"DevOps/04%20Data/big-data-platform-building-hadoop%2Bspark/#412-masterhadoop_1","text":"cd /usr/local/spark-2.0.2/sbin ./start-all.sh \u63d0\u793a start-all.sh //\u542f\u52a8master\u548cslaves stop-all.sh //\u505c\u6b62master\u548cslaves","title":"4.1.2 master\u542f\u52a8hadoop"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/","text":"1. dataX \u8bf4\u660e \u00b6 DataX \u662f\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u5185\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u79bb\u7ebf\u6570\u636e\u540c\u6b65\u5de5\u5177/\u5e73\u53f0\uff0c\u5b9e\u73b0\u5305\u62ec MySQL\u3001Oracle\u3001SqlServer\u3001Postgre\u3001HDFS\u3001Hive\u3001ADS\u3001HBase\u3001OTS\u3001ODPS \u7b49\u5404\u79cd\u5f02\u6784\u6570\u636e\u6e90\u4e4b\u95f4\u9ad8\u6548\u7684\u6570\u636e\u540c\u6b65\u529f\u80fd\u3002 2. \u4e0b\u8f7d \u00b6 \u4f7f\u7528git git clone git@github.com :alibaba/DataX.git \u4f7f\u7528wget wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz 3. \u5b89\u88c5 \u00b6 > git \u6e90\u7801\u7f16\u8bd1 \u53c2\u8003:https://github.com/alibaba/DataX/wiki/compile-datax > wget \u5b89\u88c5 \u53c2\u8003 https://github.com/alibaba/DataX/wiki/Quick-Start \u4e0b\u8f7d\u540e\u89e3\u538b\u81f3\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\uff0c\u4fee\u6539\u6743\u9650\u4e3a755\uff0c\u8fdb\u5165bin\u76ee\u5f55\uff0c\u5373\u53ef\u8fd0\u884c\u6837\u4f8b\u540c\u6b65\u4f5c\u4e1a\uff1a $ tar zxvf datax.tar.gz $ sudo chmod -R 755 {YOUR_DATAX_HOME} $ cd {YOUR_DATAX_HOME}/bin $ python datax.py ../job/job.json 4. \u914d\u7f6e \u00b6 5 job json \u6587\u4ef6\u914d\u7f6e \u00b6 nysql\u6570\u636e\u540c\u6b65\u5230odps(mysq2odsp.json)\uff1a { \"job\": { \"content\": [ { \"reader\": { \"name\": \"mysqlreader\", \"parameter\": { \"username\": \"username\", \"password\": \"password\", \"column\": [\"uid\",\"date_time\"], \"connection\": [ { \"table\": [ \"datax_user\" ], \"jdbcUrl\": [ \"jdbc:mysql://127.0.0.1:3306/test\" ] } ] } }, \"writer\": { \"name\": \"odpswriter\", \"parameter\": { \"accessId\": \"accessId\", \"accessKey\": \"accessKey\", \"column\": [\"uid\",\"date_time\"], \"odpsServer\": \"http://service.odps.aliyun.com/api\", \"partition\": \"\", \"project\": \"odps_ project\", \"table\": \"odps_ project\", \"truncate\": true } } } ], \"setting\": { \"speed\": { \"channel\": 5 } } } } odps\u540c\u6b65\u5230mysql(odsp2mysq.json)\uff1a { \"job\": { \"content\": [ { \"reader\": { \"name\": \"odpsreader\", \"parameter\": { \"accessId\": \"accessId\", \"accessKey\": \"accessKey\", \"project\": \"project\", \"table\": \"stat_user_tag\", \"column\": [ \"user_id\", \"province\", \"city\", \"county\", \"birthday\", \"baby_id\", \"baby_birthday\", \"model\" ], \"packageAuthorizedProject\": \"project\", \"splitMode\": \"record\", \"odpsServer\": \"http://service.odps.aliyun.com/api\" } }, \"writer\": { \"name\": \"mysqlwriter\", \"parameter\": { \"writeMode\": \"insert\", \"username\": \"username\", \"password\": \"password\", \"column\": [ \"user_id\", \"province\", \"city\", \"county\", \"birthday\", \"baby_id\", \"baby_birthday\", \"model\" ], \"session\": [ \"set session sql_mode='ANSI'\" ], \"preSql\": [ \"truncate log_stat_user_tag\" ], \"connection\": [ { \"jdbcUrl\": \"jdbc:mysql://172.16.200.17:3306/test?useUnicode=true&characterEncoding=utf8\", \"table\": [ \"log_stat_user_tag\" ] } ] } } } ], \"setting\": { \"speed\": { \"channel\": 5 } } } } 5. \u6267\u884c\u6d4b\u8bd5 \u00b6 mysql\u540c\u6b65\u5230odps python datax.py /job/mysql2odps.json odps\u540c\u6b65\u5230mysql python datax.py /job/odps2mysql.json","title":"DataX\u540c\u6b65\u6570\u636e\u914d\u7f6e"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#1-datax","text":"DataX \u662f\u963f\u91cc\u5df4\u5df4\u96c6\u56e2\u5185\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u79bb\u7ebf\u6570\u636e\u540c\u6b65\u5de5\u5177/\u5e73\u53f0\uff0c\u5b9e\u73b0\u5305\u62ec MySQL\u3001Oracle\u3001SqlServer\u3001Postgre\u3001HDFS\u3001Hive\u3001ADS\u3001HBase\u3001OTS\u3001ODPS \u7b49\u5404\u79cd\u5f02\u6784\u6570\u636e\u6e90\u4e4b\u95f4\u9ad8\u6548\u7684\u6570\u636e\u540c\u6b65\u529f\u80fd\u3002","title":"1. dataX \u8bf4\u660e"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#2","text":"\u4f7f\u7528git git clone git@github.com :alibaba/DataX.git \u4f7f\u7528wget wget http://datax-opensource.oss-cn-hangzhou.aliyuncs.com/datax.tar.gz","title":"2. \u4e0b\u8f7d"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#3","text":"> git \u6e90\u7801\u7f16\u8bd1 \u53c2\u8003:https://github.com/alibaba/DataX/wiki/compile-datax > wget \u5b89\u88c5 \u53c2\u8003 https://github.com/alibaba/DataX/wiki/Quick-Start \u4e0b\u8f7d\u540e\u89e3\u538b\u81f3\u672c\u5730\u67d0\u4e2a\u76ee\u5f55\uff0c\u4fee\u6539\u6743\u9650\u4e3a755\uff0c\u8fdb\u5165bin\u76ee\u5f55\uff0c\u5373\u53ef\u8fd0\u884c\u6837\u4f8b\u540c\u6b65\u4f5c\u4e1a\uff1a $ tar zxvf datax.tar.gz $ sudo chmod -R 755 {YOUR_DATAX_HOME} $ cd {YOUR_DATAX_HOME}/bin $ python datax.py ../job/job.json","title":"3. \u5b89\u88c5"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#4","text":"","title":"4. \u914d\u7f6e"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#5-job-json","text":"nysql\u6570\u636e\u540c\u6b65\u5230odps(mysq2odsp.json)\uff1a { \"job\": { \"content\": [ { \"reader\": { \"name\": \"mysqlreader\", \"parameter\": { \"username\": \"username\", \"password\": \"password\", \"column\": [\"uid\",\"date_time\"], \"connection\": [ { \"table\": [ \"datax_user\" ], \"jdbcUrl\": [ \"jdbc:mysql://127.0.0.1:3306/test\" ] } ] } }, \"writer\": { \"name\": \"odpswriter\", \"parameter\": { \"accessId\": \"accessId\", \"accessKey\": \"accessKey\", \"column\": [\"uid\",\"date_time\"], \"odpsServer\": \"http://service.odps.aliyun.com/api\", \"partition\": \"\", \"project\": \"odps_ project\", \"table\": \"odps_ project\", \"truncate\": true } } } ], \"setting\": { \"speed\": { \"channel\": 5 } } } } odps\u540c\u6b65\u5230mysql(odsp2mysq.json)\uff1a { \"job\": { \"content\": [ { \"reader\": { \"name\": \"odpsreader\", \"parameter\": { \"accessId\": \"accessId\", \"accessKey\": \"accessKey\", \"project\": \"project\", \"table\": \"stat_user_tag\", \"column\": [ \"user_id\", \"province\", \"city\", \"county\", \"birthday\", \"baby_id\", \"baby_birthday\", \"model\" ], \"packageAuthorizedProject\": \"project\", \"splitMode\": \"record\", \"odpsServer\": \"http://service.odps.aliyun.com/api\" } }, \"writer\": { \"name\": \"mysqlwriter\", \"parameter\": { \"writeMode\": \"insert\", \"username\": \"username\", \"password\": \"password\", \"column\": [ \"user_id\", \"province\", \"city\", \"county\", \"birthday\", \"baby_id\", \"baby_birthday\", \"model\" ], \"session\": [ \"set session sql_mode='ANSI'\" ], \"preSql\": [ \"truncate log_stat_user_tag\" ], \"connection\": [ { \"jdbcUrl\": \"jdbc:mysql://172.16.200.17:3306/test?useUnicode=true&characterEncoding=utf8\", \"table\": [ \"log_stat_user_tag\" ] } ] } } } ], \"setting\": { \"speed\": { \"channel\": 5 } } } }","title":"5 job json \u6587\u4ef6\u914d\u7f6e"},{"location":"DevOps/04%20Data/datax-synchronization-data-configuration/#5","text":"mysql\u540c\u6b65\u5230odps python datax.py /job/mysql2odps.json odps\u540c\u6b65\u5230mysql python datax.py /job/odps2mysql.json","title":"5. \u6267\u884c\u6d4b\u8bd5"},{"location":"DevOps/04%20Data/kafka-cluster-construction/","text":"1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f \u00b6 ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 10.0.0.52 zookeeper-3.4.10\u3001kafka2.10\u3001kafka-manager 10.0.0.53 zookeeper-3.4.10\u3001kafka2.10 10.0.0.54 zookeeper-3.4.10\u3001kafka2.10 2. \u73af\u5883\u4fe1\u606f \u00b6 JDK jdk\u7248\u672c\uff1ajdk1.8.0_11 http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz zookeeper zookeeper\u7248\u672c\uff1azookeeper-3.4.10 http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz 3. \u5b89\u88c5jdk(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile 4. \u5b89\u88c5zookeeper(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 4.1 \u5b89\u88c5zookeeper \u00b6 cd /usr/local/src/ tar -C /usr/local/ -xzf zookeeper-3.4.10.tar.gz cd /usr/local/zookeeper-3.4.10 ln -s zookeeper-3.4.10 zookeeper 4.2 \u751f\u6210\u914d\u7f6e\u6587\u4ef6 \u00b6 cd /usr/local/zookeeper cp conf/zoo_sample.cfg conf/zoo.cfg 4.3 \u4fee\u6539zookeeper\u914d\u7f6e\u6587\u4ef6 \u00b6 vim /usr/local/zookeeper/conf/zoo.cfg \u4fee\u6539\u4ee5\u4e0b\u5185\u5bb9 maxClientCnxns=60 tickTime=2000 initLimit=10 syncLimit=5 dataDir=/data/zookeeper/data dataLogDir=/data/logs/zookeeper clientPort=2181 server.1=10.0.0.52:2888:3888 server.2=10.0.0.53:2888:3888 server.3=10.0.0.54:2888:3888 2888\u8868\u793azookeeper\u7a0b\u5e8f\u76d1\u542c\u7aef\u53e3\uff0c3888\u8868\u793azookeeper\u9009\u4e3e\u901a\u4fe1\u7aef\u53e3\u3002 4.4 \u521b\u5efa\u6240\u9700\u6587\u4ef6\u5939 \u00b6 mkdir -p /data/zookeeper/data mkdir -p /data/logs/zookeeper 4.5 \u751f\u6210myid \u00b6 \u4e3b\u673a(10.0.0.52) echo \"1\" >/data/zookeeper/data/myid ##\u751f\u6210ID\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c myid\u5bf9\u5e94\u7684zoo.cfg\u7684server.ID\uff0c\u6bd4\u5982\u7b2c\u4e8c\u53f0zookeeper\u4e3b\u673a\u5bf9\u5e94\u7684myid\u5e94\u8be5\u662f2 \u4e3b\u673a(10.0.0.53) echo \"2\" >/data/zookeeper/data/myid \u4e3b\u673a(10.0.0.54) echo \"3\" >/data/zookeeper/data/myid 4.6 \u542f\u52a8zookeeper \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh start# 4.7 \u5173\u95edzookeeper \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh stot 4.8 \u67e5\u770bzk\u72b6\u6001 \u00b6 cd /usr/local/zookeeper/bin ./zkServer.sh status 4.9 \u67e5\u770b\u76f8\u5173\u4fe1\u606f \u00b6 /usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181 5. \u5b89\u88c5kafka(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09 \u00b6 5.1 \u5b89\u88c5kafka \u00b6 cd /usr/local/src tar zxvf kafka_2.10-0.10.2.1.tgz mv kafka_2.10-0.10.2.1 /usr/local/kafka 5.2 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 vim /usr/local/kafka/config/server.properties \u5177\u4f53\u53c2\u6570\u5982\u4e0b: # \u6bcf\u53f0\u670d\u52a1\u5668\u7684broker.id\u90fd\u4e0d\u80fd\u76f8\u540c broker.id=1 # \u7aef\u53e3 port=19092 # \u4e3b\u673a\u540d host.name=10.0.0.52 # \u662f\u5426\u53ef\u4ee5\u5220\u9664topic delete.topic.enable=true # \u5177\u4f53\u4e00\u4e9b\u53c2\u6570 log.retention.hours=168 message.max.byte=5242880 default.replication.factor=2 replica.fetch.max.bytes=5242880 # \u8bbe\u7f6ezookeeper\u96c6\u7fa4\u5730\u5740\u4e0e\u7aef\u53e3 zookeeper.connect=10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181 5.3 \u542f\u52a8kafka\uff08\u4e09\u53f0\uff09 \u00b6 cd /data/kafka/kafka_2.12-0.11.0.0/bin ./kafka-server-start.sh -daemon ../config/server.properties & 5.4 \u521b\u5efatopic \u00b6 ./kafka-topics.sh --create --zookeeper 10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181 --replication-factor 2 --partitions 1 --topic tttt \u53c2\u6570\u89e3\u91ca \u590d\u5236\u4e24\u4efd --replication-factor 2 \u521b\u5efa1\u4e2a\u5206\u533a --partitions 1 topic \u540d\u79f0 --topic tttt 5.5 \u67e5\u770b\u5df2\u7ecf\u5b58\u5728\u7684topic \u00b6 ./kafka-topics.sh --list --zookeeper 10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181","title":"05 Ldap"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#1","text":"ip\u5730\u5740 \u5b89\u88c5\u670d\u52a1 10.0.0.52 zookeeper-3.4.10\u3001kafka2.10\u3001kafka-manager 10.0.0.53 zookeeper-3.4.10\u3001kafka2.10 10.0.0.54 zookeeper-3.4.10\u3001kafka2.10","title":"1. \u670d\u52a1\u5668\u57fa\u672c\u4fe1\u606f"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#2","text":"JDK jdk\u7248\u672c\uff1ajdk1.8.0_11 http://download.oracle.com/otn-pub/java/jdk/8u111-b14/jdk-8u111-linux-x64.tar.gz zookeeper zookeeper\u7248\u672c\uff1azookeeper-3.4.10 http://mirrors.cnnic.cn/apache/zookeeper/zookeeper-3.4.10/zookeeper-3.4.10.tar.gz","title":"2. \u73af\u5883\u4fe1\u606f"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#3-jdk","text":"cd /usr/loca/src/ tar -C /usr/local/ -xzf /usr/local/src/jdk-8u111-linux-x64.tar.gz \u914d\u7f6ejava\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export JAVA_HOME=/usr/local/jdk1.8.0_111 export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile","title":"3. \u5b89\u88c5jdk(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#4-zookeeper","text":"","title":"4. \u5b89\u88c5zookeeper(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#41-zookeeper","text":"cd /usr/local/src/ tar -C /usr/local/ -xzf zookeeper-3.4.10.tar.gz cd /usr/local/zookeeper-3.4.10 ln -s zookeeper-3.4.10 zookeeper","title":"4.1 \u5b89\u88c5zookeeper"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#42","text":"cd /usr/local/zookeeper cp conf/zoo_sample.cfg conf/zoo.cfg","title":"4.2 \u751f\u6210\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#43-zookeeper","text":"vim /usr/local/zookeeper/conf/zoo.cfg \u4fee\u6539\u4ee5\u4e0b\u5185\u5bb9 maxClientCnxns=60 tickTime=2000 initLimit=10 syncLimit=5 dataDir=/data/zookeeper/data dataLogDir=/data/logs/zookeeper clientPort=2181 server.1=10.0.0.52:2888:3888 server.2=10.0.0.53:2888:3888 server.3=10.0.0.54:2888:3888 2888\u8868\u793azookeeper\u7a0b\u5e8f\u76d1\u542c\u7aef\u53e3\uff0c3888\u8868\u793azookeeper\u9009\u4e3e\u901a\u4fe1\u7aef\u53e3\u3002","title":"4.3 \u4fee\u6539zookeeper\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#44","text":"mkdir -p /data/zookeeper/data mkdir -p /data/logs/zookeeper","title":"4.4 \u521b\u5efa\u6240\u9700\u6587\u4ef6\u5939"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#45-myid","text":"\u4e3b\u673a(10.0.0.52) echo \"1\" >/data/zookeeper/data/myid ##\u751f\u6210ID\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\uff0c myid\u5bf9\u5e94\u7684zoo.cfg\u7684server.ID\uff0c\u6bd4\u5982\u7b2c\u4e8c\u53f0zookeeper\u4e3b\u673a\u5bf9\u5e94\u7684myid\u5e94\u8be5\u662f2 \u4e3b\u673a(10.0.0.53) echo \"2\" >/data/zookeeper/data/myid \u4e3b\u673a(10.0.0.54) echo \"3\" >/data/zookeeper/data/myid","title":"4.5 \u751f\u6210myid"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#46-zookeeper","text":"cd /usr/local/zookeeper/bin ./zkServer.sh start#","title":"4.6 \u542f\u52a8zookeeper"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#47-zookeeper","text":"cd /usr/local/zookeeper/bin ./zkServer.sh stot","title":"4.7 \u5173\u95edzookeeper"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#48-zk","text":"cd /usr/local/zookeeper/bin ./zkServer.sh status","title":"4.8 \u67e5\u770bzk\u72b6\u6001"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#49","text":"/usr/local/zookeeper/bin/zkCli.sh -server 127.0.0.1:2181","title":"4.9 \u67e5\u770b\u76f8\u5173\u4fe1\u606f"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#5-kafka","text":"","title":"5. \u5b89\u88c5kafka(\u4e09\u53f0\u4e3b\u673a\u4e0a\u6267\u884c\uff09"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#51-kafka","text":"cd /usr/local/src tar zxvf kafka_2.10-0.10.2.1.tgz mv kafka_2.10-0.10.2.1 /usr/local/kafka","title":"5.1 \u5b89\u88c5kafka"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#52","text":"vim /usr/local/kafka/config/server.properties \u5177\u4f53\u53c2\u6570\u5982\u4e0b: # \u6bcf\u53f0\u670d\u52a1\u5668\u7684broker.id\u90fd\u4e0d\u80fd\u76f8\u540c broker.id=1 # \u7aef\u53e3 port=19092 # \u4e3b\u673a\u540d host.name=10.0.0.52 # \u662f\u5426\u53ef\u4ee5\u5220\u9664topic delete.topic.enable=true # \u5177\u4f53\u4e00\u4e9b\u53c2\u6570 log.retention.hours=168 message.max.byte=5242880 default.replication.factor=2 replica.fetch.max.bytes=5242880 # \u8bbe\u7f6ezookeeper\u96c6\u7fa4\u5730\u5740\u4e0e\u7aef\u53e3 zookeeper.connect=10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181","title":"5.2 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#53-kafka","text":"cd /data/kafka/kafka_2.12-0.11.0.0/bin ./kafka-server-start.sh -daemon ../config/server.properties &","title":"5.3 \u542f\u52a8kafka\uff08\u4e09\u53f0\uff09"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#54-topic","text":"./kafka-topics.sh --create --zookeeper 10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181 --replication-factor 2 --partitions 1 --topic tttt \u53c2\u6570\u89e3\u91ca \u590d\u5236\u4e24\u4efd --replication-factor 2 \u521b\u5efa1\u4e2a\u5206\u533a --partitions 1 topic \u540d\u79f0 --topic tttt","title":"5.4 \u521b\u5efatopic"},{"location":"DevOps/04%20Data/kafka-cluster-construction/#55-topic","text":"./kafka-topics.sh --list --zookeeper 10.0.0.52:2181,10.0.0.53:2181,10.0.0.54:2181","title":"5.5 \u67e5\u770b\u5df2\u7ecf\u5b58\u5728\u7684topic"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/","text":"\u6240\u4f9d\u8d56\u5176\u4ed6\u670d\u52a1 \u00b6 memcached redis yum\u5b89\u88c5\u5373\u53ef go\u73af\u5883\u914d\u7f6e \u00b6 \u4e0b\u8f7dgo cd /usr/local/src wget https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz \u89e3\u5305 cd /usr/local/src tar -C /usr/local -xzf go1.5.2.linux-amd64.tar.gz \u65b0\u5efagopath mkdir /usr/local/gopkg \u914d\u7f6ego\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export GOROOT=/usr/local/go export GOPATH=/usr/local/gopkg export PATH=$GOROOT/bin:$PATH \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#go version go version go1.5.2 linux/amd64 \u7f16\u8bd1open-falcon \u00b6 cd $GOPATH/src/github.com/open-falcon/ git clone https://github.com/open-falcon/falcon-plus.git make all make pack \u8fd9\u65f6\u5019\uff0c\u4f60\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u9762\uff0c\u5f97\u5230open-falcon-v0.2.0.tar.gz\u7684\u538b\u7f29\u5305\uff0c\u5c31\u8868\u793a\u5df2\u7ecf\u7f16\u8bd1\u548c\u6253\u5305\u6210\u529f\u4e86\u3002 \u5b89\u88c5open-falcon \u00b6 cp $GOPATH/src/github.com/open-falcon/falcon-plus/open-falcon-v0.2.0.tar.gz /usr/local/src cd /usr/local/src/ tar zxvf open-falcon-v0.2.0.tar.gz -C /usr/local/open-falcon \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 open-falcon\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e0b\u7684config\u4e0b\uff0c\u4fee\u6539\u76f8\u5e94\u5730\u5740\u4e0e\u6570\u636e\u5e93\u4fe1\u606f\u5373\u53ef \u5bfc\u5165\u6570\u636e\u5e93 \u00b6 cd /usr/local/src/ && git clone https://github.com/open-falcon/falcon-plus.git cd /usr/local/src/falcon-plus/scripts/mysql/db_schema/ mysql -h 127.0.0.1 -uroot -p < 1_uic-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 2_portal-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 3_dashboard-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 4_graph-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 5_alarms-db-schema.sql \u542f\u52a8open-falcon\u540e\u7aef\u670d\u52a1 \u00b6 \u542f\u52a8 cd /usr/local/open-falcon ./open-falcon start \u68c0\u67e5\u670d\u52a1\u72b6\u6001 ./open-falcon check * \u66f4\u591a\u7684\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6cd5 # ./open-falcon [start|stop|restart|check|monitor|reload] module ./open-falcon start agent ./open-falcon check falcon-graph UP 53007 falcon-hbs UP 53014 falcon-judge UP 53020 falcon-transfer UP 53026 falcon-nodata UP 53032 falcon-aggregator UP 53038 falcon-agent UP 53044 falcon-gateway UP 53050 falcon-api UP 53056 falcon-alarm UP 53063 For debugging , You can check $WorkDir/$moduleName/log/logs/xxx.log \u5b89\u88c5dashboard \u00b6 \u514b\u9686\u4ee3\u7801 cd /usr/local/open-falcon git clone https://github.com/open-falcon/dashboard.git \u5b89\u88c5\u4f9d\u8d56 yum install -y python-virtualenv yum install -y python-devel yum install -y openldap-devel yum install -y mysql-devel yum groupinstall \"Development tools\" cd /usr/local/open-falcon/dashboard/ virtualenv ./env ./env/bin/pip install -r pip_requirements.txt -i http://pypi.douban.com/simple \u4fee\u6539\u914d\u7f6e dashboard\u7684\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a 'rrd/config.py'\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539 ## API_ADDR \u8868\u793a\u540e\u7aefapi\u7ec4\u4ef6\u7684\u5730\u5740 API_ADDR = \"http://127.0.0.1:8080/api/v1\" ## \u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u4fee\u6539PORTAL_DB_*, \u9ed8\u8ba4\u7528\u6237\u540d\u4e3aroot\uff0c\u9ed8\u8ba4\u5bc6\u7801\u4e3a\"\" ## \u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u4fee\u6539ALARM_DB_*, \u9ed8\u8ba4\u7528\u6237\u540d\u4e3aroot\uff0c\u9ed8\u8ba4\u5bc6\u7801\u4e3a\"\" * \u542f\u52a8dashboard cd /usr/local/open-falcon/dashboard bash control start","title":"open-falcon v0.2 \u90e8\u7f72\u3001\u5c0f\u7c73\u5f00\u6e90\u76d1\u63a7\u90e8\u7f72"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#_1","text":"memcached redis yum\u5b89\u88c5\u5373\u53ef","title":"\u6240\u4f9d\u8d56\u5176\u4ed6\u670d\u52a1"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#go","text":"\u4e0b\u8f7dgo cd /usr/local/src wget https://golang.org/doc/install?download=go1.5.2.linux-amd64.tar.gz \u89e3\u5305 cd /usr/local/src tar -C /usr/local -xzf go1.5.2.linux-amd64.tar.gz \u65b0\u5efagopath mkdir /usr/local/gopkg \u914d\u7f6ego\u73af\u5883\u53d8\u91cf vim /etc/profile \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f export GOROOT=/usr/local/go export GOPATH=/usr/local/gopkg export PATH=$GOROOT/bin:$PATH \u5237\u65b0\u914d\u7f6e\u6587\u4ef6\uff1a source /etc/profile \u67e5\u770bgo\u7248\u672c\uff1a [root@codis01 ~]#go version go version go1.5.2 linux/amd64","title":"go\u73af\u5883\u914d\u7f6e"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#open-falcon","text":"cd $GOPATH/src/github.com/open-falcon/ git clone https://github.com/open-falcon/falcon-plus.git make all make pack \u8fd9\u65f6\u5019\uff0c\u4f60\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u9762\uff0c\u5f97\u5230open-falcon-v0.2.0.tar.gz\u7684\u538b\u7f29\u5305\uff0c\u5c31\u8868\u793a\u5df2\u7ecf\u7f16\u8bd1\u548c\u6253\u5305\u6210\u529f\u4e86\u3002","title":"\u7f16\u8bd1open-falcon"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#open-falcon_1","text":"cp $GOPATH/src/github.com/open-falcon/falcon-plus/open-falcon-v0.2.0.tar.gz /usr/local/src cd /usr/local/src/ tar zxvf open-falcon-v0.2.0.tar.gz -C /usr/local/open-falcon","title":"\u5b89\u88c5open-falcon"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#_2","text":"open-falcon\u6bcf\u4e2a\u7ec4\u4ef6\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e0b\u7684config\u4e0b\uff0c\u4fee\u6539\u76f8\u5e94\u5730\u5740\u4e0e\u6570\u636e\u5e93\u4fe1\u606f\u5373\u53ef","title":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#_3","text":"cd /usr/local/src/ && git clone https://github.com/open-falcon/falcon-plus.git cd /usr/local/src/falcon-plus/scripts/mysql/db_schema/ mysql -h 127.0.0.1 -uroot -p < 1_uic-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 2_portal-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 3_dashboard-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 4_graph-db-schema.sql mysql -h 127.0.0.1 -uroot -p < 5_alarms-db-schema.sql","title":"\u5bfc\u5165\u6570\u636e\u5e93"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#open-falcon_2","text":"\u542f\u52a8 cd /usr/local/open-falcon ./open-falcon start \u68c0\u67e5\u670d\u52a1\u72b6\u6001 ./open-falcon check * \u66f4\u591a\u7684\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6cd5 # ./open-falcon [start|stop|restart|check|monitor|reload] module ./open-falcon start agent ./open-falcon check falcon-graph UP 53007 falcon-hbs UP 53014 falcon-judge UP 53020 falcon-transfer UP 53026 falcon-nodata UP 53032 falcon-aggregator UP 53038 falcon-agent UP 53044 falcon-gateway UP 53050 falcon-api UP 53056 falcon-alarm UP 53063 For debugging , You can check $WorkDir/$moduleName/log/logs/xxx.log","title":"\u542f\u52a8open-falcon\u540e\u7aef\u670d\u52a1"},{"location":"DevOps/06%20Monitor/open-falcon-v0.2-deployment-millet-open-source-monitoring-deployment/#dashboard","text":"\u514b\u9686\u4ee3\u7801 cd /usr/local/open-falcon git clone https://github.com/open-falcon/dashboard.git \u5b89\u88c5\u4f9d\u8d56 yum install -y python-virtualenv yum install -y python-devel yum install -y openldap-devel yum install -y mysql-devel yum groupinstall \"Development tools\" cd /usr/local/open-falcon/dashboard/ virtualenv ./env ./env/bin/pip install -r pip_requirements.txt -i http://pypi.douban.com/simple \u4fee\u6539\u914d\u7f6e dashboard\u7684\u914d\u7f6e\u6587\u4ef6\u4e3a\uff1a 'rrd/config.py'\uff0c\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539 ## API_ADDR \u8868\u793a\u540e\u7aefapi\u7ec4\u4ef6\u7684\u5730\u5740 API_ADDR = \"http://127.0.0.1:8080/api/v1\" ## \u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u4fee\u6539PORTAL_DB_*, \u9ed8\u8ba4\u7528\u6237\u540d\u4e3aroot\uff0c\u9ed8\u8ba4\u5bc6\u7801\u4e3a\"\" ## \u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u4fee\u6539ALARM_DB_*, \u9ed8\u8ba4\u7528\u6237\u540d\u4e3aroot\uff0c\u9ed8\u8ba4\u5bc6\u7801\u4e3a\"\" * \u542f\u52a8dashboard cd /usr/local/open-falcon/dashboard bash control start","title":"\u5b89\u88c5dashboard"},{"location":"DevOps/06%20Monitor/zabbix-email-alert-script/","text":"#!/usr/bin/python #coding:utf-8 import smtplib from email.mime.text import MIMEText import sys mail_host = 'smtp.exmail.qq.com' mail_user = '\u90ae\u7bb1\u5168\u79f0' mail_pass = '\u5bc6\u7801' mail_postfix = '\u57df\u540d' def send_mail(to_list,subject,content): me = mail_user+\"<\"+mail_user+\"@\"+mail_postfix+\">\" msg = MIMEText(content) msg['Subject'] = subject msg['From'] = me msg['to'] = to_list try: s = smtplib.SMTP() s.connect(mail_host) s.login(mail_user,mail_pass) s.sendmail(me,to_list,msg.as_string()) s.close() return True except Exception,e: print str(e) return False #if __name__ == \"__main__\": send_mail(sys.argv[1], sys.argv[2], sys.argv[3])","title":"zabbix\u90ae\u4ef6\u62a5\u8b66\u811a\u672c"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/","text":"1\u3001\u6dfb\u52a0mysql\u7528\u6237 \u00b6 \u4ee5root\u767b\u5f55\uff0c\u65b0\u5efamysql\u7528\u6237\u7ec4 groupadd mysql useradd -d /data/mariadb -g mysql -m mysql 2\u3001 mariadb\u7684\u5b89\u88c5\u7f6e \u00b6 2.1 \u5b89\u88c5\u6240\u9700\u7ec4\u4ef6 \u00b6 yum install -y cmake yum install -y gcc yum install -y gcc-c++ yum install -y ncurses-devel yum install -y libaio yum install -y bison 2.2\u521b\u5efamariadb\u7f16\u8bd1\u6839\u76ee\u5f55 \u00b6 mkdir -p /usr/local/mariadb 2.3\u89e3\u538b\u7f29\u6e90\u7801\u5305 tar zxvf mariadb-5.5.51.tar.gz cd mariadb-5.5.51 2.4\u7f16\u8bd1\u5b89\u88c5 \u00b6 cd /usr/local/mariadb/mariadb-5.5.51/ cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mariadb -DMYSQL_DATADIR=/data/mariadb -DSYSCONFDIR=/usr/local/mariadb -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DMYSQL_UNIX_ADDR=/usr/local/mariadb/mysql.sock make make install 2.5\u4fee\u6539\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff0c\u4fee\u6539vi ~/.bash_profile\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1b \u00b6 PATH=$PATH:$HOME/bin:/usr/local/mariadb/bin export PATH \u6dfb\u52a0\u5b8c\u6210\u540e\uff0csource ~/.bash_profile 3.mariadb\u53cc\u5b9e\u4f8b\u7684\u5efa\u7acb \u00b6 3.1\u5efa\u7acb\u4e24\u4e2a\u5b9e\u4f8b\u6240\u9700\u76ee\u5f55\u5e76\u6388\u6743 \u00b6 makdir -p /usr/local/mariadb1_3307 makdir -p /usr/local/mariadb2_3308 makdir -p /data/mariadb1_3307 makdir -p /data/mariadb2_3308 3.2 \u62f7\u8d1d\u914d\u7f6e\u6587\u4ef6\u5230/etc\u76ee\u5f55\u4e0b \u00b6 cp /usr/localmariadb/support-files/my-medium.cnf/my.cnf /etc/my.cnf 3.3 \u914d\u7f6emariadb1\u5b9e\u4f8b1 \u00b6 3.3.1\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e3a [mysqld_multi] mysqld=/usr/local/mariadb/bin/mysqld_safe mysqladmin=/usr/local/mariadb/bin/mysqladmin log=/data/mariadb/mysqld_multi.log [mysqld1] port = 3307 socket = /usr/local/mariadb1_3307/mysql.sock basedir = /usr/local/mariadb datadir = /data/mariadb1_3307 pid-file = /data/mariadb1_3307/mysql.pid user = mysql bind-address = 0.0.0.0 server-id = 1230 slave-skip-errors=all binlog=/data/mariadb1_3307/binlog relay-log=/data/mariadb1_3307/relay_log/mysql-relay-bin log_slave_updates = 1 read_only = 0 binlog_format = row expire_logs_days = 10 default_storage_engine = InnoDB innodb_buffer_pool_size = 128M innodb_flush_log_at_trx_commit = 0 3.3.2 \u521d\u59cb\u5316\u6570\u636e\u5e93 \u8fdb\u5165bin\u76ee\u5f55\uff0c cd /usr/local/mariadb/scripts ./mysql_install_db --user=mysql --basedir=/usr/local/mariadb --datadir=/data/mariadb1_3307 3.4\u914d\u7f6emariadb2\u5b9e\u4f8b2 \u00b6 \u65b9\u6cd5\u540c\u5b9e\u4f8b1 4\u3001\u542f\u52a8\u591a\u5b9e\u4f8b\u6570\u636e\u5e93 4.1\u542f\u52a8\u6570\u636e\u5e93\u5b9e\u4f8b \u00b6 mysqld_multi start 1-2 4.2\u5173\u95ed\u9632\u706b\u5899 \u00b6 systemctl stop firewalld.service systemctl disable firewalld.service \u67e5\u770b\uff1anetstat -tnlp 4.3 \u4fee\u6539\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff0c\u4fee\u6539vi ~/.bash_profile\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1b \u00b6 PATH=$PATH:/usr/local/mariadb/bin export PATH \u6dfb\u52a0\u5b8c\u6210\u540e\uff0csource ~/.bash_profile 4.4\u8bbf\u95ee\u6570\u636e\u5e93 \u00b6 mysql -uroot -p -S /usr/local/mariadb1_3307/mysql.sock --\u5b9e\u4f8b1 mysql -uroot -p -S /usr/local/mariadb2_3308/mysql.sock --\u5b9e\u4f8b2 4.5 \u67e5\u770b\u591a\u5b9e\u4f8b \u00b6 mysqld_multi report 4.6 \u5173\u95ed\u6570\u636e\u5e93 \u00b6 \u521a\u5f00\u59cb\u65e0\u6cd5\u4f7f\u7528mysql_multi\u5173\u95ed\u6570\u636e\u5e93 \u539f\u56e0\uff1a\u9700\u5bf9\u8d26\u53f7\u6388\u6743 mysqld_multi stop 1,2 4.6 \u5b8c\u6210 \u00b6","title":"Mysql multi\u5b9e\u73b0mysql\u53cc\u5b9e\u4f8b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#1mysql","text":"\u4ee5root\u767b\u5f55\uff0c\u65b0\u5efamysql\u7528\u6237\u7ec4 groupadd mysql useradd -d /data/mariadb -g mysql -m mysql","title":"1\u3001\u6dfb\u52a0mysql\u7528\u6237"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#2-mariadb","text":"","title":"2\u3001 mariadb\u7684\u5b89\u88c5\u7f6e"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#21","text":"yum install -y cmake yum install -y gcc yum install -y gcc-c++ yum install -y ncurses-devel yum install -y libaio yum install -y bison","title":"2.1 \u5b89\u88c5\u6240\u9700\u7ec4\u4ef6"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#22mariadb","text":"mkdir -p /usr/local/mariadb 2.3\u89e3\u538b\u7f29\u6e90\u7801\u5305 tar zxvf mariadb-5.5.51.tar.gz cd mariadb-5.5.51","title":"2.2\u521b\u5efamariadb\u7f16\u8bd1\u6839\u76ee\u5f55"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#24","text":"cd /usr/local/mariadb/mariadb-5.5.51/ cmake -DCMAKE_INSTALL_PREFIX=/usr/local/mariadb -DMYSQL_DATADIR=/data/mariadb -DSYSCONFDIR=/usr/local/mariadb -DWITH_INNOBASE_STORAGE_ENGINE=1 -DWITH_ARCHIVE_STORAGE_ENGINE=1 -DWITH_BLACKHOLE_STORAGE_ENGINE=1 -DWITH_PERFSCHEMA_STORAGE_ENGINE=1 -DMYSQL_UNIX_ADDR=/usr/local/mariadb/mysql.sock make make install","title":"2.4\u7f16\u8bd1\u5b89\u88c5"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#25vi-bash_profile","text":"PATH=$PATH:$HOME/bin:/usr/local/mariadb/bin export PATH \u6dfb\u52a0\u5b8c\u6210\u540e\uff0csource ~/.bash_profile","title":"2.5\u4fee\u6539\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff0c\u4fee\u6539vi ~/.bash_profile\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#3mariadb","text":"","title":"3.mariadb\u53cc\u5b9e\u4f8b\u7684\u5efa\u7acb"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#31","text":"makdir -p /usr/local/mariadb1_3307 makdir -p /usr/local/mariadb2_3308 makdir -p /data/mariadb1_3307 makdir -p /data/mariadb2_3308","title":"3.1\u5efa\u7acb\u4e24\u4e2a\u5b9e\u4f8b\u6240\u9700\u76ee\u5f55\u5e76\u6388\u6743"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#32-etc","text":"cp /usr/localmariadb/support-files/my-medium.cnf/my.cnf /etc/my.cnf","title":"3.2 \u62f7\u8d1d\u914d\u7f6e\u6587\u4ef6\u5230/etc\u76ee\u5f55\u4e0b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#33-mariadb11","text":"3.3.1\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e3a [mysqld_multi] mysqld=/usr/local/mariadb/bin/mysqld_safe mysqladmin=/usr/local/mariadb/bin/mysqladmin log=/data/mariadb/mysqld_multi.log [mysqld1] port = 3307 socket = /usr/local/mariadb1_3307/mysql.sock basedir = /usr/local/mariadb datadir = /data/mariadb1_3307 pid-file = /data/mariadb1_3307/mysql.pid user = mysql bind-address = 0.0.0.0 server-id = 1230 slave-skip-errors=all binlog=/data/mariadb1_3307/binlog relay-log=/data/mariadb1_3307/relay_log/mysql-relay-bin log_slave_updates = 1 read_only = 0 binlog_format = row expire_logs_days = 10 default_storage_engine = InnoDB innodb_buffer_pool_size = 128M innodb_flush_log_at_trx_commit = 0 3.3.2 \u521d\u59cb\u5316\u6570\u636e\u5e93 \u8fdb\u5165bin\u76ee\u5f55\uff0c cd /usr/local/mariadb/scripts ./mysql_install_db --user=mysql --basedir=/usr/local/mariadb --datadir=/data/mariadb1_3307","title":"3.3 \u914d\u7f6emariadb1\u5b9e\u4f8b1"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#34mariadb22","text":"\u65b9\u6cd5\u540c\u5b9e\u4f8b1 4\u3001\u542f\u52a8\u591a\u5b9e\u4f8b\u6570\u636e\u5e93","title":"3.4\u914d\u7f6emariadb2\u5b9e\u4f8b2"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#41","text":"mysqld_multi start 1-2","title":"4.1\u542f\u52a8\u6570\u636e\u5e93\u5b9e\u4f8b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#42","text":"systemctl stop firewalld.service systemctl disable firewalld.service \u67e5\u770b\uff1anetstat -tnlp","title":"4.2\u5173\u95ed\u9632\u706b\u5899"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#43-vi-bash_profile","text":"PATH=$PATH:/usr/local/mariadb/bin export PATH \u6dfb\u52a0\u5b8c\u6210\u540e\uff0csource ~/.bash_profile","title":"4.3 \u4fee\u6539\u73af\u5883\u53d8\u91cf\u6587\u4ef6\uff0c\u4fee\u6539vi ~/.bash_profile\uff0c\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9\uff1b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#44","text":"mysql -uroot -p -S /usr/local/mariadb1_3307/mysql.sock --\u5b9e\u4f8b1 mysql -uroot -p -S /usr/local/mariadb2_3308/mysql.sock --\u5b9e\u4f8b2","title":"4.4\u8bbf\u95ee\u6570\u636e\u5e93"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#45","text":"mysqld_multi report","title":"4.5 \u67e5\u770b\u591a\u5b9e\u4f8b"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#46","text":"\u521a\u5f00\u59cb\u65e0\u6cd5\u4f7f\u7528mysql_multi\u5173\u95ed\u6570\u636e\u5e93 \u539f\u56e0\uff1a\u9700\u5bf9\u8d26\u53f7\u6388\u6743 mysqld_multi stop 1,2","title":"4.6 \u5173\u95ed\u6570\u636e\u5e93"},{"location":"DevOps/07%20MySQL/mysql-multi-implementation-of-double-instances-of-mysql/#46_1","text":"","title":"4.6 \u5b8c\u6210"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/","text":"1.\u4fee\u6539\u4e3b\u673a\u540d \u00b6 vim /etc/hostname vim /etc/hosts hostname <\u4e3b\u673a\u540d> 2.\u670d\u52a1\u5668\u78c1\u76d8\u6302\u8f7d \u00b6 vim /data/scripts/auto_fdisk.sh 3.\u5c06\u78c1\u76d8\u6302\u8f7d\u4fee\u6539\u4e3auuid\u65b9\u5f0f \u00b6 blkid /dev/xvdb1 vim /etc/fstab UUID=41852b97-3630-42b1-b2ae-9d8f77922245 /data ext4 defaults 1 2 4.\u521d\u59cb\u5316\u670d\u52a1\u5668 \u00b6 #!/bin/sh yum clean all systemctl stop firewalld.service systemctl disable firewalld.service sed -i 's/enforcing/disabled/g' /etc/selinux/config yum -y install vim openssh* ntp wget screen bash-completion git service ntpd stop ntpdate time.nist.gov sed -i 's/0.centos.pool.ntp.org/time.nist.gov/g' /etc/ntp.conf chkconfig ntpd on service ntpd restart 5.\u5b89\u88c5\u7a0b\u5e8f \u00b6 \u5b89\u88c5memcached\u4e0esupervisord 6.\u6267\u884ccache\u521d\u59cb\u5316\u811a\u672c \u00b6 #!/bin/sh -e ########## 1. \u57fa\u7840\u5de5\u4f5c start ########## tmux_conf=/root/.tmux.conf chk_service_super=`systemctl status supervisord.service | grep inactive` if [[ -n $chk_service_super ]] then echo \"supervisord is inactive...\" else sudo service supervisord stop fi chk_service_hhvm=`systemctl status hhvm | grep inactive` if [[ -n $chk_service_hhvm ]] then echo \"hhvm is inactive...\" else sudo service hhvm stop fi mkdir -p /data/logs mkdir -p /data/backup mkdir -p /data/components/ mkdir -p /data/scripts mkdir -p /data/softs mkdir -p /data/logs/access mkdir -p /data/logs/general mkdir -p /data/logs/logic mkdir -p /data/logs/error/supervisor chmod -R 777 /data/logs/* chmod -R 777 /data/components/ # \u5e38\u7528\u7c7b\u5e93 sudo yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel # \u5e38\u7528\u8f6f\u4ef6 sudo yum -y install net-tools unzip vim lrzsz subversion tmux # tmux\u914d\u7f6e cat > $tmux_conf <<EOF set-option -g default-terminal \"screen-256color\" #\u8bbe\u7f6e\u524d\u7f00\u4e3aCtrl + x set -g prefix C-x #\u89e3\u9664Ctrl+b \u4e0e\u524d\u7f00\u7684\u5bf9\u5e94\u5173\u7cfb unbind C-b #up bind-key k select-pane -U #down bind-key j select-pane -D #left bind-key h select-pane -L #right bind-key l select-pane -R #select last window bind-key C-l select-window -l #copy-mode \u5c06\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3avi \u6a21\u5f0f setw -g mode-keys vi #bind C-k run \"./bin/tmux-zoom.sh\" EOF ########## \u57fa\u7840\u5de5\u4f5c end ########## ########## \u90e8\u7f72memcached start ########## ip_addr=`ifconfig | grep 'inet' | grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}'` sed -i \"s/OPTIONS=\\\"-l 127.0.0.1\\\"/OPTIONS=\\\"-l ${ip_addr}\\\"/g\" /etc/init.d/memcached sed -i 's/CACHESIZE=977/CACHESIZE=2048/g' /etc/init.d/memcached sed -i 's/MAXCONN=1024$/MAXCONN=10240/g' /etc/init.d/memcached systemctl daemon-reload service memcached restart ########## \u90e8\u7f72memcached end ########## 7.\u914d\u7f6esupervisord \u00b6 7.1 \u542f\u52a8supervisord\u670d\u52a1 \u00b6 service supervisord start 7.2 \u4fee\u6539supervisord\u914d\u7f6e\u6587\u4ef6 \u00b6 vim /etc/supervisord.conf \u4fee\u6539\u5982\u4e0b\u4fe1\u606f\uff1a [include] files = supervisord.d/*.ini #[program:hhvm] #command=/usr/bin/hhvm --mode server --user www --config /etc/hhvm/server.ini --config /etc/hhvm/php.ini --config /etc/hhvm/config.hdf #numprocs=1 ; number of processes copies to start (def 1) #directory=/tmp ; directory to cwd to before exec (def no cwd) #autostart=true ; start at supervisord start (default: true) #autorestart=unexpected ; whether/when to restart (default: unexpected) #stopwaitsecs=10 ; max num secs to wait b4 SIGKILL (default 10) 7.4 \u6dfb\u52a0memcached\u4fe1\u606f \u00b6 vim /etc/supervisord/mc_11211.ini vim /etc/supervisord/mc_11212.ini vim /etc/supervisord/mc_11213.ini \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f [program:mc_11211] command=/usr/local/memcached/bin/memcached -p 11211 -u memcached -m 2048 -c 10240 -l 10.0.0.51 user=root ;\u6267\u884c\u547d\u4ee4\u7684\u7528\u6237 numprocs=1 ; \u542f\u52a8\u51e0\u4e2a\u8fdb\u7a0b \u9ed8\u8ba4 1 #process_name=%(process_num)02d ;directory= ; \u6267\u884c\u524d\u8981\u4e0d\u8981\u5148cd\u5230\u76ee\u5f55\u53bb autostart=true ; \u968f\u7740supervisord\u7684\u542f\u52a8\u800c\u542f\u52a8 autorestart=true ; \u662f\u5426\u81ea\u52a8\u91cd\u542f \u9ed8\u8ba4true startretries=5 ; \u542f\u52a8\u5931\u8d25\u65f6\u7684\u6700\u591a\u91cd\u8bd5\u6b21\u6570 \u9ed8\u8ba45 ;;exitcodes=0 ; \u6b63\u5e38\u9000\u51fa\u4ee3\u7801 ;;stopsignal=KILL ; \u7528\u6765\u6740\u6b7b\u8fdb\u7a0b\u7684\u4fe1\u53f7 ;;stopwaitsecs=10 ; \u53d1\u9001SIGKILL\u524d\u7684\u7b49\u5f85\u65f6\u95f4 redirect_stderr=true ; \u91cd\u5b9a\u5411stderr\u5230stdout stdout_logfile=/data/logs/error/supervisor/mc_11211.log stderr_logfile=/data/logs/error/supervisor/mc_11211.log 8.\u6700\u7ec8\u914d\u7f6e \u00b6 \u5173\u95ed\u9632\u706b\u5899\u670d\u52a1 systemctl stop firewalld.service systemctl disable firewalld.service \u5173\u95edmemcached\u670d\u52a1 service memcached stop \u5173\u95edmemcached\u5f00\u673a\u81ea\u542f chkconfig memcached off \u91cd\u542fsupervisord\uff0c\u91c7\u7528supervisord\u542f\u52a8memcached service supervisord restart","title":"\u90e8\u7f72Memcache\uff0c\u91c7\u7528Supervisord\u7ba1\u7406"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#1","text":"vim /etc/hostname vim /etc/hosts hostname <\u4e3b\u673a\u540d>","title":"1.\u4fee\u6539\u4e3b\u673a\u540d"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#2","text":"vim /data/scripts/auto_fdisk.sh","title":"2.\u670d\u52a1\u5668\u78c1\u76d8\u6302\u8f7d"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#3uuid","text":"blkid /dev/xvdb1 vim /etc/fstab UUID=41852b97-3630-42b1-b2ae-9d8f77922245 /data ext4 defaults 1 2","title":"3.\u5c06\u78c1\u76d8\u6302\u8f7d\u4fee\u6539\u4e3auuid\u65b9\u5f0f"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#4","text":"#!/bin/sh yum clean all systemctl stop firewalld.service systemctl disable firewalld.service sed -i 's/enforcing/disabled/g' /etc/selinux/config yum -y install vim openssh* ntp wget screen bash-completion git service ntpd stop ntpdate time.nist.gov sed -i 's/0.centos.pool.ntp.org/time.nist.gov/g' /etc/ntp.conf chkconfig ntpd on service ntpd restart","title":"4.\u521d\u59cb\u5316\u670d\u52a1\u5668"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#5","text":"\u5b89\u88c5memcached\u4e0esupervisord","title":"5.\u5b89\u88c5\u7a0b\u5e8f"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#6cache","text":"#!/bin/sh -e ########## 1. \u57fa\u7840\u5de5\u4f5c start ########## tmux_conf=/root/.tmux.conf chk_service_super=`systemctl status supervisord.service | grep inactive` if [[ -n $chk_service_super ]] then echo \"supervisord is inactive...\" else sudo service supervisord stop fi chk_service_hhvm=`systemctl status hhvm | grep inactive` if [[ -n $chk_service_hhvm ]] then echo \"hhvm is inactive...\" else sudo service hhvm stop fi mkdir -p /data/logs mkdir -p /data/backup mkdir -p /data/components/ mkdir -p /data/scripts mkdir -p /data/softs mkdir -p /data/logs/access mkdir -p /data/logs/general mkdir -p /data/logs/logic mkdir -p /data/logs/error/supervisor chmod -R 777 /data/logs/* chmod -R 777 /data/components/ # \u5e38\u7528\u7c7b\u5e93 sudo yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel # \u5e38\u7528\u8f6f\u4ef6 sudo yum -y install net-tools unzip vim lrzsz subversion tmux # tmux\u914d\u7f6e cat > $tmux_conf <<EOF set-option -g default-terminal \"screen-256color\" #\u8bbe\u7f6e\u524d\u7f00\u4e3aCtrl + x set -g prefix C-x #\u89e3\u9664Ctrl+b \u4e0e\u524d\u7f00\u7684\u5bf9\u5e94\u5173\u7cfb unbind C-b #up bind-key k select-pane -U #down bind-key j select-pane -D #left bind-key h select-pane -L #right bind-key l select-pane -R #select last window bind-key C-l select-window -l #copy-mode \u5c06\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3avi \u6a21\u5f0f setw -g mode-keys vi #bind C-k run \"./bin/tmux-zoom.sh\" EOF ########## \u57fa\u7840\u5de5\u4f5c end ########## ########## \u90e8\u7f72memcached start ########## ip_addr=`ifconfig | grep 'inet' | grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}'` sed -i \"s/OPTIONS=\\\"-l 127.0.0.1\\\"/OPTIONS=\\\"-l ${ip_addr}\\\"/g\" /etc/init.d/memcached sed -i 's/CACHESIZE=977/CACHESIZE=2048/g' /etc/init.d/memcached sed -i 's/MAXCONN=1024$/MAXCONN=10240/g' /etc/init.d/memcached systemctl daemon-reload service memcached restart ########## \u90e8\u7f72memcached end ##########","title":"6.\u6267\u884ccache\u521d\u59cb\u5316\u811a\u672c"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#7supervisord","text":"","title":"7.\u914d\u7f6esupervisord"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#71-supervisord","text":"service supervisord start","title":"7.1 \u542f\u52a8supervisord\u670d\u52a1"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#72-supervisord","text":"vim /etc/supervisord.conf \u4fee\u6539\u5982\u4e0b\u4fe1\u606f\uff1a [include] files = supervisord.d/*.ini #[program:hhvm] #command=/usr/bin/hhvm --mode server --user www --config /etc/hhvm/server.ini --config /etc/hhvm/php.ini --config /etc/hhvm/config.hdf #numprocs=1 ; number of processes copies to start (def 1) #directory=/tmp ; directory to cwd to before exec (def no cwd) #autostart=true ; start at supervisord start (default: true) #autorestart=unexpected ; whether/when to restart (default: unexpected) #stopwaitsecs=10 ; max num secs to wait b4 SIGKILL (default 10)","title":"7.2 \u4fee\u6539supervisord\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#74-memcached","text":"vim /etc/supervisord/mc_11211.ini vim /etc/supervisord/mc_11212.ini vim /etc/supervisord/mc_11213.ini \u6dfb\u52a0\u5982\u4e0b\u4fe1\u606f [program:mc_11211] command=/usr/local/memcached/bin/memcached -p 11211 -u memcached -m 2048 -c 10240 -l 10.0.0.51 user=root ;\u6267\u884c\u547d\u4ee4\u7684\u7528\u6237 numprocs=1 ; \u542f\u52a8\u51e0\u4e2a\u8fdb\u7a0b \u9ed8\u8ba4 1 #process_name=%(process_num)02d ;directory= ; \u6267\u884c\u524d\u8981\u4e0d\u8981\u5148cd\u5230\u76ee\u5f55\u53bb autostart=true ; \u968f\u7740supervisord\u7684\u542f\u52a8\u800c\u542f\u52a8 autorestart=true ; \u662f\u5426\u81ea\u52a8\u91cd\u542f \u9ed8\u8ba4true startretries=5 ; \u542f\u52a8\u5931\u8d25\u65f6\u7684\u6700\u591a\u91cd\u8bd5\u6b21\u6570 \u9ed8\u8ba45 ;;exitcodes=0 ; \u6b63\u5e38\u9000\u51fa\u4ee3\u7801 ;;stopsignal=KILL ; \u7528\u6765\u6740\u6b7b\u8fdb\u7a0b\u7684\u4fe1\u53f7 ;;stopwaitsecs=10 ; \u53d1\u9001SIGKILL\u524d\u7684\u7b49\u5f85\u65f6\u95f4 redirect_stderr=true ; \u91cd\u5b9a\u5411stderr\u5230stdout stdout_logfile=/data/logs/error/supervisor/mc_11211.log stderr_logfile=/data/logs/error/supervisor/mc_11211.log","title":"7.4 \u6dfb\u52a0memcached\u4fe1\u606f"},{"location":"DevOps/08%20Cache/deploy-memcache-and-adopt-supervisor-management/#8","text":"\u5173\u95ed\u9632\u706b\u5899\u670d\u52a1 systemctl stop firewalld.service systemctl disable firewalld.service \u5173\u95edmemcached\u670d\u52a1 service memcached stop \u5173\u95edmemcached\u5f00\u673a\u81ea\u542f chkconfig memcached off \u91cd\u542fsupervisord\uff0c\u91c7\u7528supervisord\u542f\u52a8memcached service supervisord restart","title":"8.\u6700\u7ec8\u914d\u7f6e"},{"location":"DevOps/08%20Cache/initialize-cache/","text":"#!/bin/bash ########## 1. \u57fa\u7840\u5de5\u4f5c start ########## tmux_conf=/root/.tmux.conf chk_service_super=`systemctl status supervisord.service | grep inactive` if [[ -n $chk_service_super ]] then echo \"supervisord is inactive...\" else sudo service supervisord stop fi chk_service_hhvm=`systemctl status hhvm | grep inactive` if [[ -n $chk_service_hhvm ]] then echo \"hhvm is inactive...\" else sudo service hhvm stop fi mkdir -p /data/logs mkdir -p /data/backup mkdir -p /data/components/ mkdir -p /data/scripts mkdir -p /data/softs mkdir -p /data/logs/access mkdir -p /data/logs/general mkdir -p /data/logs/logic mkdir -p /data/logs/error/supervisor chmod -R 777 /data/logs/* chmod -R 777 /data/components/ # \u5e38\u7528\u7c7b\u5e93 sudo yum -y install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel # \u5e38\u7528\u8f6f\u4ef6 sudo yum -y install net-tools unzip vim lrzsz subversion tmux # tmux\u914d\u7f6e cat > $tmux_conf <<EOF set-option -g default-terminal \"screen-256color\" #\u8bbe\u7f6e\u524d\u7f00\u4e3aCtrl + x set -g prefix C-x #\u89e3\u9664Ctrl+b \u4e0e\u524d\u7f00\u7684\u5bf9\u5e94\u5173\u7cfb unbind C-b #up bind-key k select-pane -U #down bind-key j select-pane -D #left bind-key h select-pane -L #right bind-key l select-pane -R #select last window bind-key C-l select-window -l #copy-mode \u5c06\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3avi \u6a21\u5f0f setw -g mode-keys vi #bind C-k run \"./bin/tmux-zoom.sh\" EOF ########## \u57fa\u7840\u5de5\u4f5c end ########## ########## \u90e8\u7f72memcached start ########## ip_addr=`ifconfig | grep 'inet' | grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $2}'` sed -i \"s/OPTIONS=\\\"-l 127.0.0.1\\\"/OPTIONS=\\\"-l ${ip_addr}\\\"/g\" /etc/init.d/memcached sed -i 's/CACHESIZE=977/CACHESIZE=2048/g' /etc/init.d/memcached sed -i 's/MAXCONN=1024$/MAXCONN=10240/g' /etc/init.d/memcached systemctl daemon-reload service memcached restart ########## \u90e8\u7f72memcached end ##########","title":"\u521d\u59cb\u5316Cache"},{"location":"DevOps/09%20Php/php-install-bcmath-extension/","text":"#!/bin/bash bcmath_ini=/etc/php.d/40-bcmath.ini ## \u5b89\u88c5bcmath\u6269\u5c55 cd /data/softs sudo tar zxvf php-5.6.30.tar.gz cd /data/softs/php-5.6.30/ext/bcmath/ sudo phpize sudo ./configure make &&make install ## \u589e\u52a0\u6269\u5c55\u914d\u7f6e cat > $bcmath_ini <<EOF ; Enable bcmath extension module extension = bcmath.so EOF echo \"bcmath\u5b89\u88c5\u5b8c\u6210......\"","title":"php\u5b89\u88c5bcmath\u6269\u5c55\u811a\u672c"},{"location":"DevOps/10%20Web/html-basics/","text":"\u4e00\u3001BS\u6a21\u5f0f \u00b6 BS(Browser-Server)\u6a21\u5f0f\uff1a\u987e\u540d\u601d\u4e49\u4e3a\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u7684\u610f\u601d\uff0c\u5bf9\u6bd4\u7684\u8bdd\u7c7b\u4f3c\u6211\u4eecPC\u4e0a\u9762\u6d4f\u89c8\u5668\u4f7f\u7528\u7684\u4ea7\u54c1\u5373\u4e3aBS\u6a21\u5f0f\u4ea7\u54c1\uff0c\u4f8b\u5982google doc\u3001\u5404\u7c7b\u7f51\u7ad9\u7b49\u3002 \u670d\u52a1\u7aef\u5f00\u542f\u4e00\u4e2asocke\u8fdb\u7a0b #!/usr/bin/env python # -*- coding:utf-8 -*- import socket def main(): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('localhost',8082)) sock.listen(5) while True: print(\"server is working.....\") conn, address = sock.accept() request = conn.recv(1024) conn.sendall(bytes(\"HTTP/1.1 201 OK\\r\\n\\r\\n<h1>Hello world</h1>\",\"utf8\")) conn.close() if __name__ == '__main__': main() \u6d4f\u89c8\u5668\u8f93\u5165127.0.0.1:8082\u8bbf\u95ee\u5230\u5bf9\u5e94\u7684\u7f51\u7ad9 <h1>Hello world</h1> \u4e8c\u3001HTML\u7684\u5b9a\u4e49 \u00b6 \u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08\u82f1\u8bed\uff1aHyperText Markup Language\uff0c\u7b80\u79f0\uff1aHTML\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u5957\u89c4\u5219\uff0c\u6d4f\u89c8\u5668\u8ba4\u8bc6\u7684\u89c4\u5219\u3002 HTML\u662f\u4e00\u79cd\u57fa\u7840\u6280\u672f\uff0c\u5e38\u4e0eCSS\u3001JavaScript\u4e00\u8d77\u88ab\u4f17\u591a\u7f51\u7ad9\u7528\u4e8e\u8bbe\u8ba1\u4ee4\u4eba\u8d4f\u5fc3\u60a6\u76ee\u7684\u7f51\u9875\u3001\u7f51\u9875\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u3002\u7f51\u9875\u6d4f\u89c8\u5668\u53ef\u4ee5\u8bfb\u53d6HTML\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u6e32\u67d3\u6210\u53ef\u89c6\u5316\u7f51\u9875\u3002HTML\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7f51\u7ad9\u7684\u7ed3\u6784\u8bed\u4e49\u968f\u7740\u7ebf\u7d22\u7684\u5448\u73b0\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\u800c\u975e\u7f16\u7a0b\u8bed\u8a00\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\uff0c\u5bf9\u540c\u4e00\u6807\u7b7e\u53ef\u80fd\u4f1a\u6709\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u89e3\u91ca\uff08\u517c\u5bb9\u6027\uff09\u3002 \u9759\u6001\u7f51\u9875\u6587\u4ef6\u6269\u5c55\u540d\uff1a.html \u6216 .htm \u4e09\u3001HTML\u7684\u7ed3\u6784 \u00b6 pcharm\u521b\u5efa\u51fa\u6765\u7684\u9ed8\u8ba4html\u6587\u6863 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u7f51\u9875\u6807\u9898</title> </head> <body> </body> </html> <!DOCTYPE html> \u544a\u8bc9\u6d4f\u89c8\u5668\u4f7f\u7528\u4ec0\u4e48\u6837\u7684html\u6216\u8005xhtml\u6765\u89e3\u6790html\u6587\u6863 <html></html>\u662f\u6587\u6863\u7684\u5f00\u59cb\u6807\u8bb0\u548c\u7ed3\u675f\u6807\u8bb0\u3002\u6b64\u5143\u7d20\u544a\u8bc9\u6d4f\u89c8\u5668\u5176\u81ea\u8eab\u662f\u4e00\u4e2a HTML \u6587\u6863\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u662f\u6587\u6863\u7684\u5934\u90e8<head>\u548c\u4e3b\u4f53<body>\u3002 <head></head>\u5143\u7d20\u51fa\u73b0\u5728\u6587\u6863\u7684\u5f00\u5934\u90e8\u5206\u3002<head>\u4e0e</head>\u4e4b\u95f4\u7684\u5185\u5bb9\u4e0d\u4f1a\u5728\u6d4f\u89c8\u5668\u7684\u6587\u6863\u7a97\u53e3\u663e\u793a\uff0c\u4f46\u662f\u5176\u95f4\u7684\u5143\u7d20\u6709\u7279\u6b8a\u91cd\u8981\u7684\u610f\u4e49\u3002 <title></title>\u5b9a\u4e49\u7f51\u9875\u6807\u9898\uff0c\u5728\u6d4f\u89c8\u5668\u6807\u9898\u680f\u663e\u793a\u3002 <body></body>\u4e4b\u95f4\u7684\u6587\u672c\u662f\u53ef\u89c1\u7684\u7f51\u9875\u4e3b\u4f53\u5185\u5bb9 \u56db\u3001HTML\u7684\u6807\u7b7e\u683c\u5f0f \u00b6 \u6807\u7b7e\u7684\u8bed\u6cd5\uff1a <\u6807\u7b7e\u540d \u5c5e\u60271=\u201c\u5c5e\u6027\u503c1\u201d \u5c5e\u60272=\u201c\u5c5e\u6027\u503c2\u201d\u2026\u2026>\u5185\u5bb9\u90e8\u5206 <\u6807\u7b7e\u540d \u5c5e\u60271=\u201c\u5c5e\u6027\u503c1\u201d \u5c5e\u60272=\u201c\u5c5e\u6027\u503c2\u201d\u2026\u2026 /> \u4e94\u3001\u5e38\u7528\u6807\u7b7e \u00b6 1. <!DOCTYPE>\u6807\u7b7e \u00b6 \u58f0\u660e\u4f4d\u4e8e\u6587\u6863\u4e2d\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u5904\u4e8e \u6807\u7b7e\u4e4b\u524d\u3002\u6b64\u6807\u7b7e\u53ef\u544a\u77e5\u6d4f\u89c8\u5668\u6587\u6863\u4f7f\u7528\u54ea\u79cd HTML \u6216 XHTML \u89c4\u8303\u3002 \u4f5c\u7528\uff1a\u58f0\u660e\u6587\u6863\u7684\u89e3\u6790\u7c7b\u578b(document.compatMode)\uff0c\u907f\u514d\u6d4f\u89c8\u5668\u7684\u602a\u5f02\u6a21\u5f0f\u3002 document.compatMode\uff1a BackCompat\uff1a\u602a\u5f02\u6a21\u5f0f\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u81ea\u5df1\u7684\u602a\u5f02\u6a21\u5f0f\u89e3\u6790\u6e32\u67d3\u9875\u9762\u3002 CSS1Compat\uff1a\u6807\u51c6\u6a21\u5f0f\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528W3C\u7684\u6807\u51c6\u89e3\u6790\u6e32\u67d3\u9875\u9762\u3002 \u8fd9\u4e2a\u5c5e\u6027\u4f1a\u88ab\u6d4f\u89c8\u5668\u8bc6\u522b\u5e76\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u9875\u9762\u6ca1\u6709DOCTYPE\u7684\u58f0\u660e\uff0c\u90a3\u4e48compatMode\u9ed8\u8ba4\u5c31\u662fBackCompat 2. \u5185\u5e38\u7528\u6807\u7b7e \u00b6 2.1 \u6807\u7b7e \u00b6 meta\u4ecb\u7ecd \u5143\u7d20\u53ef\u63d0\u4f9b\u6709\u5173\u9875\u9762\u7684\u5143\u4fe1\u606f\uff08meta-information\uff09\uff0c\u9488\u5bf9\u641c\u7d22\u5f15\u64ce\u548c\u66f4\u65b0\u9891\u5ea6\u7684\u63cf\u8ff0\u548c\u5173\u952e\u8bcd\u3002 \u6807\u7b7e\u4f4d\u4e8e\u6587\u6863\u7684\u5934\u90e8\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5185\u5bb9\u3002 \u63d0\u4f9b\u7684\u4fe1\u606f\u662f\u7528\u6237\u4e0d\u53ef\u89c1\u7684 meta\u6807\u7b7e\u7684\u7ec4\u6210\uff1ameta\u6807\u7b7e\u5171\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u5b83\u4eec\u5206\u522b\u662fhttp-equiv\u5c5e\u6027\u548cname \u5c5e\u6027\uff0c\u4e0d\u540c\u7684\u5c5e\u6027\u53c8\u6709\u4e0d\u540c\u7684\u53c2\u6570\u503c\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7684\u53c2\u6570\u503c\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u7f51\u9875\u529f\u80fd\u3002 name\u5c5e\u6027: \u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\u4e3acontent\uff0ccontent\u4e2d\u7684\u5185\u5bb9\u4e3b\u8981\u662f\u4fbf\u4e8e\u641c\u7d22\u5f15\u64ce\u673a\u5668\u4eba\u67e5\u627e\u4fe1\u606f\u548c\u5206\u7c7b\u4fe1\u606f\u7528\u7684\u3002 <meta name=\"keywords\" content=\"meta\u603b\u7ed3,html meta,meta\u5c5e\u6027,meta\u8df3\u8f6c\"> <meta name=\"description\" content=\"\u767e\u5ea6\u662f\u4e2a\u641c\u7d22\u5f15\u64ce\"> http-equiv\u5c5e\u6027\uff1a\u76f8\u5f53\u4e8ehttp\u7684\u6587\u4ef6\u5934\u4f5c\u7528\uff0c\u5b83\u53ef\u4ee5\u5411\u6d4f\u89c8\u5668\u4f20\u56de\u4e00\u4e9b\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4ee5\u5e2e\u52a9\u6b63\u786e\u5730\u663e\u793a\u7f51\u9875\u5185\u5bb9\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\u4e3acontent\uff0ccontent\u4e2d\u7684\u5185\u5bb9\u5176\u5b9e\u5c31\u662f\u5404\u4e2a\u53c2\u6570\u7684\u53d8\u91cf\u503c\u3002 <meta http-equiv=\"Refresh\" content=\"2;URL=https://www.baidu.com\"> //(\u6ce8\u610f\u540e\u9762\u7684\u5f15\u53f7\uff0c\u5206\u522b\u5728\u79d2\u6570\u7684\u524d\u9762\u548c\u7f51\u5740\u7684\u540e\u9762) <meta http-equiv=\"content-Type\" charset=UTF8\"> <meta http-equiv = \"X-UA-Compatible\" content = \"IE=EmulateIE7\" /> 2.2 \u975emeta\u6807\u7b7e \u00b6 <title> jd </title> <link rel= \"icon\" href= \"http://www.jd.com/favicon.ico\" > <link rel= \"stylesheet\" href= \"css.css\" > <script src= \"hello.js\" ></script> 3. \u5185\u5e38\u7528\u6807\u7b7e \u00b6 3.1 \u57fa\u672c\u6807\u7b7e\uff08\u5757\u7ea7\u6807\u7b7e\u548c\u5185\u8054\u6807\u7b7e\uff09 \u00b6 \u5757\u7ea7\u5143\u7d20(block)\u7279\u6027\uff1a \u603b\u662f\u72ec\u5360\u4e00\u884c\uff0c\u8868\u73b0\u4e3a\u53e6\u8d77\u4e00\u884c\u5f00\u59cb\uff0c\u800c\u4e14\u5176\u540e\u7684\u5143\u7d20\u4e5f\u5fc5\u987b\u53e6\u8d77\u4e00\u884c\u663e\u793a; \u5bbd\u5ea6(width)\u3001\u9ad8\u5ea6(height)\u3001\u5185\u8fb9\u8ddd(padding)\u548c\u5916\u8fb9\u8ddd(margin)\u90fd\u53ef\u63a7\u5236; \u5185\u8054\u5143\u7d20(inline)\u7279\u6027\uff1a \u548c\u76f8\u90bb\u7684\u5185\u8054\u5143\u7d20\u5728\u540c\u4e00\u884c; \u5bbd\u5ea6(width)\u3001\u9ad8\u5ea6(height)\u3001\u5185\u8fb9\u8ddd\u7684top/bottom(padding-top/padding-bottom)\u548c\u5916\u8fb9\u8ddd\u7684top/bottom(margin-top/margin-bottom)\u90fd\u4e0d\u53ef\u6539\u53d8\uff0c\u5c31\u662f\u91cc\u9762\u6587\u5b57\u6216\u56fe\u7247\u7684\u5927\u5c0f; \u5757\u7ea7\u5143\u7d20\u4e3b\u8981\u6709\uff1a address , blockquote , center , dir , div , dl , fieldset , form , h1 , h2 , h3 , h4 , h5 , h6 , hr , isindex , menu , noframes , noscript , ol , p , pre , table , ul , li \u5185\u8054\u5143\u7d20\u4e3b\u8981\u6709\uff1a a , abbr , acronym , b , bdo , big , br , cite , code , dfn , em , font , i , img , input , kbd , label , q , s , samp , select , small , span , strike , strong , sub , sup ,textarea , tt , u , var \u53ef\u53d8\u5143\u7d20(\u6839\u636e\u4e0a\u4e0b\u6587\u5173\u7cfb\u786e\u5b9a\u8be5\u5143\u7d20\u662f\u5757\u5143\u7d20\u8fd8\u662f\u5185\u8054\u5143\u7d20)\uff1a applet ,button ,del ,iframe , ins ,map ,object , script <hn>: n\u7684\u53d6\u503c\u8303\u56f4\u662f1~6; \u4ece\u5927\u5230\u5c0f. \u7528\u6765\u8868\u793a\u6807\u9898. <p>: \u6bb5\u843d\u6807\u7b7e. \u5305\u88f9\u7684\u5185\u5bb9\u88ab\u6362\u884c.\u5e76\u4e14\u4e5f\u4e0a\u4e0b\u5185\u5bb9\u4e4b\u95f4\u6709\u4e00\u884c\u7a7a\u767d. <b> <strong>: \u52a0\u7c97\u6807\u7b7e. <strike>: \u4e3a\u6587\u5b57\u52a0\u4e0a\u4e00\u6761\u4e2d\u7ebf. <em>: \u6587\u5b57\u53d8\u6210\u659c\u4f53. <sup>\u548c<sub>: \u4e0a\u89d2\u6807 \u548c \u4e0b\u89d2\u6807. <br>:\u6362\u884c. <hr>:\u6c34\u5e73\u7ebf \u7279\u6b8a\u5b57\u7b26\uff1a &lt; &gt\uff1b&quot\uff1b&copy;&reg; 3.2 \\ \u548c\\ \u00b6 \\ \\ \uff1a \\ \u53ea\u662f\u4e00\u4e2a\u5757\u7ea7\u5143\u7d20\uff0c\u5e76\u65e0\u5b9e\u9645\u7684\u610f\u4e49\u3002\u4e3b\u8981\u901a\u8fc7CSS\u6837\u5f0f\u4e3a\u5176\u8d4b\u4e88\u4e0d\u540c\u7684\u8868\u73b0. \\ \\ \uff1a \\ \u8868\u793a\u4e86\u5185\u8054\u884c(\u884c\u5185\u5143\u7d20),\u5e76\u65e0\u5b9e\u9645\u7684\u610f\u4e49,\u4e3b\u8981\u901a\u8fc7CSS\u6837\u5f0f\u4e3a\u5176\u8d4b\u4e88\u4e0d\u540c\u7684\u8868\u73b0. \u5757\u7ea7\u5143\u7d20\u4e0e\u884c\u5185\u5143\u7d20\u7684\u533a\u522b \u6240\u8c13\u5757\u5143\u7d20\uff0c\u662f\u4ee5\u53e6\u8d77\u4e00\u884c\u5f00\u59cb\u6e32\u67d3\u7684\u5143\u7d20\uff0c\u884c\u5185\u5143\u7d20\u5219\u4e0d\u9700\u53e6\u8d77\u4e00\u884c\u3002\u5982\u679c\u5355\u72ec\u5728\u7f51\u9875\u4e2d\u63d2\u5165\u8fd9\u4e24\u4e2a\u5143\u7d20\uff0c\u4e0d\u4f1a\u5bf9\u9875\u9762\u4ea7\u751f\u4efb\u4f55\u7684\u5f71\u54cd\u3002 \u8fd9\u4e24\u4e2a\u5143\u7d20\u662f\u4e13\u95e8\u4e3a\u5b9a\u4e49CSS\u6837\u5f0f\u800c\u751f\u7684\u3002 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <div style=\"background-color: gold;\">yuan</div> <span style=\"background-color: green;\">span</span> </body> </html> 3.3 \u8d85\u94fe\u63a5\u6807\u7b7e(\u951a\u6807\u7b7e): \u00b6 \u4ec0\u4e48\u662f\u8d85\u7ea7\u94fe\u63a5\uff1f \u6240\u8c13\u7684\u8d85\u94fe\u63a5\u662f\u6307\u4ece\u4e00\u4e2a\u7f51\u9875\u6307\u5411\u4e00\u4e2a\u76ee\u6807\u7684\u8fde\u63a5\u5173\u7cfb\uff0c\u8fd9\u4e2a\u76ee\u6807\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7f51\u9875\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u540c\u7f51\u9875\u4e0a \u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u56fe\u7247\uff0c\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4e00\u4e2a\u6587\u4ef6\uff0c\u751a\u81f3\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 <a href=\"\" target=\"_blank\" >click</a> href\u5c5e\u6027\u6307\u5b9a\u76ee\u6807\u7f51\u9875\u5730\u5740\u3002\u8be5\u5730\u5740\u53ef\u4ee5\u6709\u51e0\u79cd\u7c7b\u578b\uff1a \u7edd\u5bf9 URL - \u6307\u5411\u53e6\u4e00\u4e2a\u7ad9\u70b9\uff08\u6bd4\u5982 href=\" http://www.jd.com \uff09 \u76f8\u5bf9 URL - \u6307\u5f53\u524d\u7ad9\u70b9\u4e2d\u786e\u5207\u7684\u8def\u5f84\uff08href=\"index.htm\"\uff09 \u951a URL - \u6307\u5411\u9875\u9762\u4e2d\u7684\u951a\uff08href=\"\"\uff09 \u8865\u5145\uff1a \u4ec0\u4e48\u662fURL\uff1f URL\u662f\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u5668(Uniform Resource Locator)\u7684\u7f29\u5199\uff0c\u4e5f\u88ab\u79f0\u4e3a\u7f51\u9875\u5730\u5740\uff0c\u662f\u56e0\u7279\u7f51\u4e0a\u6807\u51c6\u7684\u8d44\u6e90\u7684\u5730\u5740\u3002 URL\u4e3e\u4f8b http://www.sohu.com/stu/intro.html http://222.172.123.33/stu/intro.html URL\u5730\u5740\u75314\u90e8\u5206\u7ec4\u6210 \u7b2c1\u90e8\u5206\uff1a\u4e3a\u534f\u8bae\uff1ahttp://\u3001ftp://\u7b49 \u7b2c2\u90e8\u5206\uff1a\u4e3a\u7ad9\u70b9\u5730\u5740\uff1a\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740 \u7b2c3\u90e8\u5206\uff1a\u4e3a\u9875\u9762\u5728\u7ad9\u70b9\u4e2d\u7684\u76ee\u5f55\uff1astu \u7b2c4\u90e8\u5206\uff1a\u4e3a\u9875\u9762\u540d\u79f0\uff0c\u4f8b\u5982 index.html \u5404\u90e8\u5206\u4e4b\u95f4\u7528\u201c/\u201d\u7b26\u53f7\u9694\u5f00\u3002 3.4 \u56fe\u5f62\u6807\u7b7e: \u00b6 src: \u8981\u663e\u793a\u56fe\u7247\u7684\u8def\u5f84. alt: \u56fe\u7247\u6ca1\u6709\u52a0\u8f7d\u6210\u529f\u65f6\u7684\u63d0\u793a. title: \u9f20\u6807\u60ac\u6d6e\u65f6\u7684\u63d0\u793a\u4fe1\u606f. width: \u56fe\u7247\u7684\u5bbd height:\u56fe\u7247\u7684\u9ad8 (\u5bbd\u9ad8\u4e24\u4e2a\u5c5e\u6027\u53ea\u7528\u4e00\u4e2a\u4f1a\u81ea\u52a8\u7b49\u6bd4\u7f29\u653e.) <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h2>\u63d2\u5165\u56fe\u7247</h2> <img src=\"s.png\" width=\"200px\" height=\"100px\" alt=\"\u7f8e\u5973\" title=\"\u5305\u5c0f\u59d0\"> <a href=\"http://www.baidu.com\" target=\"_blank\">click</a> <a href=\"index.html\" target=\"_blank\">click2</a> <a href=\"http://www.baidu.com\"><img src=\"s.png\" alt=\"\"></a> </body> </html> 3.5 \u5217\u8868\u6807\u7b7e \u00b6 \\ : \u65e0\u5e8f\u5217\u8868 [type\u5c5e\u6027\uff1adisc(\u5b9e\u5fc3\u5706\u70b9)(\u9ed8\u8ba4)\u3001circle(\u7a7a\u5fc3\u5706\u5708)\u3001square(\u5b9e\u5fc3\u65b9\u5757)] \\ : \u6709\u5e8f\u5217\u8868 \\ :\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u9879. \\ \u5b9a\u4e49\u5217\u8868 \\ \u5217\u8868\u6807\u9898 \\ \u5217\u8868\u9879 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <ul> <li>1111</li> <li>2222</li> <li>3333</li> </ul> <ol> <li>1111</li> <li>2222</li> <li>3333</li> </ol> <dl> <dt>\u6cb3\u5317\u7701</dt> <dd>\u4fdd\u5b9a</dd> <dd>\u77f3\u5bb6\u5e84</dd> <dd>\u96c4\u5b89</dd> </dl> </body> </html> 3.6 \u8868\u683c\u6807\u7b7e: \\ \u00b6 \u8868\u683c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u636e\u7a7a\u95f4\uff0c\u4e00\u4e2a\u8868\u683c\u7531\u82e5\u5e72\u884c\u7ec4\u6210\uff0c\u4e00\u4e2a\u884c\u53c8\u6709\u82e5\u5e72\u5355\u5143\u683c\u7ec4\u6210\uff0c\u5355\u5143\u683c\u91cc\u53ef\u4ee5\u5305\u542b\u6587\u5b57\u3001\u5217\u8868\u3001\u56fe\u6848\u3001\u8868\u5355\u3001\u6570\u5b57\u7b26\u53f7\u3001\u9884\u7f6e\u6587\u672c\u548c\u5176\u5b83\u7684\u8868\u683c\u7b49\u5185\u5bb9\u3002 \u8868\u683c\u6700\u91cd\u8981\u7684\u76ee\u7684\u662f\u663e\u793a\u8868\u683c\u7c7b\u6570\u636e\u3002\u8868\u683c\u7c7b\u6570\u636e\u662f\u6307\u6700\u9002\u5408\u7ec4\u7ec7\u4e3a\u8868\u683c\u683c\u5f0f\uff08\u5373\u6309\u884c\u548c\u5217\u7ec4\u7ec7\uff09\u7684\u6570\u636e\u3002 \u8868\u683c\u7684\u57fa\u672c\u7ed3\u6784\uff1a <table> <tr> <td>\u6807\u9898</td> <td>\u6807\u9898</td> </tr> <tr> <td>\u5185\u5bb9</td> <td>\u5185\u5bb9</td> </tr> </table> \\ : table row \\ : table head cell \\ : table data cell \u8868\u683c\u7684\u5c5e\u6027\uff1a border: \u8868\u683c\u8fb9\u6846. cellpadding: \u5185\u8fb9\u8ddd cellspacing: \u5916\u8fb9\u8ddd. width: \u50cf\u7d20 \u767e\u5206\u6bd4.\uff08\u6700\u597d\u901a\u8fc7css\u6765\u8bbe\u7f6e\u957f\u5bbd\uff09 rowspan: \u5355\u5143\u683c\u7ad6\u8de8\u591a\u5c11\u884c colspan: \u5355\u5143\u683c\u6a2a\u8de8\u591a\u5c11\u5217\uff08\u5373\u5408\u5e76\u5355\u5143\u683c\uff09 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <table border=\"1\" cellpadding=\"10px\" cellspacing=\"5px\"> <tr> <th>\u59d3\u540d</th> <th>\u5e74\u9f84</th> <th>\u6027\u522b</th> <th>\u5de5\u8d44</th> </tr> <tr> <td>111</td> <td>111</td> <td>111</td> <td>111</td> </tr> <tr> <td colspan=\"2\">222</td> <td>222</td> <td rowspan=\"2\">222</td> </tr> <tr> <td>333</td> <td>333</td> <td>333</td> </tr> </table> </body> </html> \u8868\u5355\u6807\u7b7e: \u529f\u80fd\uff1a\u8868\u5355\u7528\u4e8e\u5411\u670d\u52a1\u5668\u4f20\u8f93\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u7528\u6237\u4e0eWeb\u670d\u52a1\u5668\u7684\u4ea4\u4e92 \u8868\u5355\u80fd\u591f\u5305\u542binput\u7cfb\u5217\u6807\u7b7e\uff0c\u6bd4\u5982\u6587\u672c\u5b57\u6bb5\u3001\u590d\u9009\u6846\u3001\u5355\u9009\u6846\u3001\u63d0\u4ea4\u6309\u94ae\u7b49\u7b49\u3002 \u8868\u5355\u8fd8\u53ef\u4ee5\u5305\u542btextarea\u3001select\u3001fieldset\u548c label\u6807\u7b7e\u3002 \u8868\u5355\u5c5e\u6027 action: \u8868\u5355\u63d0\u4ea4\u5230\u54ea.\u4e00\u822c\u6307\u5411\u670d\u52a1\u5668\u7aef\u4e00\u4e2a\u7a0b\u5e8f,\u7a0b\u5e8f\u63a5\u6536\u5230\u8868\u5355\u63d0\u4ea4\u8fc7\u6765\u7684\u6570\u636e\uff08\u5373\u8868\u5355\u5143\u7d20\u503c\uff09\u4f5c\u76f8\u5e94\u5904\u7406\uff0c\u6bd4\u5982https://www.sogou.com/web method: \u8868\u5355\u7684\u63d0\u4ea4\u65b9\u5f0f post/get\u9ed8\u8ba4\u53d6\u503c\u5c31\u662fget \u8868\u5355\u5143\u7d20 \u57fa\u672c\u6982\u5ff5\uff1a HTML\u8868\u5355\u662fHTML\u5143\u7d20\u4e2d\u8f83\u4e3a\u590d\u6742\u7684\u90e8\u5206\uff0c\u8868\u5355\u5f80\u5f80\u548c\u811a\u672c\u3001\u52a8\u6001\u9875\u9762\u3001\u6570\u636e\u5904\u7406\u7b49\u529f\u80fd\u76f8\u7ed3\u5408\uff0c\u56e0\u6b64\u5b83\u662f\u5236\u4f5c\u52a8\u6001\u7f51\u7ad9\u5f88\u91cd\u8981\u7684\u5185\u5bb9\u3002 \u8868\u5355\u4e00\u822c\u7528\u6765\u6536\u96c6\u7528\u6237\u7684\u8f93\u5165\u4fe1\u606f \u8868\u5355\u5de5\u4f5c\u539f\u7406\uff1a \u8bbf\u95ee\u8005\u5728\u6d4f\u89c8\u6709\u8868\u5355\u7684\u7f51\u9875\u65f6\uff0c\u53ef\u586b\u5199\u5fc5\u9700\u7684\u4fe1\u606f\uff0c\u7136\u540e\u6309\u67d0\u4e2a\u6309\u94ae\u63d0\u4ea4\u3002\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7Internet\u4f20\u9001\u5230\u670d\u52a1\u5668\u4e0a\u3002 \u670d\u52a1\u5668\u4e0a\u4e13\u95e8\u7684\u7a0b\u5e8f\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u6709\u9519\u8bef\u4f1a\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8981\u6c42\u7ea0\u6b63\u9519\u8bef\u3002\u5f53\u6570\u636e\u5b8c\u6574\u65e0\u8bef\u540e\uff0c\u670d\u52a1\u5668\u53cd\u9988\u4e00\u4e2a\u8f93\u5165\u5b8c\u6210\u7684\u4fe1\u606f \\ \u7cfb\u5217\u6807\u7b7e <1> \u8868\u5355\u7c7b\u578b type: text \u6587\u672c\u8f93\u5165\u6846 password \u5bc6\u7801\u8f93\u5165\u6846 radio \u5355\u9009\u6846 checkbox \u591a\u9009\u6846 submit \u63d0\u4ea4\u6309\u94ae button \u6309\u94ae(\u9700\u8981\u914d\u5408js\u4f7f\u7528.) button\u548csubmit\u7684\u533a\u522b\uff1f file \u63d0\u4ea4\u6587\u4ef6\uff1aform\u8868\u5355\u9700\u8981\u52a0\u4e0a\u5c5e\u6027enctype=\"multipart/form-data\" \u4e0a\u4f20\u6587\u4ef6\u6ce8\u610f\u4e24\u70b9\uff1a \u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u662fpost enctype=\"multipart/form-data\" <2> \u8868\u5355\u5c5e\u6027 name: \u8868\u5355\u63d0\u4ea4\u9879\u7684\u952e. \u6ce8\u610f\u548cid\u5c5e\u6027\u7684\u533a\u522b\uff1aname\u5c5e\u6027\u662f\u548c\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u4f7f\u7528\u7684\u540d\u79f0\uff1b \u800cid\u5c5e\u6027\u662f\u6d4f\u89c8\u5668\u7aef\u4f7f\u7528\u7684\u540d\u79f0\uff0c\u8be5\u5c5e\u6027\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5ba2\u6237\u7aef\u7f16\u7a0b\uff0c\u800c\u5728css\u548cjavascript\u4e2d\u4f7f\u7528\u7684 value: \u8868\u5355\u63d0\u4ea4\u9879\u7684\u503c.\u5bf9\u4e8e\u4e0d\u540c\u7684\u8f93\u5165\u7c7b\u578b\uff0cvalue \u5c5e\u6027\u7684\u7528\u6cd5\u4e5f\u4e0d\u540c\uff1a type=\"button\", \"reset\", \"submit\" - \u5b9a\u4e49\u6309\u94ae\u4e0a\u7684\u663e\u793a\u7684\u6587\u672c type=\"text\", \"password\", \"hidden\" - \u5b9a\u4e49\u8f93\u5165\u5b57\u6bb5\u7684\u521d\u59cb\u503c type=\"checkbox\", \"radio\", \"image\" - \u5b9a\u4e49\u4e0e\u8f93\u5165\u76f8\u5173\u8054\u7684\u503c checked: radio \u548c checkbox \u9ed8\u8ba4\u88ab\u9009\u4e2d readonly: \u53ea\u8bfb. text \u548c password disabled: \u5bf9\u6240\u7528input\u90fd\u597d\u4f7f. select\u6807\u7b7e <select> \u4e0b\u62c9\u9009\u6807\u7b7e\u5c5e\u6027 name:\u8868\u5355\u63d0\u4ea4\u9879\u7684\u952e. size\uff1a\u9009\u9879\u4e2a\u6570 multiple\uff1amultiple <optgroup>\u4e3a\u6bcf\u4e00\u9879\u52a0\u4e0a\u5206\u7ec4 <option> \u4e0b\u62c9\u9009\u4e2d\u7684\u6bcf\u4e00\u9879 \u5c5e\u6027\uff1a value:\u8868\u5355\u63d0\u4ea4\u9879\u7684\u503c. selected: selected\u4e0b\u62c9\u9009\u9ed8\u8ba4\u88ab\u9009\u4e2d \\ \u591a\u884c\u6587\u672c\u6846 <form id=\"form1\" name=\"form1\" method=\"post\" action=\"\"> <textarea cols=\u201c\u5bbd\u5ea6\u201d rows=\u201c\u9ad8\u5ea6\u201d name=\u201c\u540d\u79f0\u201d> \u9ed8\u8ba4\u5185\u5bb9 </textarea> </form> \\ \u6807\u7b7e \u5b9a\u4e49\uff1a \u6807\u7b7e\u4e3a input \u5143\u7d20\u5b9a\u4e49\u6807\u6ce8\uff08\u6807\u8bb0\uff09\u3002 \u8bf4\u660e\uff1a 1 label \u5143\u7d20\u4e0d\u4f1a\u5411\u7528\u6237\u5448\u73b0\u4efb\u4f55\u7279\u6b8a\u6548\u679c\u3002 2 \u6807\u7b7e\u7684 for \u5c5e\u6027\u503c\u5e94\u5f53\u4e0e\u76f8\u5173\u5143\u7d20\u7684 id \u5c5e\u6027\u503c\u76f8\u540c\u3002 <form method=\"post\" action=\"\"> <label for=\u201cusername\u201d>\u7528\u6237\u540d</label> <input type=\u201ctext\u201d name=\u201cusername\u201d id=\u201cusername\u201d size=\u201c20\u201d /> </form> \\ \u6807\u7b7e <fieldset> <legend>\u767b\u5f55\u5427</legend> <input type=\"text\"> </fieldset> \u4f8b: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <form action=\"\" method=\"post\"> <p>\u59d3\u540d\uff1a<input type=\"text\" name=\"username\" value=\"yaun\"></p> <p>\u5bc6\u7801\uff1a<input type=\"password\" name=\"pwd\" value=\"123\"></p> <p>\u7231\u597d\uff1a<input type=\"checkbox\" name=\"hobby\" value=\"basktball\">\u7bee\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"football\">\u8db3\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"ball\">\u7403 </p> <p> \u6027\u522b\uff1a<input type=\"radio\" name=\"sex\" value=\"1\">\u7537 <input type=\"radio\" name=\"sex\" value=\"0\">\u5973 </p> <p><input type=\"button\" value=\"Submit\"></p> <p><input type=\"file\"></p> <p><input type=\"reset\"></p> <p><input type=\"submit\" value=\"Submit\"></p> </form> </body> </html> <!--{\"username\":\"yuan\",\"pwd\":123,\"hobby\":[],\"sex\":1}--> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <form action=\"\" method=\"post\"> <p> <label for=\"user\">\u59d3\u540d\uff1a</label> <input type=\"text\" name=\"username\" id=\"user\"> </p> <p> <label for=\"pwd\">\u5bc6\u7801\uff1a</label> <input type=\"password\" name=\"pwd\" id=\"pwd\"> </p> <p>\u7231\u597d\uff1a<input type=\"checkbox\" name=\"hobby\" value=\"basktball\" checked=\"checked\">\u7bee\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"football\">\u8db3\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"ball\">\u7403 </p> <p> \u6027\u522b\uff1a<input type=\"radio\" name=\"sex\" value=\"1\">\u7537 <input type=\"radio\" name=\"sex\" value=\"0\">\u5973 </p> <select name=\"province\" id=\"\" multiple > <option value=\"hebei\">\u6cb3\u5317\u7701</option> <option value=\"henan\">\u6cb3\u5357\u7701</option> <option value=\"hubei\" selected>\u6e56\u5317\u7701</option> <option value=\"guangdong\" selected>\u5e7f\u4e1c\u7701</option> <option value=\"yunnan\">\u4e91\u5357\u7701</option> </select> <p>\u7b80\u4ecb\uff1a <textarea cols=\"23\" rows=\"10\" name=\"person\"> </textarea> </p> <fieldset> <legend>\u767b\u5f55\u5427</legend> <input type=\"text\"> </fieldset> <p><input type=\"submit\" value=\"Submit\"></p> </form> </body> </html> <!--{\"username\":\"yuan\",\"pwd\":123,\"hobby\":[],\"sex\":1,\"province\":\"henan\"}-->","title":"HTML\u57fa\u7840"},{"location":"DevOps/10%20Web/html-basics/#bs","text":"BS(Browser-Server)\u6a21\u5f0f\uff1a\u987e\u540d\u601d\u4e49\u4e3a\u6d4f\u89c8\u5668-\u670d\u52a1\u5668\u7684\u610f\u601d\uff0c\u5bf9\u6bd4\u7684\u8bdd\u7c7b\u4f3c\u6211\u4eecPC\u4e0a\u9762\u6d4f\u89c8\u5668\u4f7f\u7528\u7684\u4ea7\u54c1\u5373\u4e3aBS\u6a21\u5f0f\u4ea7\u54c1\uff0c\u4f8b\u5982google doc\u3001\u5404\u7c7b\u7f51\u7ad9\u7b49\u3002 \u670d\u52a1\u7aef\u5f00\u542f\u4e00\u4e2asocke\u8fdb\u7a0b #!/usr/bin/env python # -*- coding:utf-8 -*- import socket def main(): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('localhost',8082)) sock.listen(5) while True: print(\"server is working.....\") conn, address = sock.accept() request = conn.recv(1024) conn.sendall(bytes(\"HTTP/1.1 201 OK\\r\\n\\r\\n<h1>Hello world</h1>\",\"utf8\")) conn.close() if __name__ == '__main__': main() \u6d4f\u89c8\u5668\u8f93\u5165127.0.0.1:8082\u8bbf\u95ee\u5230\u5bf9\u5e94\u7684\u7f51\u7ad9 <h1>Hello world</h1>","title":"\u4e00\u3001BS\u6a21\u5f0f"},{"location":"DevOps/10%20Web/html-basics/#html","text":"\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08\u82f1\u8bed\uff1aHyperText Markup Language\uff0c\u7b80\u79f0\uff1aHTML\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002\u53ef\u4ee5\u7b80\u5355\u7406\u89e3\u4e3a\u4e00\u5957\u89c4\u5219\uff0c\u6d4f\u89c8\u5668\u8ba4\u8bc6\u7684\u89c4\u5219\u3002 HTML\u662f\u4e00\u79cd\u57fa\u7840\u6280\u672f\uff0c\u5e38\u4e0eCSS\u3001JavaScript\u4e00\u8d77\u88ab\u4f17\u591a\u7f51\u7ad9\u7528\u4e8e\u8bbe\u8ba1\u4ee4\u4eba\u8d4f\u5fc3\u60a6\u76ee\u7684\u7f51\u9875\u3001\u7f51\u9875\u5e94\u7528\u7a0b\u5e8f\u4ee5\u53ca\u79fb\u52a8\u5e94\u7528\u7a0b\u5e8f\u7684\u7528\u6237\u754c\u9762\u3002\u7f51\u9875\u6d4f\u89c8\u5668\u53ef\u4ee5\u8bfb\u53d6HTML\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u6e32\u67d3\u6210\u53ef\u89c6\u5316\u7f51\u9875\u3002HTML\u63cf\u8ff0\u4e86\u4e00\u4e2a\u7f51\u7ad9\u7684\u7ed3\u6784\u8bed\u4e49\u968f\u7740\u7ebf\u7d22\u7684\u5448\u73b0\uff0c\u4f7f\u4e4b\u6210\u4e3a\u4e00\u79cd\u6807\u8bb0\u8bed\u8a00\u800c\u975e\u7f16\u7a0b\u8bed\u8a00\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\uff0c\u5bf9\u540c\u4e00\u6807\u7b7e\u53ef\u80fd\u4f1a\u6709\u4e0d\u5b8c\u5168\u76f8\u540c\u7684\u89e3\u91ca\uff08\u517c\u5bb9\u6027\uff09\u3002 \u9759\u6001\u7f51\u9875\u6587\u4ef6\u6269\u5c55\u540d\uff1a.html \u6216 .htm","title":"\u4e8c\u3001HTML\u7684\u5b9a\u4e49"},{"location":"DevOps/10%20Web/html-basics/#html_1","text":"pcharm\u521b\u5efa\u51fa\u6765\u7684\u9ed8\u8ba4html\u6587\u6863 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u7f51\u9875\u6807\u9898</title> </head> <body> </body> </html> <!DOCTYPE html> \u544a\u8bc9\u6d4f\u89c8\u5668\u4f7f\u7528\u4ec0\u4e48\u6837\u7684html\u6216\u8005xhtml\u6765\u89e3\u6790html\u6587\u6863 <html></html>\u662f\u6587\u6863\u7684\u5f00\u59cb\u6807\u8bb0\u548c\u7ed3\u675f\u6807\u8bb0\u3002\u6b64\u5143\u7d20\u544a\u8bc9\u6d4f\u89c8\u5668\u5176\u81ea\u8eab\u662f\u4e00\u4e2a HTML \u6587\u6863\uff0c\u5728\u5b83\u4eec\u4e4b\u95f4\u662f\u6587\u6863\u7684\u5934\u90e8<head>\u548c\u4e3b\u4f53<body>\u3002 <head></head>\u5143\u7d20\u51fa\u73b0\u5728\u6587\u6863\u7684\u5f00\u5934\u90e8\u5206\u3002<head>\u4e0e</head>\u4e4b\u95f4\u7684\u5185\u5bb9\u4e0d\u4f1a\u5728\u6d4f\u89c8\u5668\u7684\u6587\u6863\u7a97\u53e3\u663e\u793a\uff0c\u4f46\u662f\u5176\u95f4\u7684\u5143\u7d20\u6709\u7279\u6b8a\u91cd\u8981\u7684\u610f\u4e49\u3002 <title></title>\u5b9a\u4e49\u7f51\u9875\u6807\u9898\uff0c\u5728\u6d4f\u89c8\u5668\u6807\u9898\u680f\u663e\u793a\u3002 <body></body>\u4e4b\u95f4\u7684\u6587\u672c\u662f\u53ef\u89c1\u7684\u7f51\u9875\u4e3b\u4f53\u5185\u5bb9","title":"\u4e09\u3001HTML\u7684\u7ed3\u6784"},{"location":"DevOps/10%20Web/html-basics/#html_2","text":"\u6807\u7b7e\u7684\u8bed\u6cd5\uff1a <\u6807\u7b7e\u540d \u5c5e\u60271=\u201c\u5c5e\u6027\u503c1\u201d \u5c5e\u60272=\u201c\u5c5e\u6027\u503c2\u201d\u2026\u2026>\u5185\u5bb9\u90e8\u5206 <\u6807\u7b7e\u540d \u5c5e\u60271=\u201c\u5c5e\u6027\u503c1\u201d \u5c5e\u60272=\u201c\u5c5e\u6027\u503c2\u201d\u2026\u2026 />","title":"\u56db\u3001HTML\u7684\u6807\u7b7e\u683c\u5f0f"},{"location":"DevOps/10%20Web/html-basics/#_1","text":"","title":"\u4e94\u3001\u5e38\u7528\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#1-doctype","text":"\u58f0\u660e\u4f4d\u4e8e\u6587\u6863\u4e2d\u7684\u6700\u524d\u9762\u7684\u4f4d\u7f6e\uff0c\u5904\u4e8e \u6807\u7b7e\u4e4b\u524d\u3002\u6b64\u6807\u7b7e\u53ef\u544a\u77e5\u6d4f\u89c8\u5668\u6587\u6863\u4f7f\u7528\u54ea\u79cd HTML \u6216 XHTML \u89c4\u8303\u3002 \u4f5c\u7528\uff1a\u58f0\u660e\u6587\u6863\u7684\u89e3\u6790\u7c7b\u578b(document.compatMode)\uff0c\u907f\u514d\u6d4f\u89c8\u5668\u7684\u602a\u5f02\u6a21\u5f0f\u3002 document.compatMode\uff1a BackCompat\uff1a\u602a\u5f02\u6a21\u5f0f\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528\u81ea\u5df1\u7684\u602a\u5f02\u6a21\u5f0f\u89e3\u6790\u6e32\u67d3\u9875\u9762\u3002 CSS1Compat\uff1a\u6807\u51c6\u6a21\u5f0f\uff0c\u6d4f\u89c8\u5668\u4f7f\u7528W3C\u7684\u6807\u51c6\u89e3\u6790\u6e32\u67d3\u9875\u9762\u3002 \u8fd9\u4e2a\u5c5e\u6027\u4f1a\u88ab\u6d4f\u89c8\u5668\u8bc6\u522b\u5e76\u4f7f\u7528\uff0c\u4f46\u662f\u5982\u679c\u4f60\u7684\u9875\u9762\u6ca1\u6709DOCTYPE\u7684\u58f0\u660e\uff0c\u90a3\u4e48compatMode\u9ed8\u8ba4\u5c31\u662fBackCompat","title":"1. &lt;!DOCTYPE&gt;\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#2","text":"","title":"2. \u5185\u5e38\u7528\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#21","text":"meta\u4ecb\u7ecd \u5143\u7d20\u53ef\u63d0\u4f9b\u6709\u5173\u9875\u9762\u7684\u5143\u4fe1\u606f\uff08meta-information\uff09\uff0c\u9488\u5bf9\u641c\u7d22\u5f15\u64ce\u548c\u66f4\u65b0\u9891\u5ea6\u7684\u63cf\u8ff0\u548c\u5173\u952e\u8bcd\u3002 \u6807\u7b7e\u4f4d\u4e8e\u6587\u6863\u7684\u5934\u90e8\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5185\u5bb9\u3002 \u63d0\u4f9b\u7684\u4fe1\u606f\u662f\u7528\u6237\u4e0d\u53ef\u89c1\u7684 meta\u6807\u7b7e\u7684\u7ec4\u6210\uff1ameta\u6807\u7b7e\u5171\u6709\u4e24\u4e2a\u5c5e\u6027\uff0c\u5b83\u4eec\u5206\u522b\u662fhttp-equiv\u5c5e\u6027\u548cname \u5c5e\u6027\uff0c\u4e0d\u540c\u7684\u5c5e\u6027\u53c8\u6709\u4e0d\u540c\u7684\u53c2\u6570\u503c\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7684\u53c2\u6570\u503c\u5c31\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u7f51\u9875\u529f\u80fd\u3002 name\u5c5e\u6027: \u4e3b\u8981\u7528\u4e8e\u63cf\u8ff0\u7f51\u9875\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\u4e3acontent\uff0ccontent\u4e2d\u7684\u5185\u5bb9\u4e3b\u8981\u662f\u4fbf\u4e8e\u641c\u7d22\u5f15\u64ce\u673a\u5668\u4eba\u67e5\u627e\u4fe1\u606f\u548c\u5206\u7c7b\u4fe1\u606f\u7528\u7684\u3002 <meta name=\"keywords\" content=\"meta\u603b\u7ed3,html meta,meta\u5c5e\u6027,meta\u8df3\u8f6c\"> <meta name=\"description\" content=\"\u767e\u5ea6\u662f\u4e2a\u641c\u7d22\u5f15\u64ce\"> http-equiv\u5c5e\u6027\uff1a\u76f8\u5f53\u4e8ehttp\u7684\u6587\u4ef6\u5934\u4f5c\u7528\uff0c\u5b83\u53ef\u4ee5\u5411\u6d4f\u89c8\u5668\u4f20\u56de\u4e00\u4e9b\u6709\u7528\u7684\u4fe1\u606f\uff0c\u4ee5\u5e2e\u52a9\u6b63\u786e\u5730\u663e\u793a\u7f51\u9875\u5185\u5bb9\uff0c\u4e0e\u4e4b\u5bf9\u5e94\u7684\u5c5e\u6027\u503c\u4e3acontent\uff0ccontent\u4e2d\u7684\u5185\u5bb9\u5176\u5b9e\u5c31\u662f\u5404\u4e2a\u53c2\u6570\u7684\u53d8\u91cf\u503c\u3002 <meta http-equiv=\"Refresh\" content=\"2;URL=https://www.baidu.com\"> //(\u6ce8\u610f\u540e\u9762\u7684\u5f15\u53f7\uff0c\u5206\u522b\u5728\u79d2\u6570\u7684\u524d\u9762\u548c\u7f51\u5740\u7684\u540e\u9762) <meta http-equiv=\"content-Type\" charset=UTF8\"> <meta http-equiv = \"X-UA-Compatible\" content = \"IE=EmulateIE7\" />","title":"2.1 \u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#22-meta","text":"<title> jd </title> <link rel= \"icon\" href= \"http://www.jd.com/favicon.ico\" > <link rel= \"stylesheet\" href= \"css.css\" > <script src= \"hello.js\" ></script>","title":"2.2 \u975emeta\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#3","text":"","title":"3. \u5185\u5e38\u7528\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#31","text":"\u5757\u7ea7\u5143\u7d20(block)\u7279\u6027\uff1a \u603b\u662f\u72ec\u5360\u4e00\u884c\uff0c\u8868\u73b0\u4e3a\u53e6\u8d77\u4e00\u884c\u5f00\u59cb\uff0c\u800c\u4e14\u5176\u540e\u7684\u5143\u7d20\u4e5f\u5fc5\u987b\u53e6\u8d77\u4e00\u884c\u663e\u793a; \u5bbd\u5ea6(width)\u3001\u9ad8\u5ea6(height)\u3001\u5185\u8fb9\u8ddd(padding)\u548c\u5916\u8fb9\u8ddd(margin)\u90fd\u53ef\u63a7\u5236; \u5185\u8054\u5143\u7d20(inline)\u7279\u6027\uff1a \u548c\u76f8\u90bb\u7684\u5185\u8054\u5143\u7d20\u5728\u540c\u4e00\u884c; \u5bbd\u5ea6(width)\u3001\u9ad8\u5ea6(height)\u3001\u5185\u8fb9\u8ddd\u7684top/bottom(padding-top/padding-bottom)\u548c\u5916\u8fb9\u8ddd\u7684top/bottom(margin-top/margin-bottom)\u90fd\u4e0d\u53ef\u6539\u53d8\uff0c\u5c31\u662f\u91cc\u9762\u6587\u5b57\u6216\u56fe\u7247\u7684\u5927\u5c0f; \u5757\u7ea7\u5143\u7d20\u4e3b\u8981\u6709\uff1a address , blockquote , center , dir , div , dl , fieldset , form , h1 , h2 , h3 , h4 , h5 , h6 , hr , isindex , menu , noframes , noscript , ol , p , pre , table , ul , li \u5185\u8054\u5143\u7d20\u4e3b\u8981\u6709\uff1a a , abbr , acronym , b , bdo , big , br , cite , code , dfn , em , font , i , img , input , kbd , label , q , s , samp , select , small , span , strike , strong , sub , sup ,textarea , tt , u , var \u53ef\u53d8\u5143\u7d20(\u6839\u636e\u4e0a\u4e0b\u6587\u5173\u7cfb\u786e\u5b9a\u8be5\u5143\u7d20\u662f\u5757\u5143\u7d20\u8fd8\u662f\u5185\u8054\u5143\u7d20)\uff1a applet ,button ,del ,iframe , ins ,map ,object , script <hn>: n\u7684\u53d6\u503c\u8303\u56f4\u662f1~6; \u4ece\u5927\u5230\u5c0f. \u7528\u6765\u8868\u793a\u6807\u9898. <p>: \u6bb5\u843d\u6807\u7b7e. \u5305\u88f9\u7684\u5185\u5bb9\u88ab\u6362\u884c.\u5e76\u4e14\u4e5f\u4e0a\u4e0b\u5185\u5bb9\u4e4b\u95f4\u6709\u4e00\u884c\u7a7a\u767d. <b> <strong>: \u52a0\u7c97\u6807\u7b7e. <strike>: \u4e3a\u6587\u5b57\u52a0\u4e0a\u4e00\u6761\u4e2d\u7ebf. <em>: \u6587\u5b57\u53d8\u6210\u659c\u4f53. <sup>\u548c<sub>: \u4e0a\u89d2\u6807 \u548c \u4e0b\u89d2\u6807. <br>:\u6362\u884c. <hr>:\u6c34\u5e73\u7ebf \u7279\u6b8a\u5b57\u7b26\uff1a &lt; &gt\uff1b&quot\uff1b&copy;&reg;","title":"3.1 \u57fa\u672c\u6807\u7b7e\uff08\u5757\u7ea7\u6807\u7b7e\u548c\u5185\u8054\u6807\u7b7e\uff09"},{"location":"DevOps/10%20Web/html-basics/#32","text":"\\ \\ \uff1a \\ \u53ea\u662f\u4e00\u4e2a\u5757\u7ea7\u5143\u7d20\uff0c\u5e76\u65e0\u5b9e\u9645\u7684\u610f\u4e49\u3002\u4e3b\u8981\u901a\u8fc7CSS\u6837\u5f0f\u4e3a\u5176\u8d4b\u4e88\u4e0d\u540c\u7684\u8868\u73b0. \\ \\ \uff1a \\ \u8868\u793a\u4e86\u5185\u8054\u884c(\u884c\u5185\u5143\u7d20),\u5e76\u65e0\u5b9e\u9645\u7684\u610f\u4e49,\u4e3b\u8981\u901a\u8fc7CSS\u6837\u5f0f\u4e3a\u5176\u8d4b\u4e88\u4e0d\u540c\u7684\u8868\u73b0. \u5757\u7ea7\u5143\u7d20\u4e0e\u884c\u5185\u5143\u7d20\u7684\u533a\u522b \u6240\u8c13\u5757\u5143\u7d20\uff0c\u662f\u4ee5\u53e6\u8d77\u4e00\u884c\u5f00\u59cb\u6e32\u67d3\u7684\u5143\u7d20\uff0c\u884c\u5185\u5143\u7d20\u5219\u4e0d\u9700\u53e6\u8d77\u4e00\u884c\u3002\u5982\u679c\u5355\u72ec\u5728\u7f51\u9875\u4e2d\u63d2\u5165\u8fd9\u4e24\u4e2a\u5143\u7d20\uff0c\u4e0d\u4f1a\u5bf9\u9875\u9762\u4ea7\u751f\u4efb\u4f55\u7684\u5f71\u54cd\u3002 \u8fd9\u4e24\u4e2a\u5143\u7d20\u662f\u4e13\u95e8\u4e3a\u5b9a\u4e49CSS\u6837\u5f0f\u800c\u751f\u7684\u3002 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <div style=\"background-color: gold;\">yuan</div> <span style=\"background-color: green;\">span</span> </body> </html>","title":"3.2 \\\u548c\\"},{"location":"DevOps/10%20Web/html-basics/#33","text":"\u4ec0\u4e48\u662f\u8d85\u7ea7\u94fe\u63a5\uff1f \u6240\u8c13\u7684\u8d85\u94fe\u63a5\u662f\u6307\u4ece\u4e00\u4e2a\u7f51\u9875\u6307\u5411\u4e00\u4e2a\u76ee\u6807\u7684\u8fde\u63a5\u5173\u7cfb\uff0c\u8fd9\u4e2a\u76ee\u6807\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7f51\u9875\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u540c\u7f51\u9875\u4e0a \u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u56fe\u7247\uff0c\u4e00\u4e2a\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u4e00\u4e2a\u6587\u4ef6\uff0c\u751a\u81f3\u662f\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 <a href=\"\" target=\"_blank\" >click</a> href\u5c5e\u6027\u6307\u5b9a\u76ee\u6807\u7f51\u9875\u5730\u5740\u3002\u8be5\u5730\u5740\u53ef\u4ee5\u6709\u51e0\u79cd\u7c7b\u578b\uff1a \u7edd\u5bf9 URL - \u6307\u5411\u53e6\u4e00\u4e2a\u7ad9\u70b9\uff08\u6bd4\u5982 href=\" http://www.jd.com \uff09 \u76f8\u5bf9 URL - \u6307\u5f53\u524d\u7ad9\u70b9\u4e2d\u786e\u5207\u7684\u8def\u5f84\uff08href=\"index.htm\"\uff09 \u951a URL - \u6307\u5411\u9875\u9762\u4e2d\u7684\u951a\uff08href=\"\"\uff09 \u8865\u5145\uff1a \u4ec0\u4e48\u662fURL\uff1f URL\u662f\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u5668(Uniform Resource Locator)\u7684\u7f29\u5199\uff0c\u4e5f\u88ab\u79f0\u4e3a\u7f51\u9875\u5730\u5740\uff0c\u662f\u56e0\u7279\u7f51\u4e0a\u6807\u51c6\u7684\u8d44\u6e90\u7684\u5730\u5740\u3002 URL\u4e3e\u4f8b http://www.sohu.com/stu/intro.html http://222.172.123.33/stu/intro.html URL\u5730\u5740\u75314\u90e8\u5206\u7ec4\u6210 \u7b2c1\u90e8\u5206\uff1a\u4e3a\u534f\u8bae\uff1ahttp://\u3001ftp://\u7b49 \u7b2c2\u90e8\u5206\uff1a\u4e3a\u7ad9\u70b9\u5730\u5740\uff1a\u53ef\u4ee5\u662f\u57df\u540d\u6216IP\u5730\u5740 \u7b2c3\u90e8\u5206\uff1a\u4e3a\u9875\u9762\u5728\u7ad9\u70b9\u4e2d\u7684\u76ee\u5f55\uff1astu \u7b2c4\u90e8\u5206\uff1a\u4e3a\u9875\u9762\u540d\u79f0\uff0c\u4f8b\u5982 index.html \u5404\u90e8\u5206\u4e4b\u95f4\u7528\u201c/\u201d\u7b26\u53f7\u9694\u5f00\u3002","title":"3.3 \u8d85\u94fe\u63a5\u6807\u7b7e(\u951a\u6807\u7b7e):  "},{"location":"DevOps/10%20Web/html-basics/#34","text":"src: \u8981\u663e\u793a\u56fe\u7247\u7684\u8def\u5f84. alt: \u56fe\u7247\u6ca1\u6709\u52a0\u8f7d\u6210\u529f\u65f6\u7684\u63d0\u793a. title: \u9f20\u6807\u60ac\u6d6e\u65f6\u7684\u63d0\u793a\u4fe1\u606f. width: \u56fe\u7247\u7684\u5bbd height:\u56fe\u7247\u7684\u9ad8 (\u5bbd\u9ad8\u4e24\u4e2a\u5c5e\u6027\u53ea\u7528\u4e00\u4e2a\u4f1a\u81ea\u52a8\u7b49\u6bd4\u7f29\u653e.) <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h2>\u63d2\u5165\u56fe\u7247</h2> <img src=\"s.png\" width=\"200px\" height=\"100px\" alt=\"\u7f8e\u5973\" title=\"\u5305\u5c0f\u59d0\"> <a href=\"http://www.baidu.com\" target=\"_blank\">click</a> <a href=\"index.html\" target=\"_blank\">click2</a> <a href=\"http://www.baidu.com\"><img src=\"s.png\" alt=\"\"></a> </body> </html>","title":"3.4 \u56fe\u5f62\u6807\u7b7e: "},{"location":"DevOps/10%20Web/html-basics/#35","text":"\\ : \u65e0\u5e8f\u5217\u8868 [type\u5c5e\u6027\uff1adisc(\u5b9e\u5fc3\u5706\u70b9)(\u9ed8\u8ba4)\u3001circle(\u7a7a\u5fc3\u5706\u5708)\u3001square(\u5b9e\u5fc3\u65b9\u5757)] \\ : \u6709\u5e8f\u5217\u8868 \\ :\u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u9879. \\ \u5b9a\u4e49\u5217\u8868 \\ \u5217\u8868\u6807\u9898 \\ \u5217\u8868\u9879 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <ul> <li>1111</li> <li>2222</li> <li>3333</li> </ul> <ol> <li>1111</li> <li>2222</li> <li>3333</li> </ol> <dl> <dt>\u6cb3\u5317\u7701</dt> <dd>\u4fdd\u5b9a</dd> <dd>\u77f3\u5bb6\u5e84</dd> <dd>\u96c4\u5b89</dd> </dl> </body> </html>","title":"3.5 \u5217\u8868\u6807\u7b7e"},{"location":"DevOps/10%20Web/html-basics/#36","text":"\u8868\u683c\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u636e\u7a7a\u95f4\uff0c\u4e00\u4e2a\u8868\u683c\u7531\u82e5\u5e72\u884c\u7ec4\u6210\uff0c\u4e00\u4e2a\u884c\u53c8\u6709\u82e5\u5e72\u5355\u5143\u683c\u7ec4\u6210\uff0c\u5355\u5143\u683c\u91cc\u53ef\u4ee5\u5305\u542b\u6587\u5b57\u3001\u5217\u8868\u3001\u56fe\u6848\u3001\u8868\u5355\u3001\u6570\u5b57\u7b26\u53f7\u3001\u9884\u7f6e\u6587\u672c\u548c\u5176\u5b83\u7684\u8868\u683c\u7b49\u5185\u5bb9\u3002 \u8868\u683c\u6700\u91cd\u8981\u7684\u76ee\u7684\u662f\u663e\u793a\u8868\u683c\u7c7b\u6570\u636e\u3002\u8868\u683c\u7c7b\u6570\u636e\u662f\u6307\u6700\u9002\u5408\u7ec4\u7ec7\u4e3a\u8868\u683c\u683c\u5f0f\uff08\u5373\u6309\u884c\u548c\u5217\u7ec4\u7ec7\uff09\u7684\u6570\u636e\u3002 \u8868\u683c\u7684\u57fa\u672c\u7ed3\u6784\uff1a <table> <tr> <td>\u6807\u9898</td> <td>\u6807\u9898</td> </tr> <tr> <td>\u5185\u5bb9</td> <td>\u5185\u5bb9</td> </tr> </table> \\ : table row \\ : table head cell \\ : table data cell \u8868\u683c\u7684\u5c5e\u6027\uff1a border: \u8868\u683c\u8fb9\u6846. cellpadding: \u5185\u8fb9\u8ddd cellspacing: \u5916\u8fb9\u8ddd. width: \u50cf\u7d20 \u767e\u5206\u6bd4.\uff08\u6700\u597d\u901a\u8fc7css\u6765\u8bbe\u7f6e\u957f\u5bbd\uff09 rowspan: \u5355\u5143\u683c\u7ad6\u8de8\u591a\u5c11\u884c colspan: \u5355\u5143\u683c\u6a2a\u8de8\u591a\u5c11\u5217\uff08\u5373\u5408\u5e76\u5355\u5143\u683c\uff09 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <table border=\"1\" cellpadding=\"10px\" cellspacing=\"5px\"> <tr> <th>\u59d3\u540d</th> <th>\u5e74\u9f84</th> <th>\u6027\u522b</th> <th>\u5de5\u8d44</th> </tr> <tr> <td>111</td> <td>111</td> <td>111</td> <td>111</td> </tr> <tr> <td colspan=\"2\">222</td> <td>222</td> <td rowspan=\"2\">222</td> </tr> <tr> <td>333</td> <td>333</td> <td>333</td> </tr> </table> </body> </html> \u8868\u5355\u6807\u7b7e: \u529f\u80fd\uff1a\u8868\u5355\u7528\u4e8e\u5411\u670d\u52a1\u5668\u4f20\u8f93\u6570\u636e\uff0c\u4ece\u800c\u5b9e\u73b0\u7528\u6237\u4e0eWeb\u670d\u52a1\u5668\u7684\u4ea4\u4e92 \u8868\u5355\u80fd\u591f\u5305\u542binput\u7cfb\u5217\u6807\u7b7e\uff0c\u6bd4\u5982\u6587\u672c\u5b57\u6bb5\u3001\u590d\u9009\u6846\u3001\u5355\u9009\u6846\u3001\u63d0\u4ea4\u6309\u94ae\u7b49\u7b49\u3002 \u8868\u5355\u8fd8\u53ef\u4ee5\u5305\u542btextarea\u3001select\u3001fieldset\u548c label\u6807\u7b7e\u3002 \u8868\u5355\u5c5e\u6027 action: \u8868\u5355\u63d0\u4ea4\u5230\u54ea.\u4e00\u822c\u6307\u5411\u670d\u52a1\u5668\u7aef\u4e00\u4e2a\u7a0b\u5e8f,\u7a0b\u5e8f\u63a5\u6536\u5230\u8868\u5355\u63d0\u4ea4\u8fc7\u6765\u7684\u6570\u636e\uff08\u5373\u8868\u5355\u5143\u7d20\u503c\uff09\u4f5c\u76f8\u5e94\u5904\u7406\uff0c\u6bd4\u5982https://www.sogou.com/web method: \u8868\u5355\u7684\u63d0\u4ea4\u65b9\u5f0f post/get\u9ed8\u8ba4\u53d6\u503c\u5c31\u662fget \u8868\u5355\u5143\u7d20 \u57fa\u672c\u6982\u5ff5\uff1a HTML\u8868\u5355\u662fHTML\u5143\u7d20\u4e2d\u8f83\u4e3a\u590d\u6742\u7684\u90e8\u5206\uff0c\u8868\u5355\u5f80\u5f80\u548c\u811a\u672c\u3001\u52a8\u6001\u9875\u9762\u3001\u6570\u636e\u5904\u7406\u7b49\u529f\u80fd\u76f8\u7ed3\u5408\uff0c\u56e0\u6b64\u5b83\u662f\u5236\u4f5c\u52a8\u6001\u7f51\u7ad9\u5f88\u91cd\u8981\u7684\u5185\u5bb9\u3002 \u8868\u5355\u4e00\u822c\u7528\u6765\u6536\u96c6\u7528\u6237\u7684\u8f93\u5165\u4fe1\u606f \u8868\u5355\u5de5\u4f5c\u539f\u7406\uff1a \u8bbf\u95ee\u8005\u5728\u6d4f\u89c8\u6709\u8868\u5355\u7684\u7f51\u9875\u65f6\uff0c\u53ef\u586b\u5199\u5fc5\u9700\u7684\u4fe1\u606f\uff0c\u7136\u540e\u6309\u67d0\u4e2a\u6309\u94ae\u63d0\u4ea4\u3002\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7Internet\u4f20\u9001\u5230\u670d\u52a1\u5668\u4e0a\u3002 \u670d\u52a1\u5668\u4e0a\u4e13\u95e8\u7684\u7a0b\u5e8f\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u5904\u7406\uff0c\u5982\u679c\u6709\u9519\u8bef\u4f1a\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u8981\u6c42\u7ea0\u6b63\u9519\u8bef\u3002\u5f53\u6570\u636e\u5b8c\u6574\u65e0\u8bef\u540e\uff0c\u670d\u52a1\u5668\u53cd\u9988\u4e00\u4e2a\u8f93\u5165\u5b8c\u6210\u7684\u4fe1\u606f \\ \u7cfb\u5217\u6807\u7b7e <1> \u8868\u5355\u7c7b\u578b type: text \u6587\u672c\u8f93\u5165\u6846 password \u5bc6\u7801\u8f93\u5165\u6846 radio \u5355\u9009\u6846 checkbox \u591a\u9009\u6846 submit \u63d0\u4ea4\u6309\u94ae button \u6309\u94ae(\u9700\u8981\u914d\u5408js\u4f7f\u7528.) button\u548csubmit\u7684\u533a\u522b\uff1f file \u63d0\u4ea4\u6587\u4ef6\uff1aform\u8868\u5355\u9700\u8981\u52a0\u4e0a\u5c5e\u6027enctype=\"multipart/form-data\" \u4e0a\u4f20\u6587\u4ef6\u6ce8\u610f\u4e24\u70b9\uff1a \u8bf7\u6c42\u65b9\u5f0f\u5fc5\u987b\u662fpost enctype=\"multipart/form-data\" <2> \u8868\u5355\u5c5e\u6027 name: \u8868\u5355\u63d0\u4ea4\u9879\u7684\u952e. \u6ce8\u610f\u548cid\u5c5e\u6027\u7684\u533a\u522b\uff1aname\u5c5e\u6027\u662f\u548c\u670d\u52a1\u5668\u901a\u4fe1\u65f6\u4f7f\u7528\u7684\u540d\u79f0\uff1b \u800cid\u5c5e\u6027\u662f\u6d4f\u89c8\u5668\u7aef\u4f7f\u7528\u7684\u540d\u79f0\uff0c\u8be5\u5c5e\u6027\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5ba2\u6237\u7aef\u7f16\u7a0b\uff0c\u800c\u5728css\u548cjavascript\u4e2d\u4f7f\u7528\u7684 value: \u8868\u5355\u63d0\u4ea4\u9879\u7684\u503c.\u5bf9\u4e8e\u4e0d\u540c\u7684\u8f93\u5165\u7c7b\u578b\uff0cvalue \u5c5e\u6027\u7684\u7528\u6cd5\u4e5f\u4e0d\u540c\uff1a type=\"button\", \"reset\", \"submit\" - \u5b9a\u4e49\u6309\u94ae\u4e0a\u7684\u663e\u793a\u7684\u6587\u672c type=\"text\", \"password\", \"hidden\" - \u5b9a\u4e49\u8f93\u5165\u5b57\u6bb5\u7684\u521d\u59cb\u503c type=\"checkbox\", \"radio\", \"image\" - \u5b9a\u4e49\u4e0e\u8f93\u5165\u76f8\u5173\u8054\u7684\u503c checked: radio \u548c checkbox \u9ed8\u8ba4\u88ab\u9009\u4e2d readonly: \u53ea\u8bfb. text \u548c password disabled: \u5bf9\u6240\u7528input\u90fd\u597d\u4f7f. select\u6807\u7b7e <select> \u4e0b\u62c9\u9009\u6807\u7b7e\u5c5e\u6027 name:\u8868\u5355\u63d0\u4ea4\u9879\u7684\u952e. size\uff1a\u9009\u9879\u4e2a\u6570 multiple\uff1amultiple <optgroup>\u4e3a\u6bcf\u4e00\u9879\u52a0\u4e0a\u5206\u7ec4 <option> \u4e0b\u62c9\u9009\u4e2d\u7684\u6bcf\u4e00\u9879 \u5c5e\u6027\uff1a value:\u8868\u5355\u63d0\u4ea4\u9879\u7684\u503c. selected: selected\u4e0b\u62c9\u9009\u9ed8\u8ba4\u88ab\u9009\u4e2d \\ \u591a\u884c\u6587\u672c\u6846 <form id=\"form1\" name=\"form1\" method=\"post\" action=\"\"> <textarea cols=\u201c\u5bbd\u5ea6\u201d rows=\u201c\u9ad8\u5ea6\u201d name=\u201c\u540d\u79f0\u201d> \u9ed8\u8ba4\u5185\u5bb9 </textarea> </form> \\ \u6807\u7b7e \u5b9a\u4e49\uff1a \u6807\u7b7e\u4e3a input \u5143\u7d20\u5b9a\u4e49\u6807\u6ce8\uff08\u6807\u8bb0\uff09\u3002 \u8bf4\u660e\uff1a 1 label \u5143\u7d20\u4e0d\u4f1a\u5411\u7528\u6237\u5448\u73b0\u4efb\u4f55\u7279\u6b8a\u6548\u679c\u3002 2 \u6807\u7b7e\u7684 for \u5c5e\u6027\u503c\u5e94\u5f53\u4e0e\u76f8\u5173\u5143\u7d20\u7684 id \u5c5e\u6027\u503c\u76f8\u540c\u3002 <form method=\"post\" action=\"\"> <label for=\u201cusername\u201d>\u7528\u6237\u540d</label> <input type=\u201ctext\u201d name=\u201cusername\u201d id=\u201cusername\u201d size=\u201c20\u201d /> </form> \\ \u6807\u7b7e <fieldset> <legend>\u767b\u5f55\u5427</legend> <input type=\"text\"> </fieldset> \u4f8b: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <form action=\"\" method=\"post\"> <p>\u59d3\u540d\uff1a<input type=\"text\" name=\"username\" value=\"yaun\"></p> <p>\u5bc6\u7801\uff1a<input type=\"password\" name=\"pwd\" value=\"123\"></p> <p>\u7231\u597d\uff1a<input type=\"checkbox\" name=\"hobby\" value=\"basktball\">\u7bee\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"football\">\u8db3\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"ball\">\u7403 </p> <p> \u6027\u522b\uff1a<input type=\"radio\" name=\"sex\" value=\"1\">\u7537 <input type=\"radio\" name=\"sex\" value=\"0\">\u5973 </p> <p><input type=\"button\" value=\"Submit\"></p> <p><input type=\"file\"></p> <p><input type=\"reset\"></p> <p><input type=\"submit\" value=\"Submit\"></p> </form> </body> </html> <!--{\"username\":\"yuan\",\"pwd\":123,\"hobby\":[],\"sex\":1}--> <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <form action=\"\" method=\"post\"> <p> <label for=\"user\">\u59d3\u540d\uff1a</label> <input type=\"text\" name=\"username\" id=\"user\"> </p> <p> <label for=\"pwd\">\u5bc6\u7801\uff1a</label> <input type=\"password\" name=\"pwd\" id=\"pwd\"> </p> <p>\u7231\u597d\uff1a<input type=\"checkbox\" name=\"hobby\" value=\"basktball\" checked=\"checked\">\u7bee\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"football\">\u8db3\u7403 <input type=\"checkbox\" name=\"hobby\" value=\"ball\">\u7403 </p> <p> \u6027\u522b\uff1a<input type=\"radio\" name=\"sex\" value=\"1\">\u7537 <input type=\"radio\" name=\"sex\" value=\"0\">\u5973 </p> <select name=\"province\" id=\"\" multiple > <option value=\"hebei\">\u6cb3\u5317\u7701</option> <option value=\"henan\">\u6cb3\u5357\u7701</option> <option value=\"hubei\" selected>\u6e56\u5317\u7701</option> <option value=\"guangdong\" selected>\u5e7f\u4e1c\u7701</option> <option value=\"yunnan\">\u4e91\u5357\u7701</option> </select> <p>\u7b80\u4ecb\uff1a <textarea cols=\"23\" rows=\"10\" name=\"person\"> </textarea> </p> <fieldset> <legend>\u767b\u5f55\u5427</legend> <input type=\"text\"> </fieldset> <p><input type=\"submit\" value=\"Submit\"></p> </form> </body> </html> <!--{\"username\":\"yuan\",\"pwd\":123,\"hobby\":[],\"sex\":1,\"province\":\"henan\"}-->","title":"3.6 \u8868\u683c\u6807\u7b7e: \\"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/","text":"BCMSN\uff08Build cisco multi switch network\uff09\u6784\u5efa\u601d\u79d1\u591a\u5c42\u4ea4\u6362\u7f51\u7edc 1. \u6a21\u62df\u5668\u4ecb\u7ecd \u00b6 I\uff1aPT \uff08\u652f\u6301\u90e8\u5206\u4ea4\u6362\u5b9e\u9a8c\u3001\u4f7f\u7528\u76f4\u89c2\u3002\u7f3a\u70b9\uff1aIOS\u547d\u4ee4\u884c\u7279\u6027\u652f\u6301\u6709\u9650\uff09 Ii\uff1adynamics \uff08\u5c0f\u51e1\uff09 Iii\uff1aGNS3 \uff08\u4e5f\u652f\u6301\u90e8\u5206\u4ea4\u6362\u5b9e\u9a8c\uff0c\u901a\u8fc7\u5728\u8def\u7531\u5668\u4e0a\u52a0\u4ea4\u6362\u6a21\u5757\u6765\u5b9e\u73b0\uff0c\u547d\u4ee4\u884c\u3001\u7279\u6027\u652f\u6301\u6709\u9650\uff09 Iv\uff1acisco IOU \uff1acisco IOS over unix/linux \u601d\u79d1iOS\u5728unix/liux\u4e4b\u4e0a\uff0c\u5bf9\u7279\u6027\u548c\u547d\u4ee4\u884c\u652f\u6301\u826f\u597d\u3002\u7f3a\u70b9\uff1a\u64cd\u4f5c\u590d\u6742\u3002 \u5173\u95ed\u8def\u7531\u5668\u7684\u8def\u7531\u529f\u80fd\uff1aPC2(config)#no ip routing \u5982\u4f55\u7ed9\u4ea4\u6362\u673a\u914d\u7f6e\u7ba1\u7406ip\u5730\u5740\uff1a\uff08config\uff09#interface vlan 1 \uff08config-if\uff09#ip address ip\u5730\u5740 \u5b50\u7f51\u63a9\u7801 \uff08config-if\uff09#no shutdown \u5982\u4f55\u7ed9\u4ea4\u6362\u673a\u914d\u7f6e\u9ed8\u8ba4\u7f51\u5173\uff1asw(config)#ip default-gateway \u7f51\u5173\u5730\u5740 2. \u4ea4\u6362\u673a\u57fa\u672c\u4ecb\u7ecd \u00b6 \u4ea4\u6362\u673a\u5de5\u4f5c\u5728osi\u7684\u7b2c\u4e8c\u4e2a\u5c42\u6b21\u6570\u636e\u94fe\u8def\u5c42\uff0c\u901a\u8fc7MAC\u5730\u5740\u5bf9\u6570\u636e\u8fdb\u884c\u8f6c\u53d1\uff0c\u8f6c\u53d1\u6570\u636e\u5355\u4f4d\uff1a\u6570\u636e\u5e27\u3002 3. MAC\u5730\u5740 \u00b6 MAC\u5730\u5740\u753148bit\u6784\u6210\u7684\uff0c6\u5b57\u8282\uff0c\u4f4d\u4e8e\u7f51\u5361\u7684rom\u82af\u7247\u91cc\u8fb9\u3002\u901a\u5e38\u7528\u5341\u516d\u8fdb\u5236\u6570\u8868\u793a\u3002 | 24 bit | 24 bit | |:------:|:------:| \u524d24bit\u4ee3\u8868\u751f\u4ea7\u5382\u5546\uff0c\u8868\u660e\u8be5\u5757\u7f51\u5361\u662f\u7531\u54ea\u4e00\u4e2a\u751f\u4ea7\u5382\u5546\u6240\u751f\u4ea7\u7684\uff1b \u540e24bit\u4ee3\u8868\u4ea7\u54c1\u7684\u7f16\u53f7\uff0c\u6bcf\u4e00\u4e2a\u5382\u5546\u751f\u4ea7\u7684\u6bcf\u4e00\u5757\u7f51\u5361\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5e8f\u5217\u6807\u8bc6\u3002 \u56e0\u6b6448bit\u7684mac\u5730\u5740\u5177\u6709\u5168\u7403\u552f\u4e00\u6027\uff0c\u662f\u4e0d\u53ef\u4ee5\u66f4\u6539\u7684\u3002 4. \u4ee5\u592a\u7f51\u6570\u636e\u5e27\u7684\u5e27\u7ed3\u6784 \u00b6 \u524d\u5bfc\u7b26\uff1a\u4e00\u5b57\u8282\u957f\u5ea6\u7684\u56fa\u5b9a8\u4e2abit\uff0c\u4e3b\u8981\u7528\u4e8e\u533a\u5206\u6570\u636e\u5e27\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u3002 DA\uff1a\u76ee\u6807\u5730\u5740\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u8981\u53bb\u5f80\u7684\u76ee\u7684\u5730\uff1b SA\uff1a\u6e90\u5730\u5740\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u7684\u6765\u6e90\uff1b Length/type\uff1a\u957f\u5ea6\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u7684\u5927\u5c0f\u3002\u7c7b\u578b\uff1a\u4ee3\u8868\u4e0a\u5c42\u6240\u4f7f\u7528\u7684\u534f\u8bae\uff1b DATA\uff1a\u771f\u6b63\u8981\u4f20\u9012\u7684\u5185\u5bb9\uff1b FCS\uff1a\u4e3b\u8981\u8fdb\u884c\u5dee\u9519\u68c0\u6d4b\uff1b 5. \u4ea4\u6362\u673a\u7684\u529f\u80fd \u00b6 I\uff1a\u4fdd\u8bc1\u540c\u4e00\u7f51\u6bb5\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff1b ii\uff1a\u9694\u79bb\u51b2\u7a81\u57df\uff1b\uff08\u5e7f\u64ad\u57df\uff09 iii\uff1a\u5b66\u4e60\u529f\u80fd\uff1b\uff08\u5176\u5b9e\u5c31\u662fmac\u5730\u5740\u8868\u7684\u5f62\u6210\u8fc7\u7a0b\uff0c\u5b66\u4e60\u6570\u636e\u5e27\u4e2d\u7684\u6e90mac\u5730\u5740\uff09 iv\uff1a\u8f6c\u53d1\uff1b 6. \u4ea4\u6362\u673a\u7684\u5de5\u4f5c\u539f\u7406 \u00b6 \u4ea4\u6362\u673amac\u5730\u5740\u8868\u7684\u5f62\u6210\uff1a\u901a\u8fc7\u8bb0\u5f55\u63a5\u6536\u5230\u6570\u636e\u5e27\u7684\u6e90mac\u5730\u5740\u548c\u5bf9\u5e94\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\u3002 I\uff1a\u9996\u5148\u5b66\u4e60\u6570\u636e\u5e27\u4e2d\u6e90mac\u5730\u5740\u5f62\u6210mac\u5730\u5740\u8868\uff1b Ii\uff1a\u6839\u636e\u6570\u636e\u5e27\u4e2d\u7684\u76ee\u6807mac\u5730\u5740\u5bf9\u6570\u636e\u5e27\u8fdb\u884c\u8f6c\u53d1\uff1b Iii\uff1a\u5f53\u4ea4\u6362\u673a\u6536\u5230\u4e00\u4e2a\u672a\u77e5\u76ee\u6807mac\u5730\u5740\uff0c\u5219\u5c06\u8be5\u6570\u636e\u6cdb\u6d2a\u81f3\u9664\u6e90\u7aef\u53e3\u4ee5\u5916\u7684\u6240\u6709\u7aef\u53e3\uff1b Iv\uff1a\u5f53\u4ea4\u6362\u673a\u6536\u5230\u4e00\u4e2a\u5e7f\u64ad\u5e27\u6216\u8005\u7ec4\u64ad\u5e27\uff0c\u5c06\u8be5\u6570\u6cdb\u6d2a\u81f3\u9664\u6e90\u7aef\u53e3\u4ee5\u5916\u7684\u6240\u6709\u7aef\u53e3\uff1b \u4ea4\u6362\u673amac\u5730\u5740\u8868\u7684\u8001\u5316\u65f6\u95f4\uff1a\u9ed8\u8ba4300S\uff0c\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\u3002 7. \u4ea4\u6362\u673a\u7684\u4e09\u79cd\u5185\u90e8\u8f6c\u53d1\u65b9\u5f0f\uff1f\uff08\u4e86\u89e3\uff09 \u00b6 I\uff1a\u76f4\u901a\u8f6c\u53d1 \u8f6c\u53d1\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u5b89\u5168\u6027\u4e0d\u591f Ii\uff1a\u5b58\u50a8\u8f6c\u53d1 \u8f6c\u53d1\u6548\u7387\u4f4e\uff0c\u4f46\u662f\u5b89\u5168\u6027\u9ad8 Iii\uff1a\u788e\u7247\u8f6c\u53d1 \u7279\u70b9\uff1a\u6536\u523064\u5b57\u8282\u540e\u7acb\u523b\u8f6c\u53d1\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u907f\u514d\u51b2\u7a81\u3002 8. cisco\u7f51\u7edc\u90e8\u7f72\u7684\u5c42\u6b21\u6a21\u578b\uff08cisco \u4e09\u5c42\uff09 \u00b6 I\uff1a\u6838\u5fc3\u5c42 \u8d1f\u8d23\u9ad8\u901f\u8f6c\u53d1 ii\uff1a\u5206\u5e03\u5c42 \u4e3b\u8981\u7528\u4e8e\u90e8\u7f72\u7b56\u7565 iii\uff1a\u63a5\u5165\u5c42 \u4e3a\u7528\u6237\u63d0\u4f9b\u7f51\u7edc\u63a5\u5165 9. \u5e38\u89c1\u7684\u4ea4\u6362\u673a\u7c7b\u578b\uff1f \u00b6 1\u30012900\u7cfb\u5217 2950\u30012960 \uff08\u4e3b\u8981\u7528\u4e8e\u90e8\u7f72\u63a5\u5165\u5c42\uff09 2\u30013000\u7cfb\u5217 3550\u30013560\u30013750 \uff08\u4e3b\u8981\u7528\u4e8e\u5206\u5e03\u5c42\uff09 3\u30014000\u7cfb\u5217 4503\u30014506\u30014507 6\u30016000\u7cfb\u5217 6506\u30016509 7\u30017000\u7cfb\u5217 7609\u30017613 8\u3001GSR12000\u7cfb\u5217 \u5168\u7403\u8def\u7531\u4ea4\u6362","title":"01 \u4ea4\u6362\u673a\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#1","text":"I\uff1aPT \uff08\u652f\u6301\u90e8\u5206\u4ea4\u6362\u5b9e\u9a8c\u3001\u4f7f\u7528\u76f4\u89c2\u3002\u7f3a\u70b9\uff1aIOS\u547d\u4ee4\u884c\u7279\u6027\u652f\u6301\u6709\u9650\uff09 Ii\uff1adynamics \uff08\u5c0f\u51e1\uff09 Iii\uff1aGNS3 \uff08\u4e5f\u652f\u6301\u90e8\u5206\u4ea4\u6362\u5b9e\u9a8c\uff0c\u901a\u8fc7\u5728\u8def\u7531\u5668\u4e0a\u52a0\u4ea4\u6362\u6a21\u5757\u6765\u5b9e\u73b0\uff0c\u547d\u4ee4\u884c\u3001\u7279\u6027\u652f\u6301\u6709\u9650\uff09 Iv\uff1acisco IOU \uff1acisco IOS over unix/linux \u601d\u79d1iOS\u5728unix/liux\u4e4b\u4e0a\uff0c\u5bf9\u7279\u6027\u548c\u547d\u4ee4\u884c\u652f\u6301\u826f\u597d\u3002\u7f3a\u70b9\uff1a\u64cd\u4f5c\u590d\u6742\u3002 \u5173\u95ed\u8def\u7531\u5668\u7684\u8def\u7531\u529f\u80fd\uff1aPC2(config)#no ip routing \u5982\u4f55\u7ed9\u4ea4\u6362\u673a\u914d\u7f6e\u7ba1\u7406ip\u5730\u5740\uff1a\uff08config\uff09#interface vlan 1 \uff08config-if\uff09#ip address ip\u5730\u5740 \u5b50\u7f51\u63a9\u7801 \uff08config-if\uff09#no shutdown \u5982\u4f55\u7ed9\u4ea4\u6362\u673a\u914d\u7f6e\u9ed8\u8ba4\u7f51\u5173\uff1asw(config)#ip default-gateway \u7f51\u5173\u5730\u5740","title":"1. \u6a21\u62df\u5668\u4ecb\u7ecd"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#2","text":"\u4ea4\u6362\u673a\u5de5\u4f5c\u5728osi\u7684\u7b2c\u4e8c\u4e2a\u5c42\u6b21\u6570\u636e\u94fe\u8def\u5c42\uff0c\u901a\u8fc7MAC\u5730\u5740\u5bf9\u6570\u636e\u8fdb\u884c\u8f6c\u53d1\uff0c\u8f6c\u53d1\u6570\u636e\u5355\u4f4d\uff1a\u6570\u636e\u5e27\u3002","title":"2. \u4ea4\u6362\u673a\u57fa\u672c\u4ecb\u7ecd"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#3-mac","text":"MAC\u5730\u5740\u753148bit\u6784\u6210\u7684\uff0c6\u5b57\u8282\uff0c\u4f4d\u4e8e\u7f51\u5361\u7684rom\u82af\u7247\u91cc\u8fb9\u3002\u901a\u5e38\u7528\u5341\u516d\u8fdb\u5236\u6570\u8868\u793a\u3002 | 24 bit | 24 bit | |:------:|:------:| \u524d24bit\u4ee3\u8868\u751f\u4ea7\u5382\u5546\uff0c\u8868\u660e\u8be5\u5757\u7f51\u5361\u662f\u7531\u54ea\u4e00\u4e2a\u751f\u4ea7\u5382\u5546\u6240\u751f\u4ea7\u7684\uff1b \u540e24bit\u4ee3\u8868\u4ea7\u54c1\u7684\u7f16\u53f7\uff0c\u6bcf\u4e00\u4e2a\u5382\u5546\u751f\u4ea7\u7684\u6bcf\u4e00\u5757\u7f51\u5361\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u5e8f\u5217\u6807\u8bc6\u3002 \u56e0\u6b6448bit\u7684mac\u5730\u5740\u5177\u6709\u5168\u7403\u552f\u4e00\u6027\uff0c\u662f\u4e0d\u53ef\u4ee5\u66f4\u6539\u7684\u3002","title":"3. MAC\u5730\u5740"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#4","text":"\u524d\u5bfc\u7b26\uff1a\u4e00\u5b57\u8282\u957f\u5ea6\u7684\u56fa\u5b9a8\u4e2abit\uff0c\u4e3b\u8981\u7528\u4e8e\u533a\u5206\u6570\u636e\u5e27\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u3002 DA\uff1a\u76ee\u6807\u5730\u5740\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u8981\u53bb\u5f80\u7684\u76ee\u7684\u5730\uff1b SA\uff1a\u6e90\u5730\u5740\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u7684\u6765\u6e90\uff1b Length/type\uff1a\u957f\u5ea6\uff0c\u4ee3\u8868\u6570\u636e\u5e27\u7684\u5927\u5c0f\u3002\u7c7b\u578b\uff1a\u4ee3\u8868\u4e0a\u5c42\u6240\u4f7f\u7528\u7684\u534f\u8bae\uff1b DATA\uff1a\u771f\u6b63\u8981\u4f20\u9012\u7684\u5185\u5bb9\uff1b FCS\uff1a\u4e3b\u8981\u8fdb\u884c\u5dee\u9519\u68c0\u6d4b\uff1b","title":"4. \u4ee5\u592a\u7f51\u6570\u636e\u5e27\u7684\u5e27\u7ed3\u6784"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#5","text":"I\uff1a\u4fdd\u8bc1\u540c\u4e00\u7f51\u6bb5\u8bbe\u5907\u8fdb\u884c\u901a\u4fe1\uff1b ii\uff1a\u9694\u79bb\u51b2\u7a81\u57df\uff1b\uff08\u5e7f\u64ad\u57df\uff09 iii\uff1a\u5b66\u4e60\u529f\u80fd\uff1b\uff08\u5176\u5b9e\u5c31\u662fmac\u5730\u5740\u8868\u7684\u5f62\u6210\u8fc7\u7a0b\uff0c\u5b66\u4e60\u6570\u636e\u5e27\u4e2d\u7684\u6e90mac\u5730\u5740\uff09 iv\uff1a\u8f6c\u53d1\uff1b","title":"5. \u4ea4\u6362\u673a\u7684\u529f\u80fd"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#6","text":"\u4ea4\u6362\u673amac\u5730\u5740\u8868\u7684\u5f62\u6210\uff1a\u901a\u8fc7\u8bb0\u5f55\u63a5\u6536\u5230\u6570\u636e\u5e27\u7684\u6e90mac\u5730\u5740\u548c\u5bf9\u5e94\u7aef\u53e3\u7684\u6620\u5c04\u5173\u7cfb\u3002 I\uff1a\u9996\u5148\u5b66\u4e60\u6570\u636e\u5e27\u4e2d\u6e90mac\u5730\u5740\u5f62\u6210mac\u5730\u5740\u8868\uff1b Ii\uff1a\u6839\u636e\u6570\u636e\u5e27\u4e2d\u7684\u76ee\u6807mac\u5730\u5740\u5bf9\u6570\u636e\u5e27\u8fdb\u884c\u8f6c\u53d1\uff1b Iii\uff1a\u5f53\u4ea4\u6362\u673a\u6536\u5230\u4e00\u4e2a\u672a\u77e5\u76ee\u6807mac\u5730\u5740\uff0c\u5219\u5c06\u8be5\u6570\u636e\u6cdb\u6d2a\u81f3\u9664\u6e90\u7aef\u53e3\u4ee5\u5916\u7684\u6240\u6709\u7aef\u53e3\uff1b Iv\uff1a\u5f53\u4ea4\u6362\u673a\u6536\u5230\u4e00\u4e2a\u5e7f\u64ad\u5e27\u6216\u8005\u7ec4\u64ad\u5e27\uff0c\u5c06\u8be5\u6570\u6cdb\u6d2a\u81f3\u9664\u6e90\u7aef\u53e3\u4ee5\u5916\u7684\u6240\u6709\u7aef\u53e3\uff1b \u4ea4\u6362\u673amac\u5730\u5740\u8868\u7684\u8001\u5316\u65f6\u95f4\uff1a\u9ed8\u8ba4300S\uff0c\u53ef\u4ee5\u8fdb\u884c\u4fee\u6539\u3002","title":"6. \u4ea4\u6362\u673a\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#7","text":"I\uff1a\u76f4\u901a\u8f6c\u53d1 \u8f6c\u53d1\u6548\u7387\u9ad8\uff0c\u4f46\u662f\u5b89\u5168\u6027\u4e0d\u591f Ii\uff1a\u5b58\u50a8\u8f6c\u53d1 \u8f6c\u53d1\u6548\u7387\u4f4e\uff0c\u4f46\u662f\u5b89\u5168\u6027\u9ad8 Iii\uff1a\u788e\u7247\u8f6c\u53d1 \u7279\u70b9\uff1a\u6536\u523064\u5b57\u8282\u540e\u7acb\u523b\u8f6c\u53d1\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u907f\u514d\u51b2\u7a81\u3002","title":"7. \u4ea4\u6362\u673a\u7684\u4e09\u79cd\u5185\u90e8\u8f6c\u53d1\u65b9\u5f0f\uff1f\uff08\u4e86\u89e3\uff09"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#8-ciscocisco","text":"I\uff1a\u6838\u5fc3\u5c42 \u8d1f\u8d23\u9ad8\u901f\u8f6c\u53d1 ii\uff1a\u5206\u5e03\u5c42 \u4e3b\u8981\u7528\u4e8e\u90e8\u7f72\u7b56\u7565 iii\uff1a\u63a5\u5165\u5c42 \u4e3a\u7528\u6237\u63d0\u4f9b\u7f51\u7edc\u63a5\u5165","title":"8. cisco\u7f51\u7edc\u90e8\u7f72\u7684\u5c42\u6b21\u6a21\u578b\uff08cisco \u4e09\u5c42\uff09"},{"location":"DevOps/11%20Network/01%20working%20principle%20of%20switch/#9","text":"1\u30012900\u7cfb\u5217 2950\u30012960 \uff08\u4e3b\u8981\u7528\u4e8e\u90e8\u7f72\u63a5\u5165\u5c42\uff09 2\u30013000\u7cfb\u5217 3550\u30013560\u30013750 \uff08\u4e3b\u8981\u7528\u4e8e\u5206\u5e03\u5c42\uff09 3\u30014000\u7cfb\u5217 4503\u30014506\u30014507 6\u30016000\u7cfb\u5217 6506\u30016509 7\u30017000\u7cfb\u5217 7609\u30017613 8\u3001GSR12000\u7cfb\u5217 \u5168\u7403\u8def\u7531\u4ea4\u6362","title":"9. \u5e38\u89c1\u7684\u4ea4\u6362\u673a\u7c7b\u578b\uff1f"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/","text":"1. python\u4ecb\u7ecd \u00b6 \u53d1\u5c55\u53f2\u7b49\u7b49.... \u51cf\u5c11\u5f00\u53d1\u6210\u672c 2. python\u4e0e\u5176\u4ed6\u8bed\u8a00\u5bf9\u6bd4 \u00b6 C\u8bed\u8a00\uff1a\u4ee3\u7801\u2192\u673a\u5668\u7801 \u5176\u4ed6\u9ad8\u7ea7\u8bed\u8a00\uff1a\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801 3. python\u79cd\u7c7b \u00b6 cpython:\u5e38\u7528\u7684python\u5c31\u662fcpython\uff0cpython\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801\uff08\u4e00\u884c\u4e00\u884c\u8bfb\u53d6\u6267\u884c\uff09 \u5176\u4ed6python\uff1apython\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801 pypy:python\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801\uff08\u5168\u90e8\u8f6c\u6362\u5b8c\u518d\u6267\u884c\uff09pypy\u6548\u7387\u4f1a\u6bd4cpython\u8981\u9ad8\uff0cpypy\u662fcpython\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5173\u4e8epypy\u53ef\u53c2\u8003\u77e5\u4e4e\u4e00\u7bc7\u6587\u7ae0\uff1a PyPy \u4e3a\u4ec0\u4e48\u4f1a\u6bd4 CPython \u8fd8\u8981\u5feb\uff1f 4. python\u57fa\u7840 \u00b6 4.1 \u89e3\u91ca\u5668\uff1a \u00b6 \u89e3\u91ca\u89c4\u5219 windows\uff1a python\u89e3\u91ca\u5668+\u6587\u4ef6\uff1ac:\\python3.5\\python.exe d:\\s17\\day01\\helloworld.py python\u89e3\u91ca\u5668\u5185\u6267\u884c\uff1ac:\\python3.5\\python.exe linux or mac\uff1a python\u89e3\u91ca\u5668+\u6587\u4ef6\uff1a/usr/bin/python /data/s17/day01/helloworld.py python\u89e3\u91ca\u5668\u5185\u6267\u884c\uff1a/usr/bin/python \u6ce8\uff1a \u5728linux or mac\u7cfb\u7edf\u4e0a\u9ed8\u8ba4\u5b89\u88c5\u7684\u662fpython2.x\u7248\u672c\uff0c\u5982\u5728linux or mac\u7cfb\u7edf\u4f7f\u7528python\uff0c\u9700\u6ce8\u610f\u4e0bpython\u7248\u672c\u3002 \u6f5c\u89c4\u5219 .py \u7ed3\u5c3e\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u91c7\u7528\u5176\u4ed6\u7684\u7ed3\u5c3e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u6015team\u6210\u5458\u6740\u4e86\u4f60\u4e5f\u53ef\u4ee5\u5199\u3002\u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u4e3a\u4e86\u89c4\u8303\uff0cpython\u670d\u52a1\u5668\u4e0a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u770b\u89c1.py\u4e5f\u5c31\u4f1a\u77e5\u9053\u8fd9\u662fpython\u7a0b\u5e8f\uff09 \u7f16\u7801 \u7f16\u7801\u53d1\u5c55\uff1aASCII\u2192Unicode(\u4e07\u56fd\u7801)\u2192UTF-8 \u7f16\u7801\u79cd\u7c7b\u4e0e\u533a\u522b | \u7f16\u7801 | \u652f\u6301\u8bed\u8a00 | \u5b57\u8282\u4f4d\u6570 | \u7f3a\u70b9 | \u5907\u6ce8 | | --- | --- | --- | --- | --- | --- | | ASCII | \u82f1\u8bed | 8\u4f4d | \u53ea\u652f\u6301\u82f1\u6587 | * | | \u4e07\u56fd\u7801 | \u6240\u6709 | \u81f3\u5c1116\u4f4d | \u5b57\u8282\u4f4d\u6570\u8f83\u5927 | * | | UTF-8 | \u6240\u6709 | 8+ | * | \u5bf9\u4e07\u56fd\u7801\u538b\u7f29 | | GBK | \u4e2d\u6587\u3001\u82f1\u6587 | 16\u4f4d | \u652f\u6301\u8bed\u8a00\u5c11 | * | python\u7f16\u7801\u76f8\u5173\uff1a \u6587\u4ef6\u7f16\u7801 \u6587\u4ef6\u7f16\u7801\u521b\u5efa\u6587\u4ef6\u65f6\u5b9a\u4e49\u5373\u53ef\uff0c\u6216\u8005\u5728IDE\u4e2d\u5b9a\u4e49 \u89e3\u91ca\u5668\u7f16\u7801 \u89e3\u91ca\u5668\u7f16\u7801\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u6807\u6ce8\uff0cpython3.x \u7248\u672c\u4e0d\u6807\u6ce8\u4e5f\u662f\u53ef\u4ee5\u7684(\u89e3\u91ca\u5668\u9ed8\u8ba4\u7f16\u7801\u4e3aASCII)\uff0c\u4f46\u4e3a\u4e86\u7edf\u4e00\u89c4\u8303\uff0c\u5728\u6587\u4ef6\u7b2c\u4e8c\u884c\u6807\u6ce8 # -*- coding:utf-8 -*- 5. IDE \u00b6 PyCharm \u4f7f\u7528 a.\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u6307\u5b9a\u4ee3\u7801\u8def\u5f84\u4e0epython\u89e3\u91ca\u5668\u8def\u5f84 b.\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 c.\u521b\u5efa\u4e00\u4e2apython script \u6587\u4ef6 d.\u5728py\u6587\u4ef6\u4e2d\u53f3\u952e\uff0c run xx.py \u6587\u4ef6\u7f16\u7801 \u5728pycharm\u4e2d\u9996\u5148\u8981\u8bbe\u7f6e\u6587\u4ef6\u7f16\u7801\uff0c\u5c06\u6587\u4ef6\u9ed8\u8ba4\u6587\u4ef6\u7f16\u7801\u8bbe\u7f6e\u4e3autf-8 \u6587\u4ef6\u6a21\u677f \u4fee\u6539python scripts\u6587\u4ef6\u6a21\u677f\uff0c\u5c06python\u73af\u5883\u4fe1\u606f\u4e0e\u7f16\u7801\u4fe1\u606f\u5b9a\u4e49\u5728\u6a21\u677f\u4e2d \u6539\u53d8\u5927\u5c0f \u914d\u7f6e\u7f16\u8f91\u5668\u4e2d\u6587\u5b57\u5927\u5c0f\uff0c\u8bbe\u7f6e\u53ef\u4ee5\u7528\u9f20\u6807\u6ed1\u8f6e\u63a7\u5236\u6587\u5b57\u5927\u5c0f 6. \u6ce8\u91ca \u00b6 \u5355\u884c\u6ce8\u91ca: # \u591a\u884c\u6ce8\u91ca: ``` ``` 7. .pyc\u6587\u4ef6 \u00b6 \u5f53\u4e00\u4e2apython\u6587\u4ef6\u5bfc\u5165\u53e6\u4e00\u4e2a\u6a21\u5757\u65f6\u5019\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a .pyc\u6587\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5bfc\u5165\u7684\u90a3\u4e2a\u6587\u4ef6\u7684\u5b57\u8282\u7801\u3002 8. \u53d8\u91cf \u00b6 python\u53d8\u91cf\u89c4\u5219\uff1a \u5b57\u6bcd \u6570\u5b57\uff08\u53d8\u91cf\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff09 \u4e0b\u5212\u7ebf \u4e0d\u80fd\u4ee5python\u5185\u7f6e\u5173\u952e\u5b57\u4e3a\u53d8\u91cf python\u4e2d\u53d8\u91cf\u5efa\u8bae\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u5272\uff08\u9a7c\u5cf0\u5f0f\u4e5f\u4e0d\u4f1a\u62a5\u9519\uff09 9. \u8f93\u5165\u3001\u8f93\u51fa \u00b6 \u8f93\u5165: a = input('\u8bf7\u8f93\u5165xxxx') \u8f93\u51fa: print (a) 10. \u6761\u4ef6\u8bed\u53e5 \u00b6 \u4f8b1\uff1a if \u6761\u4ef6: ... else: ... \u5e94\u7528 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\") \u4f8b2: if \u6761\u4ef6\uff1a ... elif \u6761\u4ef6: ... else: ... \u5e94\u7528\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> sex = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u6027\u522b\uff1a\") if sex == \"\u7537\": print(\"\u50bbx\uff0c\u81ea\u5df1\u6027\u522b\u90fd\u5fd8\u4e86!\") elif sex == \"\u5973\": print(\"...\u4f60\u5728\u60f3\u60f3\uff0c\u4f60\u5fd8\u4e86\u4f60\u5df2\u7ecf\u505a\u4e86\u624b\u672f\u4e86\u5417...\") else: print(\"\u4eba\u5996.......\") 11. \u5faa\u73af\u8bed\u53e5 \u00b6 while while \u6761\u4ef6: continue # \u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af break # \u8df3\u51fa\u6240\u6709\u5faa\u73af \u4f8b\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef') i += 1 12. \u7ec3\u4e60 \u00b6 \u4f7f\u7528while\u5faa\u73af\u8f93\u5165 1 2 3 4 5 6 8 9 10 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while True: if i == 7: i += 1 continue print(i) i += 1 if i == 11: break \u6c421-100\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 101: value = value + i i += 1 print(value) \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5947\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 1: print(i) i += 1 \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5076\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 0: print(i) i += 1 \u6c421-2+3-4+5 ... 99\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 100: if i % 2 == 1: value = value + i i += 1 elif i % 2 == 0: value = value - i i +=1 print(value) \u7528\u6237\u767b\u9646\uff08\u4e09\u6b21\u673a\u4f1a\u91cd\u8bd5\uff09 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\") i += 1 13. \u8fd0\u7b97\u7b26 \u00b6 13.1 \u7b97\u6570\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a+b \u8f93\u51fa\u7ed3\u679c30 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a-b \u8f93\u51fa\u7ed3\u679c-10 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a*b \u8f93\u51fa\u7ed3\u679c200 / \u9664 - x\u4ee5y b/a\u8f93\u51fa\u7ed3\u679c2 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b%a\u8f93\u51fa\u7ed3\u679c0 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 // \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0 13.2 \u6bd4\u8f83\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 \uff08a==b\uff09\u8fd4\u56deFalse != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 \uff08a!=b\uff09\u8fd4\u56deTrue <> \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a<>b)\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7c7b\u4f3c!= > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey \uff08a>b\uff09\u8fd4\u56deFalse < \u5c0f\u4e8e - \u8fd4\u56de b%a\u8f93\u51fa\u7ed3\u679c0 >= \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 <= \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0 13.3 \u8d4b\u503c\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c=a+b \u5c06 a+b\u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3ac += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c+=a \u7b49\u6548\u4e8ec=c+a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c-=a \u7b49\u6548\u4e8ec=c-a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c*=a \u7b49\u6548\u4e8ec=c*a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c/=a \u7b49\u6548\u4e8ec=c/a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c%=a \u7b49\u6548\u4e8ec=c%a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c**=a \u7b49\u6548\u4e8ec=c**a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c//=a \u7b49\u6548\u4e8ec=c//a 13.4 \u903b\u8f91\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b and \u5e03\u5c14\u201c\u4e0e\u201d-\u5982\u679cx\u4e3aFalse\uff0cx and y \u8fd4\u56deFalse\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a abd b) \u8fd4\u56deTrue or \u5e03\u5c14\u201c\u6216\u201d-\u5982\u679cx\u662fTrue\uff0c\u5b83\u8fd4\u56deTrue\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a or b)\u8fd4\u56deTrue not \u5e03\u5c14\u201c\u975e\u201d-\u5982\u679cx\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u5982\u679cx\u4e3aFalse\uff0c\u5b83\u8fd4\u56deTrue\u3002 not(a and b)\u8fd4\u56deFalse 13.5 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u627e\u5230\u503c\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002 x\u5728y\u5e8f\u5217\uff0c\u5982\u679cx\u5728y\u5e8f\u5217\u4e2d\u8fd4\u56deTrue\u3002 not in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u6ca1\u6709\u627e\u5230\u503c\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002 x\u4e0d\u5728y\u5e8f\u5217\u4e2d\uff0c\u5982\u679cx\u4e0d\u5728y\u5e8f\u5217\u4e2d\u8fd4\u56deFalse\u3002 14. python\u6570\u636e\u7c7b\u578b \u00b6 14.1 \u6570\u5b57 \u00b6 int\uff08\u6574\u578b\uff09 \u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807 14.2 \u5e03\u5c14\u503c \u00b6 \u771f\u6216\u5047 1 \u6216 0 14.3 \u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u5e38\u7528\u529f\u80fd: \u79fb\u9664\u7a7a\u767d \u5206\u5272 \u957f\u5ea6 \u7d22\u5f15 \u5207\u7247 14.4 \u5217\u8868 \u00b6 name_list = ['alex', 'seven', 'eric'] \u6216 name_list \uff1d list(['alex', 'seven', 'eric']) \u57fa\u672c\u64cd\u4f5c: \u7d22\u5f15 \u5207\u7247 \u8ffd\u52a0 \u5220\u9664 \u957f\u5ea6 \u5207\u7247 \u5faa\u73af \u5305\u542b 14.5 \u5143\u7956 \u00b6 \u521b\u5efa\u5143\u7956\uff1a ages = (11, 22, 33, 44, 55) \u6216 ages = tuple((11, 22, 33, 44, 55)) \u57fa\u672c\u64cd\u4f5c\uff1a \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b 14.6 \u5b57\u5178\uff08\u65e0\u5e8f\uff09 \u00b6 \u521b\u5efa\u5b57\u5178\uff1a person = {\"name\": \"mr.wu\", 'age': 18} \u6216 person = dict({\"name\": \"mr.wu\", 'age': 18}) \u5e38\u7528\u64cd\u4f5c\uff1a \u7d22\u5f15 \u65b0\u589e \u5220\u9664 \u952e\u3001\u503c\u3001\u952e\u503c\u5bf9 \u5faa\u73af \u957f\u5ea6 14.7 \u5176\u4ed6 \u00b6 14.7.1 for\u5faa\u73af \u00b6 \u7528\u6237\u6309\u7167\u987a\u5e8f\u5faa\u73af\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9\uff0c PS\uff1abreak\u3001continue li = [11,22,33,44] for item in li: print item 14.7.2 enumrate \u00b6 \u4e3a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u6dfb\u52a0\u5e8f\u53f7 li = [11,22,33] for k,v in enumerate(li, 1): print(k,v) 14.7.3 range\u548cxrange \u00b6 \u6307\u5b9a\u8303\u56f4\uff0c\u751f\u6210\u6307\u5b9a\u7684\u6570\u5b57 print range(1, 10) # \u7ed3\u679c\uff1a[1, 2, 3, 4, 5, 6, 7, 8, 9] print range(1, 10, 2) # \u7ed3\u679c\uff1a[1, 3, 5, 7, 9] print range(30, 0, -2) # \u7ed3\u679c\uff1a[30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2]\u3000\u3000 15. \u7ec3\u4e60\u9898 \u00b6 \u5143\u7d20\u5206\u7c7b \u6709\u5982\u4e0b\u503c\u96c6\u5408 v1 = [11,22,33,44,55,66,77,88,99,90]\uff0c \u5c06\u6240\u6709\u5927\u4e8e 66 \u7684\u503c\u4fdd\u5b58\u81f3\u5b57\u5178\u7684\u7b2c\u4e00\u4e2akey\u4e2d\uff0c\u5c06\u5c0f\u4e8e 66 \u7684\u503c\u4fdd\u5b58\u81f3\u7b2c\u4e8c\u4e2akey\u7684\u503c\u4e2d\u3002 \u5373\uff1a {'k1': \u5927\u4e8e66\u7684\u6240\u6709\u503c, 'k2': \u5c0f\u4e8e66\u7684\u6240\u6709\u503c} v2 = {'k1': [],'k2':[] } \u7b54\u6848: #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> v1 = [11,22,33,44,55,66,77,88,99,90] v2 = {'k1':[],'k2':[]} for item in v1: if item > 66: v2['k1'].append(item) elif item < 66: v2['k2'].append(item) print(v2) \u529f\u80fd\u8981\u6c42\uff1a v = 2000 \u8981\u6c42\u7528\u6237\u8f93\u5165\u603b\u8d44\u4ea7\uff0c\u4f8b\u5982\uff1a2000 \u663e\u793a\u5546\u54c1\u5217\u8868\uff0c\u8ba9\u7528\u6237\u6839\u636e\u5e8f\u53f7\u9009\u62e9\u5546\u54c1\uff0c\u52a0\u5165\u8d2d\u7269\u8f66 \u8d2d\u4e70\uff0c\u5982\u679c\u5546\u54c1\u603b\u989d\u5927\u4e8e\u603b\u8d44\u4ea7\uff0c\u63d0\u793a\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\uff0c\u5426\u5219\uff0c\u8d2d\u4e70\u6210\u529f\u3002 goods = [ {\"name\": \"\u7535\u8111\", \"price\": 1999}, {\"name\": \"\u9f20\u6807\", \"price\": 10}, {\"name\": \"\u6e38\u8247\", \"price\": 20}, {\"name\": \"\u7f8e\u5973\", \"price\": 998}, ] num = input('>>>') # 1 num = int(num) goods[num]['price'] \u7528\u6237\u4ea4\u4e92\uff0c\u663e\u793a\u7701\u5e02\u53bf\u4e09\u7ea7\u8054\u52a8\u7684\u9009\u62e9 dic = { \"\u6cb3\u5317\": { \"\u77f3\u5bb6\u5e84\": [\"\u9e7f\u6cc9\", \"\u85c1\u57ce\", \"\u5143\u6c0f\"], \"\u90af\u90f8\": [\"\u6c38\u5e74\", \"\u6d89\u53bf\", \"\u78c1\u53bf\"], } \"\u6cb3\u5357\": { ... } \"\u5c71\u897f\": { ... } } for v in dic.keys(): print(v) inp = input('>>>') dic[inp] 16. \u4f5c\u4e1a \u00b6 \u57fa\u4e8e\u6587\u4ef6\u5b58\u50a8\u7684\u7528\u6237\u767b\u5f55\u7a0b\u5e8f\uff083\u6b21\u767b\u5f55\u5931\u8d25\uff0c\u9501\u5b9a\u7528\u6237\uff09 \u7b54\u6848\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> f1 = open('db','r') data = f1.read() f1.close() # 1.\u683c\u5f0f\u5316\u6570\u636e user_info_list = [] user_str_list = data.split('\\n') for item in user_str_list: temp = item.split('|') v = { 'name': temp[0], 'pwd': temp[1], 'times': int(temp[2]) } user_info_list.append(v) print(user_info_list) # 2.\u5224\u65ad\u7528\u6237\u8f93\u5165 count = 0 while count < 3: username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a') status = 0 for user_login_info in user_info_list: if username == user_login_info['name']: if user_login_info['times'] >= 3: print('\u8f93\u5165\u9519\u8bef3\u6b21\uff0c\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458 ~') exit() else: count = 0 status = 1 pwd = input('\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a') if pwd == user_login_info['pwd']: print('\u7528\u6237 %s \u767b\u5f55\u6210\u529f\uff01' %username) user_login_info['times'] = 0 count = 3 break else: if 0 == 2 - user_login_info['times']: pass else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\u3002') user_login_info['times'] += 1 if user_login_info['times'] >= 3: print('\u8f93\u5165\u9519\u8bef3\u6b21\uff0c\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458 ~') count = 3 break if status == 0: print('\u6ca1\u6709\u8fd9\u4e2a\u7528\u6237') count += 1 # 3.\u683c\u5f0f\u5316\u5e76\u5199\u5165\u6587\u4ef6 new_db = \"\" for user_login_info in user_info_list: user_info_str = user_login_info['name'] + \"|\" + user_login_info['pwd'] + '|' + str(user_login_info['times']) new_db = new_db + user_info_str + '\\n' f2 = open('db','w') f2.write(new_db.strip()) f2.close()","title":"01 \u521d\u8bc6Python\u3001\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#1-python","text":"\u53d1\u5c55\u53f2\u7b49\u7b49.... \u51cf\u5c11\u5f00\u53d1\u6210\u672c","title":"1. python\u4ecb\u7ecd"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#2-python","text":"C\u8bed\u8a00\uff1a\u4ee3\u7801\u2192\u673a\u5668\u7801 \u5176\u4ed6\u9ad8\u7ea7\u8bed\u8a00\uff1a\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801","title":"2. python\u4e0e\u5176\u4ed6\u8bed\u8a00\u5bf9\u6bd4"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#3-python","text":"cpython:\u5e38\u7528\u7684python\u5c31\u662fcpython\uff0cpython\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801\uff08\u4e00\u884c\u4e00\u884c\u8bfb\u53d6\u6267\u884c\uff09 \u5176\u4ed6python\uff1apython\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801 pypy:python\u4ee3\u7801\u2192\u5b57\u8282\u7801\u2192\u673a\u5668\u7801\uff08\u5168\u90e8\u8f6c\u6362\u5b8c\u518d\u6267\u884c\uff09pypy\u6548\u7387\u4f1a\u6bd4cpython\u8981\u9ad8\uff0cpypy\u662fcpython\u7684\u4e00\u4e2a\u5206\u652f\uff0c\u5173\u4e8epypy\u53ef\u53c2\u8003\u77e5\u4e4e\u4e00\u7bc7\u6587\u7ae0\uff1a PyPy \u4e3a\u4ec0\u4e48\u4f1a\u6bd4 CPython \u8fd8\u8981\u5feb\uff1f","title":"3. python\u79cd\u7c7b"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#4-python","text":"","title":"4. python\u57fa\u7840"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#41","text":"\u89e3\u91ca\u89c4\u5219 windows\uff1a python\u89e3\u91ca\u5668+\u6587\u4ef6\uff1ac:\\python3.5\\python.exe d:\\s17\\day01\\helloworld.py python\u89e3\u91ca\u5668\u5185\u6267\u884c\uff1ac:\\python3.5\\python.exe linux or mac\uff1a python\u89e3\u91ca\u5668+\u6587\u4ef6\uff1a/usr/bin/python /data/s17/day01/helloworld.py python\u89e3\u91ca\u5668\u5185\u6267\u884c\uff1a/usr/bin/python \u6ce8\uff1a \u5728linux or mac\u7cfb\u7edf\u4e0a\u9ed8\u8ba4\u5b89\u88c5\u7684\u662fpython2.x\u7248\u672c\uff0c\u5982\u5728linux or mac\u7cfb\u7edf\u4f7f\u7528python\uff0c\u9700\u6ce8\u610f\u4e0bpython\u7248\u672c\u3002 \u6f5c\u89c4\u5219 .py \u7ed3\u5c3e\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u91c7\u7528\u5176\u4ed6\u7684\u7ed3\u5c3e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u4e0d\u6015team\u6210\u5458\u6740\u4e86\u4f60\u4e5f\u53ef\u4ee5\u5199\u3002\u5176\u5b9e\u4e3b\u8981\u8fd8\u662f\u4e3a\u4e86\u89c4\u8303\uff0cpython\u670d\u52a1\u5668\u4e0a\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u770b\u89c1.py\u4e5f\u5c31\u4f1a\u77e5\u9053\u8fd9\u662fpython\u7a0b\u5e8f\uff09 \u7f16\u7801 \u7f16\u7801\u53d1\u5c55\uff1aASCII\u2192Unicode(\u4e07\u56fd\u7801)\u2192UTF-8 \u7f16\u7801\u79cd\u7c7b\u4e0e\u533a\u522b | \u7f16\u7801 | \u652f\u6301\u8bed\u8a00 | \u5b57\u8282\u4f4d\u6570 | \u7f3a\u70b9 | \u5907\u6ce8 | | --- | --- | --- | --- | --- | --- | | ASCII | \u82f1\u8bed | 8\u4f4d | \u53ea\u652f\u6301\u82f1\u6587 | * | | \u4e07\u56fd\u7801 | \u6240\u6709 | \u81f3\u5c1116\u4f4d | \u5b57\u8282\u4f4d\u6570\u8f83\u5927 | * | | UTF-8 | \u6240\u6709 | 8+ | * | \u5bf9\u4e07\u56fd\u7801\u538b\u7f29 | | GBK | \u4e2d\u6587\u3001\u82f1\u6587 | 16\u4f4d | \u652f\u6301\u8bed\u8a00\u5c11 | * | python\u7f16\u7801\u76f8\u5173\uff1a \u6587\u4ef6\u7f16\u7801 \u6587\u4ef6\u7f16\u7801\u521b\u5efa\u6587\u4ef6\u65f6\u5b9a\u4e49\u5373\u53ef\uff0c\u6216\u8005\u5728IDE\u4e2d\u5b9a\u4e49 \u89e3\u91ca\u5668\u7f16\u7801 \u89e3\u91ca\u5668\u7f16\u7801\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u6807\u6ce8\uff0cpython3.x \u7248\u672c\u4e0d\u6807\u6ce8\u4e5f\u662f\u53ef\u4ee5\u7684(\u89e3\u91ca\u5668\u9ed8\u8ba4\u7f16\u7801\u4e3aASCII)\uff0c\u4f46\u4e3a\u4e86\u7edf\u4e00\u89c4\u8303\uff0c\u5728\u6587\u4ef6\u7b2c\u4e8c\u884c\u6807\u6ce8 # -*- coding:utf-8 -*-","title":"4.1  \u89e3\u91ca\u5668\uff1a"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#5-ide","text":"PyCharm \u4f7f\u7528 a.\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff0c\u6307\u5b9a\u4ee3\u7801\u8def\u5f84\u4e0epython\u89e3\u91ca\u5668\u8def\u5f84 b.\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u5939 c.\u521b\u5efa\u4e00\u4e2apython script \u6587\u4ef6 d.\u5728py\u6587\u4ef6\u4e2d\u53f3\u952e\uff0c run xx.py \u6587\u4ef6\u7f16\u7801 \u5728pycharm\u4e2d\u9996\u5148\u8981\u8bbe\u7f6e\u6587\u4ef6\u7f16\u7801\uff0c\u5c06\u6587\u4ef6\u9ed8\u8ba4\u6587\u4ef6\u7f16\u7801\u8bbe\u7f6e\u4e3autf-8 \u6587\u4ef6\u6a21\u677f \u4fee\u6539python scripts\u6587\u4ef6\u6a21\u677f\uff0c\u5c06python\u73af\u5883\u4fe1\u606f\u4e0e\u7f16\u7801\u4fe1\u606f\u5b9a\u4e49\u5728\u6a21\u677f\u4e2d \u6539\u53d8\u5927\u5c0f \u914d\u7f6e\u7f16\u8f91\u5668\u4e2d\u6587\u5b57\u5927\u5c0f\uff0c\u8bbe\u7f6e\u53ef\u4ee5\u7528\u9f20\u6807\u6ed1\u8f6e\u63a7\u5236\u6587\u5b57\u5927\u5c0f","title":"5. IDE"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#6","text":"\u5355\u884c\u6ce8\u91ca: # \u591a\u884c\u6ce8\u91ca: ``` ```","title":"6. \u6ce8\u91ca"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#7-pyc","text":"\u5f53\u4e00\u4e2apython\u6587\u4ef6\u5bfc\u5165\u53e6\u4e00\u4e2a\u6a21\u5757\u65f6\u5019\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a .pyc\u6587\u4ef6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5c31\u662f\u5bfc\u5165\u7684\u90a3\u4e2a\u6587\u4ef6\u7684\u5b57\u8282\u7801\u3002","title":"7. .pyc\u6587\u4ef6"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#8","text":"python\u53d8\u91cf\u89c4\u5219\uff1a \u5b57\u6bcd \u6570\u5b57\uff08\u53d8\u91cf\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\uff09 \u4e0b\u5212\u7ebf \u4e0d\u80fd\u4ee5python\u5185\u7f6e\u5173\u952e\u5b57\u4e3a\u53d8\u91cf python\u4e2d\u53d8\u91cf\u5efa\u8bae\u4f7f\u7528\u4e0b\u5212\u7ebf\u5206\u5272\uff08\u9a7c\u5cf0\u5f0f\u4e5f\u4e0d\u4f1a\u62a5\u9519\uff09","title":"8. \u53d8\u91cf"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#9","text":"\u8f93\u5165: a = input('\u8bf7\u8f93\u5165xxxx') \u8f93\u51fa: print (a)","title":"9. \u8f93\u5165\u3001\u8f93\u51fa"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#10","text":"\u4f8b1\uff1a if \u6761\u4ef6: ... else: ... \u5e94\u7528 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\") \u4f8b2: if \u6761\u4ef6\uff1a ... elif \u6761\u4ef6: ... else: ... \u5e94\u7528\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> sex = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u6027\u522b\uff1a\") if sex == \"\u7537\": print(\"\u50bbx\uff0c\u81ea\u5df1\u6027\u522b\u90fd\u5fd8\u4e86!\") elif sex == \"\u5973\": print(\"...\u4f60\u5728\u60f3\u60f3\uff0c\u4f60\u5fd8\u4e86\u4f60\u5df2\u7ecf\u505a\u4e86\u624b\u672f\u4e86\u5417...\") else: print(\"\u4eba\u5996.......\")","title":"10. \u6761\u4ef6\u8bed\u53e5"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#11","text":"while while \u6761\u4ef6: continue # \u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af break # \u8df3\u51fa\u6240\u6709\u5faa\u73af \u4f8b\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef') i += 1","title":"11. \u5faa\u73af\u8bed\u53e5"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#12","text":"\u4f7f\u7528while\u5faa\u73af\u8f93\u5165 1 2 3 4 5 6 8 9 10 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while True: if i == 7: i += 1 continue print(i) i += 1 if i == 11: break \u6c421-100\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 101: value = value + i i += 1 print(value) \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5947\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 1: print(i) i += 1 \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5076\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 0: print(i) i += 1 \u6c421-2+3-4+5 ... 99\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 100: if i % 2 == 1: value = value + i i += 1 elif i % 2 == 0: value = value - i i +=1 print(value) \u7528\u6237\u767b\u9646\uff08\u4e09\u6b21\u673a\u4f1a\u91cd\u8bd5\uff09 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\") i += 1","title":"12. \u7ec3\u4e60"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#13","text":"","title":"13. \u8fd0\u7b97\u7b26"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#131","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a+b \u8f93\u51fa\u7ed3\u679c30 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a-b \u8f93\u51fa\u7ed3\u679c-10 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a*b \u8f93\u51fa\u7ed3\u679c200 / \u9664 - x\u4ee5y b/a\u8f93\u51fa\u7ed3\u679c2 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b%a\u8f93\u51fa\u7ed3\u679c0 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 // \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0","title":"13.1 \u7b97\u6570\u8fd0\u7b97"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#132","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 \uff08a==b\uff09\u8fd4\u56deFalse != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 \uff08a!=b\uff09\u8fd4\u56deTrue <> \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a<>b)\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7c7b\u4f3c!= > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey \uff08a>b\uff09\u8fd4\u56deFalse < \u5c0f\u4e8e - \u8fd4\u56de b%a\u8f93\u51fa\u7ed3\u679c0 >= \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 <= \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0","title":"13.2 \u6bd4\u8f83\u8fd0\u7b97"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#133","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c=a+b \u5c06 a+b\u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3ac += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c+=a \u7b49\u6548\u4e8ec=c+a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c-=a \u7b49\u6548\u4e8ec=c-a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c*=a \u7b49\u6548\u4e8ec=c*a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c/=a \u7b49\u6548\u4e8ec=c/a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c%=a \u7b49\u6548\u4e8ec=c%a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c**=a \u7b49\u6548\u4e8ec=c**a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c//=a \u7b49\u6548\u4e8ec=c//a","title":"13.3 \u8d4b\u503c\u8fd0\u7b97"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#134","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b and \u5e03\u5c14\u201c\u4e0e\u201d-\u5982\u679cx\u4e3aFalse\uff0cx and y \u8fd4\u56deFalse\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a abd b) \u8fd4\u56deTrue or \u5e03\u5c14\u201c\u6216\u201d-\u5982\u679cx\u662fTrue\uff0c\u5b83\u8fd4\u56deTrue\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a or b)\u8fd4\u56deTrue not \u5e03\u5c14\u201c\u975e\u201d-\u5982\u679cx\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u5982\u679cx\u4e3aFalse\uff0c\u5b83\u8fd4\u56deTrue\u3002 not(a and b)\u8fd4\u56deFalse","title":"13.4 \u903b\u8f91\u8fd0\u7b97"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#135","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u627e\u5230\u503c\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002 x\u5728y\u5e8f\u5217\uff0c\u5982\u679cx\u5728y\u5e8f\u5217\u4e2d\u8fd4\u56deTrue\u3002 not in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u6ca1\u6709\u627e\u5230\u503c\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002 x\u4e0d\u5728y\u5e8f\u5217\u4e2d\uff0c\u5982\u679cx\u4e0d\u5728y\u5e8f\u5217\u4e2d\u8fd4\u56deFalse\u3002","title":"13.5"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#14-python","text":"","title":"14. python\u6570\u636e\u7c7b\u578b"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#141","text":"int\uff08\u6574\u578b\uff09 \u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807","title":"14.1 \u6570\u5b57"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#142","text":"\u771f\u6216\u5047 1 \u6216 0","title":"14.2 \u5e03\u5c14\u503c"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#143","text":"\u5b57\u7b26\u4e32\u5e38\u7528\u529f\u80fd: \u79fb\u9664\u7a7a\u767d \u5206\u5272 \u957f\u5ea6 \u7d22\u5f15 \u5207\u7247","title":"14.3 \u5b57\u7b26\u4e32"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#144","text":"name_list = ['alex', 'seven', 'eric'] \u6216 name_list \uff1d list(['alex', 'seven', 'eric']) \u57fa\u672c\u64cd\u4f5c: \u7d22\u5f15 \u5207\u7247 \u8ffd\u52a0 \u5220\u9664 \u957f\u5ea6 \u5207\u7247 \u5faa\u73af \u5305\u542b","title":"14.4 \u5217\u8868"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#145","text":"\u521b\u5efa\u5143\u7956\uff1a ages = (11, 22, 33, 44, 55) \u6216 ages = tuple((11, 22, 33, 44, 55)) \u57fa\u672c\u64cd\u4f5c\uff1a \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b","title":"14.5 \u5143\u7956"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#146","text":"\u521b\u5efa\u5b57\u5178\uff1a person = {\"name\": \"mr.wu\", 'age': 18} \u6216 person = dict({\"name\": \"mr.wu\", 'age': 18}) \u5e38\u7528\u64cd\u4f5c\uff1a \u7d22\u5f15 \u65b0\u589e \u5220\u9664 \u952e\u3001\u503c\u3001\u952e\u503c\u5bf9 \u5faa\u73af \u957f\u5ea6","title":"14.6 \u5b57\u5178\uff08\u65e0\u5e8f\uff09"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#147","text":"","title":"14.7 \u5176\u4ed6"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#1471-for","text":"\u7528\u6237\u6309\u7167\u987a\u5e8f\u5faa\u73af\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e2d\u7684\u5185\u5bb9\uff0c PS\uff1abreak\u3001continue li = [11,22,33,44] for item in li: print item","title":"14.7.1 for\u5faa\u73af"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#1472-enumrate","text":"\u4e3a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\u6dfb\u52a0\u5e8f\u53f7 li = [11,22,33] for k,v in enumerate(li, 1): print(k,v)","title":"14.7.2 enumrate"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#1473-rangexrange","text":"\u6307\u5b9a\u8303\u56f4\uff0c\u751f\u6210\u6307\u5b9a\u7684\u6570\u5b57 print range(1, 10) # \u7ed3\u679c\uff1a[1, 2, 3, 4, 5, 6, 7, 8, 9] print range(1, 10, 2) # \u7ed3\u679c\uff1a[1, 3, 5, 7, 9] print range(30, 0, -2) # \u7ed3\u679c\uff1a[30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2]","title":"14.7.3 range\u548cxrange"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#15","text":"\u5143\u7d20\u5206\u7c7b \u6709\u5982\u4e0b\u503c\u96c6\u5408 v1 = [11,22,33,44,55,66,77,88,99,90]\uff0c \u5c06\u6240\u6709\u5927\u4e8e 66 \u7684\u503c\u4fdd\u5b58\u81f3\u5b57\u5178\u7684\u7b2c\u4e00\u4e2akey\u4e2d\uff0c\u5c06\u5c0f\u4e8e 66 \u7684\u503c\u4fdd\u5b58\u81f3\u7b2c\u4e8c\u4e2akey\u7684\u503c\u4e2d\u3002 \u5373\uff1a {'k1': \u5927\u4e8e66\u7684\u6240\u6709\u503c, 'k2': \u5c0f\u4e8e66\u7684\u6240\u6709\u503c} v2 = {'k1': [],'k2':[] } \u7b54\u6848: #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> v1 = [11,22,33,44,55,66,77,88,99,90] v2 = {'k1':[],'k2':[]} for item in v1: if item > 66: v2['k1'].append(item) elif item < 66: v2['k2'].append(item) print(v2) \u529f\u80fd\u8981\u6c42\uff1a v = 2000 \u8981\u6c42\u7528\u6237\u8f93\u5165\u603b\u8d44\u4ea7\uff0c\u4f8b\u5982\uff1a2000 \u663e\u793a\u5546\u54c1\u5217\u8868\uff0c\u8ba9\u7528\u6237\u6839\u636e\u5e8f\u53f7\u9009\u62e9\u5546\u54c1\uff0c\u52a0\u5165\u8d2d\u7269\u8f66 \u8d2d\u4e70\uff0c\u5982\u679c\u5546\u54c1\u603b\u989d\u5927\u4e8e\u603b\u8d44\u4ea7\uff0c\u63d0\u793a\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\uff0c\u5426\u5219\uff0c\u8d2d\u4e70\u6210\u529f\u3002 goods = [ {\"name\": \"\u7535\u8111\", \"price\": 1999}, {\"name\": \"\u9f20\u6807\", \"price\": 10}, {\"name\": \"\u6e38\u8247\", \"price\": 20}, {\"name\": \"\u7f8e\u5973\", \"price\": 998}, ] num = input('>>>') # 1 num = int(num) goods[num]['price'] \u7528\u6237\u4ea4\u4e92\uff0c\u663e\u793a\u7701\u5e02\u53bf\u4e09\u7ea7\u8054\u52a8\u7684\u9009\u62e9 dic = { \"\u6cb3\u5317\": { \"\u77f3\u5bb6\u5e84\": [\"\u9e7f\u6cc9\", \"\u85c1\u57ce\", \"\u5143\u6c0f\"], \"\u90af\u90f8\": [\"\u6c38\u5e74\", \"\u6d89\u53bf\", \"\u78c1\u53bf\"], } \"\u6cb3\u5357\": { ... } \"\u5c71\u897f\": { ... } } for v in dic.keys(): print(v) inp = input('>>>') dic[inp]","title":"15. \u7ec3\u4e60\u9898"},{"location":"DevOps/12%20Python/01%20Initial%20understanding%20of%20Python%20and%20basic%20data%20types/#16","text":"\u57fa\u4e8e\u6587\u4ef6\u5b58\u50a8\u7684\u7528\u6237\u767b\u5f55\u7a0b\u5e8f\uff083\u6b21\u767b\u5f55\u5931\u8d25\uff0c\u9501\u5b9a\u7528\u6237\uff09 \u7b54\u6848\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> f1 = open('db','r') data = f1.read() f1.close() # 1.\u683c\u5f0f\u5316\u6570\u636e user_info_list = [] user_str_list = data.split('\\n') for item in user_str_list: temp = item.split('|') v = { 'name': temp[0], 'pwd': temp[1], 'times': int(temp[2]) } user_info_list.append(v) print(user_info_list) # 2.\u5224\u65ad\u7528\u6237\u8f93\u5165 count = 0 while count < 3: username = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a') status = 0 for user_login_info in user_info_list: if username == user_login_info['name']: if user_login_info['times'] >= 3: print('\u8f93\u5165\u9519\u8bef3\u6b21\uff0c\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458 ~') exit() else: count = 0 status = 1 pwd = input('\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a') if pwd == user_login_info['pwd']: print('\u7528\u6237 %s \u767b\u5f55\u6210\u529f\uff01' %username) user_login_info['times'] = 0 count = 3 break else: if 0 == 2 - user_login_info['times']: pass else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff0c\u8bf7\u91cd\u65b0\u8f93\u5165\u3002') user_login_info['times'] += 1 if user_login_info['times'] >= 3: print('\u8f93\u5165\u9519\u8bef3\u6b21\uff0c\u7528\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458 ~') count = 3 break if status == 0: print('\u6ca1\u6709\u8fd9\u4e2a\u7528\u6237') count += 1 # 3.\u683c\u5f0f\u5316\u5e76\u5199\u5165\u6587\u4ef6 new_db = \"\" for user_login_info in user_info_list: user_info_str = user_login_info['name'] + \"|\" + user_login_info['pwd'] + '|' + str(user_login_info['times']) new_db = new_db + user_info_str + '\\n' f2 = open('db','w') f2.write(new_db.strip()) f2.close()","title":"16. \u4f5c\u4e1a"},{"location":"DevOps/12%20Python/02%20Python%20operators/","text":"1 \u7b97\u6570\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a+b \u8f93\u51fa\u7ed3\u679c30 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a-b \u8f93\u51fa\u7ed3\u679c-10 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a*b \u8f93\u51fa\u7ed3\u679c200 / \u9664 - x\u4ee5y b/a\u8f93\u51fa\u7ed3\u679c2 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b%a\u8f93\u51fa\u7ed3\u679c0 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 // \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0 2 \u6bd4\u8f83\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 \uff08a==b\uff09\u8fd4\u56deFalse != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 \uff08a!=b\uff09\u8fd4\u56deTrue <> \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a<>b)\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7c7b\u4f3c!= > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey \uff08a>b\uff09\u8fd4\u56deFalse < \u5c0f\u4e8e - \u8fd4\u56de b%a\u8f93\u51fa\u7ed3\u679c0 >= \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 <= \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0 3 \u8d4b\u503c\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c=a+b \u5c06 a+b\u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3ac += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c+=a \u7b49\u6548\u4e8ec=c+a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c-=a \u7b49\u6548\u4e8ec=c-a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c*=a \u7b49\u6548\u4e8ec=c*a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c/=a \u7b49\u6548\u4e8ec=c/a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c%=a \u7b49\u6548\u4e8ec=c%a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c**=a \u7b49\u6548\u4e8ec=c**a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c//=a \u7b49\u6548\u4e8ec=c//a 4 \u903b\u8f91\u8fd0\u7b97 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b and \u5e03\u5c14\u201c\u4e0e\u201d-\u5982\u679cx\u4e3aFalse\uff0cx and y \u8fd4\u56deFalse\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a abd b) \u8fd4\u56deTrue or \u5e03\u5c14\u201c\u6216\u201d-\u5982\u679cx\u662fTrue\uff0c\u5b83\u8fd4\u56deTrue\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a or b)\u8fd4\u56deTrue not \u5e03\u5c14\u201c\u975e\u201d-\u5982\u679cx\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u5982\u679cx\u4e3aFalse\uff0c\u5b83\u8fd4\u56deTrue\u3002 not(a and b)\u8fd4\u56deFalse","title":"02 Python\u8fd0\u7b97\u7b26"},{"location":"DevOps/12%20Python/02%20Python%20operators/#1","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a+b \u8f93\u51fa\u7ed3\u679c30 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a-b \u8f93\u51fa\u7ed3\u679c-10 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a*b \u8f93\u51fa\u7ed3\u679c200 / \u9664 - x\u4ee5y b/a\u8f93\u51fa\u7ed3\u679c2 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b%a\u8f93\u51fa\u7ed3\u679c0 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 // \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0","title":"1 \u7b97\u6570\u8fd0\u7b97"},{"location":"DevOps/12%20Python/02%20Python%20operators/#2","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 \uff08a==b\uff09\u8fd4\u56deFalse != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 \uff08a!=b\uff09\u8fd4\u56deTrue <> \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a<>b)\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7c7b\u4f3c!= > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey \uff08a>b\uff09\u8fd4\u56deFalse < \u5c0f\u4e8e - \u8fd4\u56de b%a\u8f93\u51fa\u7ed3\u679c0 >= \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b\u4e3a10\u768420\u6b21\u65b9\uff0c\u8f93\u51fa\u7ed3\u679c100000000 <= \u53d6\u6574\u9664 - \u8fd4\u56de\u5546\u7684\u6574\u6570\u90e8\u5206 9//2\u8f93\u51fa\u7ed3\u679c4\uff0c9.0//2.0 \u8f93\u51fa\u7ed3\u679c4.0","title":"2 \u6bd4\u8f83\u8fd0\u7b97"},{"location":"DevOps/12%20Python/02%20Python%20operators/#3","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c=a+b \u5c06 a+b\u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3ac += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c+=a \u7b49\u6548\u4e8ec=c+a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c-=a \u7b49\u6548\u4e8ec=c-a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c*=a \u7b49\u6548\u4e8ec=c*a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c/=a \u7b49\u6548\u4e8ec=c/a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c%=a \u7b49\u6548\u4e8ec=c%a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c**=a \u7b49\u6548\u4e8ec=c**a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c//=a \u7b49\u6548\u4e8ec=c//a","title":"3 \u8d4b\u503c\u8fd0\u7b97"},{"location":"DevOps/12%20Python/02%20Python%20operators/#4","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b and \u5e03\u5c14\u201c\u4e0e\u201d-\u5982\u679cx\u4e3aFalse\uff0cx and y \u8fd4\u56deFalse\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a abd b) \u8fd4\u56deTrue or \u5e03\u5c14\u201c\u6216\u201d-\u5982\u679cx\u662fTrue\uff0c\u5b83\u8fd4\u56deTrue\uff0c\u5426\u5219\u5b83\u8fd4\u56dey\u7684\u8ba1\u7b97\u503c\u3002 (a or b)\u8fd4\u56deTrue not \u5e03\u5c14\u201c\u975e\u201d-\u5982\u679cx\u4e3aTrue\uff0c\u8fd4\u56deFalse\uff0c\u5982\u679cx\u4e3aFalse\uff0c\u5b83\u8fd4\u56deTrue\u3002 not(a and b)\u8fd4\u56deFalse","title":"4 \u903b\u8f91\u8fd0\u7b97"},{"location":"DevOps/12%20Python/03%20conditional%20statement%20and%20circular%20statement/","text":"1 \u6761\u4ef6\u8bed\u53e5 \u00b6 \u4f8b1\uff1a if \u6761\u4ef6: ... else: ... \u5e94\u7528 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\") \u4f8b2: if \u6761\u4ef6\uff1a ... elif \u6761\u4ef6: ... else: ... \u5e94\u7528\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> sex = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u6027\u522b\uff1a\") if sex == \"\u7537\": print(\"\u50bbx\uff0c\u81ea\u5df1\u6027\u522b\u90fd\u5fd8\u4e86!\") elif sex == \"\u5973\": print(\"...\u4f60\u5728\u60f3\u60f3\uff0c\u4f60\u5fd8\u4e86\u4f60\u5df2\u7ecf\u505a\u4e86\u624b\u672f\u4e86\u5417...\") else: print(\"\u4eba\u5996.......\") 2 \u5faa\u73af\u8bed\u53e5 \u00b6 while while \u6761\u4ef6: continue # \u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af break # \u8df3\u51fa\u6240\u6709\u5faa\u73af \u4f8b\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef') i += 1 3 \u7ec3\u4e60 \u00b6 \u4f7f\u7528while\u5faa\u73af\u8f93\u5165 1 2 3 4 5 6 8 9 10 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while True: if i == 7: i += 1 continue print(i) i += 1 if i == 11: break \u6c421-100\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 101: value = value + i i += 1 print(value) \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5947\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 1: print(i) i += 1 \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5076\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 0: print(i) i += 1 \u6c421-2+3-4+5 ... 99\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 100: if i % 2 == 1: value = value + i i += 1 elif i % 2 == 0: value = value - i i +=1 print(value) \u7528\u6237\u767b\u9646\uff08\u4e09\u6b21\u673a\u4f1a\u91cd\u8bd5\uff09 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\") i += 1","title":"03 \u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5"},{"location":"DevOps/12%20Python/03%20conditional%20statement%20and%20circular%20statement/#1","text":"\u4f8b1\uff1a if \u6761\u4ef6: ... else: ... \u5e94\u7528 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\uff01\") \u4f8b2: if \u6761\u4ef6\uff1a ... elif \u6761\u4ef6: ... else: ... \u5e94\u7528\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> sex = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u6027\u522b\uff1a\") if sex == \"\u7537\": print(\"\u50bbx\uff0c\u81ea\u5df1\u6027\u522b\u90fd\u5fd8\u4e86!\") elif sex == \"\u5973\": print(\"...\u4f60\u5728\u60f3\u60f3\uff0c\u4f60\u5fd8\u4e86\u4f60\u5df2\u7ecf\u505a\u4e86\u624b\u672f\u4e86\u5417...\") else: print(\"\u4eba\u5996.......\")","title":"1 \u6761\u4ef6\u8bed\u53e5"},{"location":"DevOps/12%20Python/03%20conditional%20statement%20and%20circular%20statement/#2","text":"while while \u6761\u4ef6: continue # \u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af break # \u8df3\u51fa\u6240\u6709\u5faa\u73af \u4f8b\uff1a #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef') i += 1","title":"2 \u5faa\u73af\u8bed\u53e5"},{"location":"DevOps/12%20Python/03%20conditional%20statement%20and%20circular%20statement/#3","text":"\u4f7f\u7528while\u5faa\u73af\u8f93\u5165 1 2 3 4 5 6 8 9 10 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while True: if i == 7: i += 1 continue print(i) i += 1 if i == 11: break \u6c421-100\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 101: value = value + i i += 1 print(value) \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5947\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 1: print(i) i += 1 \u8f93\u51fa 1-100 \u5185\u7684\u6240\u6709\u5076\u6570 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 1 while i < 101: if i % 2 == 0: print(i) i += 1 \u6c421-2+3-4+5 ... 99\u7684\u6240\u6709\u6570\u7684\u548c #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> value = 0 i = 1 while i < 100: if i % 2 == 1: value = value + i i += 1 elif i % 2 == 0: value = value - i i +=1 print(value) \u7528\u6237\u767b\u9646\uff08\u4e09\u6b21\u673a\u4f1a\u91cd\u8bd5\uff09 #!/usr/bin/env python # -*- coding: utf-8 -*- # Author:Chuncheng.Fan <xmzncc@gmail.com> i = 0 while i < 3: username = input(\"\u8bf7\u8f93\u5165\u7528\u6237\u540d\uff1a\") password = input(\"\u8bf7\u8f93\u5165\u5bc6\u7801\uff1a\") if username == 'fcc' and password == '123': print(\"\u6b22\u8fce\u767b\u9646\uff01\") break else: print(\"\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef\") i += 1","title":"3 \u7ec3\u4e60"},{"location":"DevOps/12%20Python/04%20basic%20data%20type%20string%20%28STR%29/","text":"\u5b57\u7b26\u4e32\u5e38\u7528\u529f\u80fd: \u79fb\u9664\u7a7a\u767d \u5206\u5272 \u957f\u5ea6 \u7d22\u5f15 \u5207\u7247 \u4e0b\u9762\u6765\u8be6\u7ec6\u4ecb\u7ecd\u4e0b ~ capitalize \u5b57\u7b26\u4e32\u9996\u5b57\u6bcd\u5927\u5199 name = 'xmzncc' v = name.capitalize() print(v) casefold \u5c06\u6240\u6709\u5927\u5199\u53d8\u5c0f\u5199\uff08\u652f\u6301\u591a\u79cd\u56fd\u5bb6\u8bed\u8a00\uff09 name = 'Xmzncc' v = name.casefold() print(v) lower \u5c06\u5927\u5199\u53d8\u6210\u5c0f\u5199\uff08\u53ea\u652f\u6301\u82f1\u6587\uff09 name = 'Xmzncc' v = name.lower() print(v) center \u6587\u672c\u5c45\u4e2d \u53c2\u65701: \u8868\u793a\u603b\u957f\u5ea6 \u53c2\u65702\uff1a\u7a7a\u767d\u5904\u586b\u5145\u7684\u5b57\u7b26\uff08\u957f\u5ea6\u4e3a1\uff09 name = 'xmzncc' v = name.center(20,'*') print(v) rjust,ljust \u5de6\u53f3\u586b\u5145\uff0c\u5305\u542b\u81ea\u8eab\u957f\u5ea6 name = 'xmzncc' v = name.rjust(20,'*') print(v) name = 'xmzncc' v = name.ljust(20,'*') print(v) count \u8868\u793a\u4f20\u5165\u4e4b\u5728\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 \u53c2\u65701\uff1a \u8981\u67e5\u627e\u7684\u503c\uff08\u5b50\u5e8f\u5217\uff09 \u53c2\u65702\uff1a \u8d77\u59cb\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09 \u53c2\u65703\uff1a \u7ed3\u675f\u4f4d\u7f6e\uff08\u7d22\u5f15\uff09 name = 'asdasdjasdhaiuyeluqjh' v = name.count('as') print(v) endswith \u662f\u5426\u4ee5xx\u7ed3\u5c3e name = 'xmzncc' v = name.endswith('cc') print(v) startswith \u662f\u5426\u4ee5xx\u5f00\u5934 name = 'xmzncc' v = name.startswith('xm') print(v) index \u627e\u5230\u6307\u5b9a\u5b50\u5e8f\u5217\u7d22\u5f15\u7684\u6240\u5728\u4f4d\u7f6e name = 'xmzncc' v = name.index('c') print(v) find \u627e\u5230\u6307\u5b9a\u5b50\u5e8f\u5217\u7d22\u5f15\u7684\u6240\u5728\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u5728\u8fd4\u56de -1\uff0c\u4e0d\u62a5\u9519 \u4e0eindex \u4e0d\u540c\uff0cindex\u627e\u4e0d\u5230\u62a5\u9519 name = 'xmzncc' v = name.find('f') print(v) format \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 tpl = '\u6211\u662f:{0};\u5e74\u9f84{1};\u6027\u522b{2}' v = tpl.format('fcc',18,'man') print(v) isalnum/isalpha \u662f\u5426\u662f\u6570\u5b57\u3001\u6c49\u5b57 name = 'xmzncc\u8303\u6625\u6210' v = name.isalnum() print(v) v2 = name.isalpha() print(v2) isdecima/isdigit/isnumeric \u5224\u65ad\u662f\u5426\u662f\u6570\u5b57 isdecima \u4ec5\u53ef\u4ee5\u5224\u65ad\u963f\u62c9\u4f2f\u6570\u5b57 isdigit \u53ef\u5224\u65ad\u963f\u62c9\u4f2f\u6570\u5b57\u3001\u2461 isnumeric \u53ef\u5224\u65ad\u963f\u62c9\u4f2f\u6570\u5b57\u3001\u2461\u3001\u4e09 name = '2' v1 = name.isdecimal() print(v1) v2 = name.isdigit() print(v2) v3 = name.isnumeric() print(v3) isidentifier \u662f\u5426\u4e3a\u8868\u793a\u7b26 \u5185\u7f6e\u5173\u952e\u5b57\u9664\u5916 name = 'xmzncc' v = name.isidentifier() print(v) islower \u662f\u5426\u5168\u90e8\u4e3a\u5c0f\u5199 name ='Xmzncc' v = name.islower() print(v) isupper \u662f\u5426\u5168\u90e8\u4e3a\u5927\u5199 name = 'XMZNCC' v = name.isupper() print(v) upper \u5168\u90e8\u53d8\u4e3a\u5927\u5199 name = 'xmzncc' v = name.upper() print(v) lower \u5168\u90e8\u53d8\u4e3a\u5c0f\u5199 name = 'XMZNCC' v = name.lower() print(v) isprintable \u662f\u5426\u5305\u542b\u9690\u542b\u7684 xxx \u5982\u679c\u6709\u8fd4\u56deFalse name = 'asdasdadasd\\tsadasd' v = name.isprintable() print(v) isspace \u662f\u5426\u5168\u90e8\u4e3a\u7a7a\u683c name = ' ' v = name.isspace() print(v) join \u5143\u7d20\u62fc\u63a5\u5b57\u7b26\u4e32 name = 'xmzncc' v = '_'.join(name) print(v) translate \u5bf9\u5e94\u5173\u7cfb\u518d\u7ffb\u8bd1 \u4e5f\u5c31\u662f\u8bf4 \u67e5\u627e\u5230\u5e76\u66ff\u6362 m = str.maketrans('asd','xxx') name = \"123asd890\" v = name.translate(m) print(v) partition \u5206\u5272\u5e76\u4e14\u4fdd\u7559\u5206\u5272\u5143\u7d20 name = 'xmzncc000fcc' v = name.partition('000') print(v) replace \u66ff\u6362 \u53ef\u8bbe\u7f6e\u7d22\u5f15\u4f4d\u7f6e name = 'xmzncc000fcc000asdasd' v = name.replace('000','111',1) print(v) strip \u79fb\u9664\u7a7a\u767d name = 'xmzncc\\n' v = name.strip() print(v) swapcase \u5927\u5c0f\u5199\u76f8\u4e92\u8f6c\u6362 name = 'XMznCC' v = name.swapcase() print(v) zfill \u586b\u5145 0 name = 'xmzncc' v = name.zfill(20) print(v) \u5b57\u7b26\u4e32\u529f\u80fd\u603b\u7ed3\uff1a name.upper() name.lower() name.split() name.find() name.strip() name.startswith() name.format() name.replace() \"xmzncc\".join([\"as\",'bb']) \u989d\u5916\u529f\u80fd\uff1a name[0] name[0:3] name[0:3:2] len(name) for\u5faa\u73af\uff0c\u6bcf\u4e2a\u5143\u7d20\u662f\u5b57\u7b26","title":"04 \u57fa\u672c\u6570\u636e\u7c7b\u578b-\u5b57\u7b26\u4e32\uff08str\uff09"},{"location":"DevOps/12%20Python/05%20basic%20data%20type%20-%20int%2C%20bool/","text":"\u6574\u578b\uff08int\uff09 \u00b6 \u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807 bit_length \u5f53\u524d\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u6700\u5c11\u4f4d\u6570 age = 18 print(age.bit_length()) to_bytes \u83b7\u53d6\u5f53\u524d\u6570\u636e\u7684\u5b57\u8282\u8868\u793a age = 18 v1 = age.to_bytes(10,byteorder='big') v2 = age.to_bytes(10,byteorder='little') print(v1) print(v2) \u5e03\u5c14\u503c \uff08bool\uff09 \u00b6 \u771f\u6216\u5047 1 \u6216 0 False or True","title":"05 \u57fa\u672c\u6570\u636e\u7c7b\u578b-\u6574\u578b\uff08int\uff09\u3001\u5e03\u5c14\u503c\uff08bool\uff09"},{"location":"DevOps/12%20Python/05%20basic%20data%20type%20-%20int%2C%20bool/#int","text":"\u572832\u4f4d\u673a\u5668\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a32\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**31\uff5e2**31-1\uff0c\u5373-2147483648\uff5e2147483647 \u572864\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u6574\u6570\u7684\u4f4d\u6570\u4e3a64\u4f4d\uff0c\u53d6\u503c\u8303\u56f4\u4e3a-2**63\uff5e2**63-1\uff0c\u5373-9223372036854775808\uff5e9223372036854775807 bit_length \u5f53\u524d\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u6700\u5c11\u4f4d\u6570 age = 18 print(age.bit_length()) to_bytes \u83b7\u53d6\u5f53\u524d\u6570\u636e\u7684\u5b57\u8282\u8868\u793a age = 18 v1 = age.to_bytes(10,byteorder='big') v2 = age.to_bytes(10,byteorder='little') print(v1) print(v2)","title":"\u6574\u578b\uff08int\uff09"},{"location":"DevOps/12%20Python/05%20basic%20data%20type%20-%20int%2C%20bool/#bool","text":"\u771f\u6216\u5047 1 \u6216 0 False or True","title":"\u5e03\u5c14\u503c \uff08bool\uff09"},{"location":"DevOps/12%20Python/06%20basic%20data%20type%20list/","text":"\u4f8b\uff1a name_list = ['alex', 'seven', 'eric'] \u6216 name_list \uff1d list(['alex', 'seven', 'eric']) \u57fa\u672c\u64cd\u4f5c: \u7d22\u5f15 \u5207\u7247 \u8ffd\u52a0 \u5220\u9664 \u957f\u5ea6 \u5207\u7247 \u5faa\u73af \u5305\u542b \u8be6\u7ec6\u4ecb\u7ecd \u5982\u4e0b ~ append \u8ffd\u52a0 user_list = ['xmzncc','asd','fcc'] user_list.append('123') print(user_list) clear \u6e05\u7a7a user_list = ['xmzncc','asd','fcc'] user_list.clear() print(user_list) copy \u62f7\u8d1d\uff08\u6d45\u62f7\u8d1d\uff09 user_list = ['xmzncc','asd','fcc'] v = user_list.copy() print(v) count \u8ba1\u6570 user_list = ['xmzncc','asd','fcc','xmzncc'] v = user_list.count('xmzncc') print(v) extend \u6269\u5c55\u539f\u5217\u8868 user_list = ['xmzncc','asd','fcc'] user_list.extend(['qwe']) print(user_list) index \u67e5\u627e\u5143\u7d20\u7d22\u5f15 user_list = ['xmzncc','asd','fcc'] v = user_list.index('xmznc') print(v) pop \u5220\u9664\u7d22\u5f15\uff0c\u83b7\u53d6\u5143\u7d20 user_list = ['xmzncc','asd','fcc'] v = user_list.pop(0) print(v) print(user_list) remove \u5220\u9664\u5143\u7d20 user_list = ['xmzncc','asd','fcc'] v = user_list.remove('xmzncc') print(v) print(user_list) reverse \u7ffb\u8f6c user_list = ['xmzncc','asd','fcc'] user_list.reverse() print(user_list) sort \u6392\u5e8f \u4ece\u5927\u5230\u5c0f nums = [11,12,13,4,6,7,99,101] nums.sort() print(nums) \u4ece\u5c0f\u5230\u5927 nums = [11,12,13,4,6,7,99,101] nums.sort(reverse=True) print(nums)","title":"06 \u57fa\u672c\u6570\u636e\u7c7b\u578b-\u5217\u8868\uff08list\uff09"},{"location":"DevOps/12%20Python/07%20basic%20data%20type%20-%20tuple%2C%20Dict/","text":"\u5143\u7ec4\uff08tuple\uff09 \u00b6 \u5143\u7956\u4e3a\u4e0d\u53ef\u88ab\u4fee\u6539\u7684\u5217\u8868\uff0c\u4e0d\u53ef\u53d8\u7c7b\u578b \u57fa\u672c\u64cd\u4f5c\uff1a \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b \u4ee5\u4e0b\u4e3a\u8be6\u7ec6\u4ecb\u7ecd ~ count \u67e5\u627e\u5143\u7d20\u4e2a\u6570 user_tuple = ('xmzncc','asd','fcc') v = user_tuple.count('xmzncc') print(v) index \u83b7\u53d6\u5143\u7956\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4f4d\u7f6e user_tuple = ('xmzncc','asd','fcc','xmzncc') v = user_tuple.index('xmzncc') print(0) \u5b57\u5178\uff08dict\uff09 \u00b6 get \u6839\u636ekey\u503c\u53bb\u5bf9\u5e94\u7684value \u53d6\u4e0d\u5230\u503c\u8fd4\u56deNone\uff0c\u4e0d\u62a5\u9519 dic = {'k1':'v1','k2':'v2'} v = dic.get('k1') print(v) clear \u6e05\u7a7a dic = {'k1':'v1','k2':'v2'} v = dic.clear() print(dic) copy \u62f7\u8d1d\uff08\u6d45\u62f7\u8d1d\uff09 dic = {'k1':'v1','k2':'v2'} v = dic.copy() print(dic) pop \u5220\u9664\u5e76\u83b7\u53d6\u5bf9\u5e94\u7684value\u503c dic = {'k1':'v1','k2':'v2'} v = dic.pop('k1') print(dic) print(v) popitem \u968f\u673a\u5220\u9664\u952e\u503c\u5bf9\uff0c\u5e76\u83b7\u53d6\u5230\u5220\u9664\u7684\u952e\u503c dic = {'k1':'v1','k2':'v2'} v = dic.popitem() print(v) print(dic) setdefault \u589e\u52a0\uff0c\u5982\u679ckey\u503c\u5b58\u5728\u5219\u4e0d\u64cd\u4f5c dic = {'k1':'v1','k2':'v2'} dic.setdefault('k3','v3') print(dic) update \u6279\u91cf\u589e\u52a0\u6216\u4fee\u6539 dic = {'k1':'v1','k2':'v2'} dic.update({'k3':'v3','k4':'v4'}) print(dic)","title":"07 \u57fa\u672c\u6570\u636e\u7c7b\u578b-\u5143\u7956\uff08tuple\uff09\u3001\u5b57\u5178\uff08dict\uff09"},{"location":"DevOps/12%20Python/07%20basic%20data%20type%20-%20tuple%2C%20Dict/#tuple","text":"\u5143\u7956\u4e3a\u4e0d\u53ef\u88ab\u4fee\u6539\u7684\u5217\u8868\uff0c\u4e0d\u53ef\u53d8\u7c7b\u578b \u57fa\u672c\u64cd\u4f5c\uff1a \u7d22\u5f15 \u5207\u7247 \u5faa\u73af \u957f\u5ea6 \u5305\u542b \u4ee5\u4e0b\u4e3a\u8be6\u7ec6\u4ecb\u7ecd ~ count \u67e5\u627e\u5143\u7d20\u4e2a\u6570 user_tuple = ('xmzncc','asd','fcc') v = user_tuple.count('xmzncc') print(v) index \u83b7\u53d6\u5143\u7956\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4f4d\u7f6e user_tuple = ('xmzncc','asd','fcc','xmzncc') v = user_tuple.index('xmzncc') print(0)","title":"\u5143\u7ec4\uff08tuple\uff09"},{"location":"DevOps/12%20Python/07%20basic%20data%20type%20-%20tuple%2C%20Dict/#dict","text":"get \u6839\u636ekey\u503c\u53bb\u5bf9\u5e94\u7684value \u53d6\u4e0d\u5230\u503c\u8fd4\u56deNone\uff0c\u4e0d\u62a5\u9519 dic = {'k1':'v1','k2':'v2'} v = dic.get('k1') print(v) clear \u6e05\u7a7a dic = {'k1':'v1','k2':'v2'} v = dic.clear() print(dic) copy \u62f7\u8d1d\uff08\u6d45\u62f7\u8d1d\uff09 dic = {'k1':'v1','k2':'v2'} v = dic.copy() print(dic) pop \u5220\u9664\u5e76\u83b7\u53d6\u5bf9\u5e94\u7684value\u503c dic = {'k1':'v1','k2':'v2'} v = dic.pop('k1') print(dic) print(v) popitem \u968f\u673a\u5220\u9664\u952e\u503c\u5bf9\uff0c\u5e76\u83b7\u53d6\u5230\u5220\u9664\u7684\u952e\u503c dic = {'k1':'v1','k2':'v2'} v = dic.popitem() print(v) print(dic) setdefault \u589e\u52a0\uff0c\u5982\u679ckey\u503c\u5b58\u5728\u5219\u4e0d\u64cd\u4f5c dic = {'k1':'v1','k2':'v2'} dic.setdefault('k3','v3') print(dic) update \u6279\u91cf\u589e\u52a0\u6216\u4fee\u6539 dic = {'k1':'v1','k2':'v2'} dic.update({'k3':'v3','k4':'v4'}) print(dic)","title":"\u5b57\u5178\uff08dict\uff09"},{"location":"DevOps/12%20Python/08%20basic%20data%20type%20-%20set/","text":"\u96c6\u5408\uff0c\u4e0d\u53ef\u91cd\u590d\u7684\u5217\u8868\uff0c\u53ef\u53d8\u7c7b\u578b difference s1\u4e2d\u5b58\u5728\uff0cs2\u4e2d\u4e0d\u5b58\u5728 s1 = {'xmzncc','fcc'} s2 = {'shabi','oka'} v = s1.difference(s2) print(v) s2\u4e2d\u5b58\u5728\uff0cs1\u4e2d\u4e0d\u5b58\u5728 s1 = {'xmzncc','fcc','test'} s2 = {'shabi','oka','xmzncc'} v = s2.difference(s1) print(v) difference_update s1\u4e2d\u5b58\u5728\uff0cs2\u4e2d\u4e0d\u5b58\u5728\uff0c\u7136\u540e\u5bf9s1\u6e05\u7a7a\uff0c\u7136\u540e\u5728\u91cd\u65b0\u8d4b\u503c s1 = {'xmzncc','fcc','test'} s2 = {'shabi','oka','xmzncc'} s1.difference_update(s2) print(s1) symmetric_difference s1\u4e0es2bu\u4e0d\u540c\u5904 s1 = {'xmzncc','fcc','test'} s2 = {'shabi','oka','xmzncc'} v = s1.symmetric_difference(s2) print(v) intersection s1\u4e0es2\u4ea4\u96c6\u5904 s1 = {'xmzncc','fcc','test'} s2 = {'shabi','oka','xmzncc'} v = s1.intersection(s2) print(v) union \u5e76\u96c6 s1 = {'xmzncc','fcc','test'} s2 = {'shabi','oka','xmzncc'} v = s1.union(s2) print(v) discard \u79fb\u9664 s1 = {'xmzncc','fcc','test'} s1.discard('xmzncc') print(s1) update \u66f4\u65b0 s1 = {\"shabi\",'eric','tony','\u674e\u6cc9','\u674e\u6cc911'} s1.update({'shabi','123123','fff'}) print(s1)","title":"08 \u57fa\u672c\u6570\u636e\u7c7b\u578b-\u96c6\u5408\uff08set\uff09"},{"location":"DevOps/12%20Python/09%20Python%20functions/","text":"1. \u51fd\u6570\u5bf9\u8c61 \u00b6 \u51fd\u6570\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\uff0c\u5373\u51fd\u6570\u53ef\u4ee5\u5f53\u505a\u6570\u636e\u4f20\u9012 \u53ef\u4ee5\u88ab\u5f15\u7528 \u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u4f20\u9012 \u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u51fd\u6570 \u53ef\u4ee5\u5f53\u505a\u5bb9\u5668\u7c7b\u578b\u7684\u5143\u7d20 def foo(): print('from foo') def index(): print('from index') dic = { 'foo':foo, 'index':index, } while True: choice = input(\">>>>>\").strip() if choice in dic: dic[choice]() 2. \u51fd\u6570\u7684\u5d4c\u5957 \u00b6 2.1 \u51fd\u6570\u7684\u5d4c\u5957\u7684\u8c03\u7528 \u00b6 def max(x,y): return x if x > y else y def max4(a,b,c,d): res1 = max(a,b) res2 = max(res1,c) res3 = max(res2,d) return res3 print(max4(234,456,123,789)) 2.2 \u51fd\u6570\u7684\u5d4c\u5957\u5b9a\u4e49 \u00b6 def f1(): def f2(): def f3(): print(\"from f3\") f3() f2() f1() # \u8fd4\u56de\u503c from f3 \uff0c\u5373 f3\u7684\u503c 3. \u540d\u79f0\u7a7a\u95f4 \u00b6 \u540d\u79f0\u7a7a\u95f4\uff1a\u5b58\u653e\u540d\u5b57\u7684\u5730\u65b9 \u540d\u79f0\u7a7a\u95f4\u5206\u4e3a\u4e09\u79cd 3.1 \u5185\u7f6e\u540d\u79f0\u7a7a\u95f4 \u00b6 \u968f\u7740python\u89e3\u91ca\u5668\u7684\u542f\u52a8\u800c\u4ea7\u751f a = [1,2,3,4,5] print(max(a)) 3.2 \u5168\u5c40\u540d\u79f0\u7a7a\u95f4 \u00b6 \u6587\u4ef6\u7684\u6267\u884c\u4f1a\u4ea7\u751f\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6307\u7684\u662f\u6587\u4ef6\u7ea7\u522b\u5b9a\u4e49\u7684\u540d\u5b57\u90fd\u4f1a\u653e\u5165\u6539\u7a7a\u95f4 x = 1 def fun(): x = 2 print(x) fun() print(x) 3.3 \u5c40\u90e8\u540d\u79f0\u7a7a\u95f4 \u00b6 \u8c03\u7528\u51fd\u6570\u65f6\u4f1a\u4ea7\u751f\u5c40\u90e8\u540d\u79f0\u7a7a\u95f4\uff0c\u53ea\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4e34\u65f6\u7ed1\u5b9a\uff0c\u8c03\u7528\u7ed3\u675f\u89e3\u7ed1\u5b9a x = 10000 def func(): x = 1 def f1(): print(x) def f2(): print(x) f2() f1() func() 4. \u4f5c\u7528\u57df \u00b6 \u4f5c\u7528\u57df\u5373\u8303\u56f4\uff08\u4f5c\u7528\u57df\u5173\u7cfb\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u9636\u6bb5\u5c31\u5df2\u7ecf\u56fa\u5b9a\u7684\uff0c\u4e0e\u51fd\u6570\u7684\u8c03\u7528\u4f4d\u7f6e\u65e0\u5173\uff09 \u67e5\u770b\u4f5c\u7528\u57df\uff1aglobals(),locals() 4. \u95ed\u5305\u51fd\u6570 \u00b6 def f1(): x = 1 y = 2 def f2(): print(x,y) return f2 f = f1() print(f.__closure__[0]) print(f.__closure__[0].cell_contents) 5. \u88c5\u9970\u5668 \u00b6 6. \u8fed\u4ee3\u5668 \u00b6 7. \u751f\u6210\u5668 \u00b6 def foo(): print('\u4e00') yield 1 print('\u4e8c') yield 2 print('\u4e09') yield 3 print('\u56db') g = foo() # for i in g: # print(i) print(next(g)) print(next(g)) print(next(g)) print(next(g)) 8. \u5185\u7f6e\u51fd\u6570 \u00b6 - - Built-in Functions - - abs() dict() help() min() stator() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() enav() int() open() str() bool() exec() isinstance() ord() sun() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() _ import_ () complex() hasattr() max() round() - delattr() hash() memoryview() set() -","title":"09 Python\u51fd\u6570"},{"location":"DevOps/12%20Python/09%20Python%20functions/#1","text":"\u51fd\u6570\u662f\u7b2c\u4e00\u7c7b\u5bf9\u8c61\uff0c\u5373\u51fd\u6570\u53ef\u4ee5\u5f53\u505a\u6570\u636e\u4f20\u9012 \u53ef\u4ee5\u88ab\u5f15\u7528 \u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u4f20\u9012 \u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u51fd\u6570 \u53ef\u4ee5\u5f53\u505a\u5bb9\u5668\u7c7b\u578b\u7684\u5143\u7d20 def foo(): print('from foo') def index(): print('from index') dic = { 'foo':foo, 'index':index, } while True: choice = input(\">>>>>\").strip() if choice in dic: dic[choice]()","title":"1. \u51fd\u6570\u5bf9\u8c61"},{"location":"DevOps/12%20Python/09%20Python%20functions/#2","text":"","title":"2. \u51fd\u6570\u7684\u5d4c\u5957"},{"location":"DevOps/12%20Python/09%20Python%20functions/#21","text":"def max(x,y): return x if x > y else y def max4(a,b,c,d): res1 = max(a,b) res2 = max(res1,c) res3 = max(res2,d) return res3 print(max4(234,456,123,789))","title":"2.1 \u51fd\u6570\u7684\u5d4c\u5957\u7684\u8c03\u7528"},{"location":"DevOps/12%20Python/09%20Python%20functions/#22","text":"def f1(): def f2(): def f3(): print(\"from f3\") f3() f2() f1() # \u8fd4\u56de\u503c from f3 \uff0c\u5373 f3\u7684\u503c","title":"2.2 \u51fd\u6570\u7684\u5d4c\u5957\u5b9a\u4e49"},{"location":"DevOps/12%20Python/09%20Python%20functions/#3","text":"\u540d\u79f0\u7a7a\u95f4\uff1a\u5b58\u653e\u540d\u5b57\u7684\u5730\u65b9 \u540d\u79f0\u7a7a\u95f4\u5206\u4e3a\u4e09\u79cd","title":"3. \u540d\u79f0\u7a7a\u95f4"},{"location":"DevOps/12%20Python/09%20Python%20functions/#31","text":"\u968f\u7740python\u89e3\u91ca\u5668\u7684\u542f\u52a8\u800c\u4ea7\u751f a = [1,2,3,4,5] print(max(a))","title":"3.1 \u5185\u7f6e\u540d\u79f0\u7a7a\u95f4"},{"location":"DevOps/12%20Python/09%20Python%20functions/#32","text":"\u6587\u4ef6\u7684\u6267\u884c\u4f1a\u4ea7\u751f\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6307\u7684\u662f\u6587\u4ef6\u7ea7\u522b\u5b9a\u4e49\u7684\u540d\u5b57\u90fd\u4f1a\u653e\u5165\u6539\u7a7a\u95f4 x = 1 def fun(): x = 2 print(x) fun() print(x)","title":"3.2 \u5168\u5c40\u540d\u79f0\u7a7a\u95f4"},{"location":"DevOps/12%20Python/09%20Python%20functions/#33","text":"\u8c03\u7528\u51fd\u6570\u65f6\u4f1a\u4ea7\u751f\u5c40\u90e8\u540d\u79f0\u7a7a\u95f4\uff0c\u53ea\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4e34\u65f6\u7ed1\u5b9a\uff0c\u8c03\u7528\u7ed3\u675f\u89e3\u7ed1\u5b9a x = 10000 def func(): x = 1 def f1(): print(x) def f2(): print(x) f2() f1() func()","title":"3.3 \u5c40\u90e8\u540d\u79f0\u7a7a\u95f4"},{"location":"DevOps/12%20Python/09%20Python%20functions/#4","text":"\u4f5c\u7528\u57df\u5373\u8303\u56f4\uff08\u4f5c\u7528\u57df\u5173\u7cfb\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u9636\u6bb5\u5c31\u5df2\u7ecf\u56fa\u5b9a\u7684\uff0c\u4e0e\u51fd\u6570\u7684\u8c03\u7528\u4f4d\u7f6e\u65e0\u5173\uff09 \u67e5\u770b\u4f5c\u7528\u57df\uff1aglobals(),locals()","title":"4. \u4f5c\u7528\u57df"},{"location":"DevOps/12%20Python/09%20Python%20functions/#4_1","text":"def f1(): x = 1 y = 2 def f2(): print(x,y) return f2 f = f1() print(f.__closure__[0]) print(f.__closure__[0].cell_contents)","title":"4. \u95ed\u5305\u51fd\u6570"},{"location":"DevOps/12%20Python/09%20Python%20functions/#5","text":"","title":"5. \u88c5\u9970\u5668"},{"location":"DevOps/12%20Python/09%20Python%20functions/#6","text":"","title":"6. \u8fed\u4ee3\u5668"},{"location":"DevOps/12%20Python/09%20Python%20functions/#7","text":"def foo(): print('\u4e00') yield 1 print('\u4e8c') yield 2 print('\u4e09') yield 3 print('\u56db') g = foo() # for i in g: # print(i) print(next(g)) print(next(g)) print(next(g)) print(next(g))","title":"7. \u751f\u6210\u5668"},{"location":"DevOps/12%20Python/09%20Python%20functions/#8","text":"- - Built-in Functions - - abs() dict() help() min() stator() all() dir() hex() next() slice() any() divmod() id() object() sorted() ascii() enumerate() input() oct() staticmethod() bin() enav() int() open() str() bool() exec() isinstance() ord() sun() bytearray() filter() issubclass() pow() super() bytes() float() iter() print() tuple() callable() format() len() property() type() chr() frozenset() list() range() vars() classmethod() getattr() locals() repr() zip() compile() globals() map() reversed() _ import_ () complex() hasattr() max() round() - delattr() hash() memoryview() set() -","title":"8. \u5185\u7f6e\u51fd\u6570"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/","text":"\u4e00\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7531\u6765 \u00b6 1.\u7b2c\u4e00\u9636\u6bb5\uff1a\u9762\u5411\u673a\u5668\uff0c1940\u5e74\u4ee5\u524d \u00b6 \u6700\u65e9\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u90fd\u662f\u91c7\u7528\u673a\u5668\u8bed\u8a00\u6765\u7f16\u5199\u7684,\u76f4\u63a5\u4f7f\u7528\u4e8c\u8fdb\u5236\u7801\u6765\u8868\u793a\u673a\u5668\u80fd\u591f\u8bc6\u522b\u548c\u6267\u884c\u7684\u6307\u4ee4\u548c\u6570\u636e\u3002 \u7b80\u5355\u6765\u8bf4,\u5c31\u662f\u76f4\u63a5\u7f16\u5199 0 \u548c 1 \u7684\u5e8f\u5217\u6765\u4ee3\u8868\u7a0b\u5e8f\u8bed\u8a00\u3002\u4f8b\u5982:\u4f7f\u7528 0000 \u4ee3\u8868 \u52a0\u8f7d(LOAD),0001 \u4ee3\u8868 \u5b58\u50a8(STORE)\u7b49\u3002 \u4f18\u70b9\uff1a\u673a\u5668\u8bed\u8a00\u7531\u673a\u5668\u76f4\u63a5\u6267\u884c,\u901f\u5ea6\u5feb\uff1b \u7f3a\u70b9\uff1a\u5199\u6bd4\u8f83\u56f0\u96be\uff0c\u4fee\u6539\u4e5f\u9ebb\u70e6\uff0c\u8fd9\u6837\u76f4\u63a5\u5bfc\u81f4\u7a0b\u5e8f\u7f16\u5199\u6548\u7387\u5341\u5206\u4f4e\u4e0b,\u7f16\u5199\u7a0b\u5e8f\u82b1\u8d39\u7684\u65f6\u95f4\u5f80\u5f80\u662f\u5b9e\u9645\u8fd0\u884c\u65f6\u95f4\u7684\u51e0\u5341\u500d\u6216\u51e0\u767e\u500d\u3002 \u7531\u4e8e\u673a\u5668\u8bed\u8a00\u5b9e\u5728\u662f\u592a\u96be\u7f16\u5199\u4e86,\u4e8e\u662f\u5c31\u53d1\u5c55\u51fa\u4e86\u6c47\u7f16\u8bed\u8a00\u3002 \u6c47\u7f16\u8bed\u8a00\u4ea6\u79f0\u7b26\u53f7\u8bed\u8a00,\u7528\u52a9\u8bb0\u7b26\u4ee3\u66ff\u673a\u5668 \u6307\u4ee4\u7684\u64cd\u4f5c\u7801,\u7528\u5730\u5740\u7b26\u53f7(Symbol)\u6216\u6807\u53f7(Label)\u4ee3\u66ff\u6307\u4ee4\u6216\u64cd\u4f5c\u6570\u7684\u5730\u5740\u3002 \u6c47\u7f16\u8bed\u8a00\u7531\u4e8e\u662f\u91c7\u7528\u4e86\u52a9\u8bb0\u7b26\u53f7\u6765\u7f16\u5199\u7a0b\u5e8f,\u6bd4\u7528\u673a\u5668\u8bed\u8a00\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7f16\u7a0b\u8981\u65b9\u4fbf\u4e9b,\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7b80\u5316\u4e86\u7f16\u7a0b\u8fc7\u7a0b\u3002\u4f8b\u5982 \u4f7f\u7528 LOAD \u6765\u4ee3\u66ff 0000,\u4f7f\u7528 STORE \u6765\u4ee3\u66ff 0001\u3002 \u5373\u4f7f\u6c47\u7f16\u8bed\u8a00\u76f8\u6bd4\u673a\u5668\u8bed\u8a00\u63d0\u5347\u4e86\u53ef\u8bfb\u6027,\u4f46\u5176\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u79cd\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00,\u7f16\u5199\u540c\u6837\u56f0\u96be,\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519\u3002 2.\u7b2c\u4e8c\u9636\u6bb5\uff1a\u9762\u5411\u8fc7\u7a0b \u00b6 \u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u901a\u5e38\u60c5\u51b5\u4e0b\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u201c\u4f4e\u7ea7\u8bed\u8a00\u201d,\u4e3a\u4e86\u89e3\u51b3\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u5b58\u5728\u7684\u95ee\u9898,\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u524d\u8f88\u4eec\u53c8\u521b\u5efa\u4e86\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u3002 \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u201c\u9ad8\u7ea7\u8bed\u8a00\u201d,\u76f8\u6bd4\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u6765\u8bf4,\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u5df2\u7ecf\u4e0d\u518d\u5173\u6ce8\u673a\u5668\u672c\u8eab\u7684\u64cd\u4f5c\u6307\u4ee4\u3001\u5b58\u50a8\u7b49\u65b9\u9762,\u800c\u662f\u5173\u6ce8\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u7684\u89e3\u51b3\u5177\u4f53\u7684\u95ee\u9898,\u5373:\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b,\u8fd9\u5e94\u8be5\u4e5f\u662f\u9762\u5411\u8fc7\u7a0b\u8bf4\u6cd5\u7684\u6765\u7531\u3002 \u76f8\u6bd4\u9762\u5411\u673a\u5668\u7684\u601d\u60f3\u6765\u8bf4,\u9762\u5411\u8fc7\u7a0b\u662f\u4e00\u6b21\u601d\u60f3\u4e0a\u7684\u98de\u8dc3,\u5c06\u7a0b\u5e8f\u5458\u4ece\u590d\u6742\u7684\u673a\u5668\u64cd\u4f5c\u548c\u8fd0\u884c\u7684\u7ec6\u8282\u4e2d\u89e3\u653e\u51fa\u6765,\u8f6c\u800c\u5173\u6ce8\u5177\u4f53\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898; \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u4e5f\u4e0d\u518d\u9700\u8981\u548c\u5177\u4f53\u7684\u673a\u5668\u7ed1\u5b9a,\u4ece\u800c\u5177\u5907\u4e86\u79fb\u690d\u6027\u548c\u901a\u7528\u6027; \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u672c\u8eab\u4e5f\u66f4\u52a0\u5bb9\u6613\u7f16\u5199\u548c\u7ef4\u62a4\u3002 \u8fd9\u4e9b\u56e0\u7d20\u53e0\u52a0\u8d77\u6765,\u5927\u5927\u51cf\u8f7b\u4e86\u7a0b\u5e8f\u5458\u7684\u8d1f\u62c5, \u63d0\u5347\u4e86\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u6548\u7387,\u4ece\u800c\u4fc3\u8fdb\u4e86\u8f6f\u4ef6\u884c\u4e1a\u7684\u5feb\u901f\u53d1\u5c55\u3002 \u5178\u578b\u7684\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u6709:COBOL\u3001FORTRAN\u3001BASIC\u3001C \u8bed\u8a00\u7b49\u3002 3.\u7b2c\u4e09\u9636\u6bb5\uff1a\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1 \u00b6 \u6839\u672c\u539f\u56e0\u5c31\u662f\u4e00\u4e9b\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\u4e2d\u7684goto\u8bed\u53e5\u5bfc\u81f4\u7684\u9762\u6761\u5f0f\u4ee3\u7801\uff0c\u6781\u5927\u7684\u9650\u5236\u4e86\u7a0b\u5e8f\u7684\u89c4\u6a21\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u82f1\u8bed\uff1aStructured programming\uff09\uff0c\u4e00\u79cd\u7f16\u7a0b\u8303\u578b\u3002\u5b83\u91c7\u7528\u5b50\u7a0b\u5e8f\uff08\u51fd\u6570\u5c31\u662f\u4e00\u79cd\u5b50\u7a0b\u5e8f\uff09\u3001\u4ee3\u7801\u533a\u5757\u3001for\u5faa\u73af\u4ee5\u53cawhile\u5faa\u73af\u7b49\u7ed3\u6784\uff0c\u6765\u66ff\u6362\u4f20\u7edf\u7684goto\u3002\u5e0c\u671b\u501f\u6b64\u6765\u6539\u5584\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u660e\u6670\u6027\u3001\u8d28\u91cf\u4ee5\u53ca\u5f00\u53d1\u65f6\u95f4\uff0c\u5e76\u4e14\u907f\u514d\u5199\u51fa\u9762\u6761\u5f0f\u4ee3\u7801\u3002 \u968f\u7740\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u98de\u901f\u53d1\u5c55,\u4ee5\u53ca\u5e94\u7528\u590d\u6742\u5ea6\u8d8a\u6765\u8d8a\u9ad8,\u8f6f\u4ef6\u89c4\u6a21\u8d8a\u6765\u8d8a\u5927,\u539f\u6709\u7684\u7a0b\u5e8f\u5f00\u53d1\u65b9\u5f0f\u5df2\u7ecf\u8d8a\u6765\u8d8a\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u4e86\u30021960 \u5e74\u4ee3\u4e2d\u671f\u5f00\u59cb\u7206\u53d1\u4e86\u7b2c\u4e00\u6b21\u8f6f\u4ef6\u5371\u673a,\u5178\u578b\u8868\u73b0\u6709\u8f6f\u4ef6\u8d28\u91cf\u4f4e\u4e0b\u3001\u9879\u76ee\u65e0\u6cd5\u5982\u671f\u5b8c\u6210\u3001\u9879\u76ee\u4e25\u91cd\u8d85\u652f\u7b49,\u56e0\u4e3a\u8f6f\u4ef6\u800c\u5bfc\u81f4\u7684\u91cd\u5927\u4e8b\u6545\u65f6\u6709\u53d1\u751f\u3002\u4f8b\u5982 1963 \u5e74\u7f8e\u56fd ( http://en.wikipedia.org/wiki/Mariner_1 ) \u7684\u6c34\u624b\u4e00\u53f7\u706b\u7bad\u53d1\u5c04\u5931\u8d25\u4e8b\u6545,\u5c31\u662f\u56e0\u4e3a\u4e00\u884c FORTRAN \u4ee3\u7801 \u9519\u8bef\u5bfc\u81f4\u7684\u3002 \u8f6f\u4ef6\u5371\u673a\u6700\u5178\u578b\u7684\u4f8b\u5b50\u83ab\u8fc7\u4e8e IBM \u7684 System/360 \u7684\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u3002\u4f5b\u745e\u5fb7\u00b7\u5e03\u9c81\u514b\u65af(Frederick P. Brooks, Jr.)\u4f5c\u4e3a\u9879\u76ee\u4e3b\u7ba1,\u7387\u9886 2000 \u591a\u4e2a\u7a0b\u5e8f\u5458\u591c\u4ee5\u7ee7\u65e5\u7684\u5de5\u4f5c,\u5171\u8ba1\u82b1\u8d39\u4e86 5000 \u4eba\u4e00\u5e74\u7684\u5de5\u4f5c\u91cf,\u5199\u51fa\u5c06\u8fd1 100 \u4e07\u884c\u7684\u6e90\u7801,\u603b\u5171\u6295\u5165 5 \u4ebf\u7f8e\u5143,\u662f\u7f8e\u56fd\u7684\u201c\u66fc\u54c8\u987f\u201d\u539f\u5b50\u5f39\u8ba1\u5212\u6295\u5165\u7684 \u00bc\u3002\u5c3d\u7ba1\u6295\u5165\u5982\u6b64\u5de8\u5927, \u4f46\u9879\u76ee\u8fdb\u5ea6\u5374\u4e00\u518d\u5ef6\u8fdf,\u8f6f\u4ef6\u8d28\u91cf\u4e5f\u5f97\u4e0d\u5230\u4fdd\u969c\u3002\u5e03\u9c81\u514b\u65af\u540e\u6765\u57fa\u4e8e\u8fd9\u4e2a\u9879\u76ee\u7ecf\u9a8c\u800c\u603b\u7ed3\u7684\u300a\u4eba\u6708\u795e\u8bdd\u300b \u4e00\u4e66,\u6210\u4e86\u53f2\u4e0a\u6700\u7545\u9500\u7684\u8f6f\u4ef6\u5de5\u7a0b\u4e66\u7c4d\u3002 \u4e3a\u4e86\u89e3\u51b3\u95ee\u9898,\u5728 1968\u30011969 \u5e74\u8fde\u7eed\u53ec\u5f00\u4e24\u6b21\u8457\u540d\u7684 NATO \u4f1a\u8bae,\u4f1a\u8bae\u6b63\u5f0f\u521b\u9020\u4e86\u201c\u8f6f\u4ef6\u5371\u673a\u201d\u4e00\u8bcd, \u5e76\u63d0\u51fa\u4e86\u9488\u5bf9\u6027\u7684\u89e3\u51b3\u65b9\u6cd5\u201c\u8f6f\u4ef6\u5de5\u7a0b\u201d\u3002\u867d\u7136\u201c\u8f6f\u4ef6\u5de5\u7a0b\u201d\u63d0\u51fa\u4e4b\u540e\u4e5f\u66fe\u88ab\u89c6\u4e3a\u8f6f\u4ef6\u9886\u57df\u7684\u94f6\u5f39,\u4f46\u540e\u6765\u4e8b\u5b9e\u8bc1\u660e,\u8f6f\u4ef6\u5de5\u7a0b\u540c\u6837\u65e0\u6cd5\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u3002 \u5dee\u4e0d\u591a\u540c\u4e00\u65f6\u95f4,\u201c\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u201d\u4f5c\u4e3a\u53e6\u5916\u4e00\u79cd\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6848\u88ab\u63d0\u51fa\u6765\u4e86\u3002 Edsger Dijkstra \u4e8e 1968 \u53d1\u8868\u4e86\u8457\u540d\u7684\u300aGOTO \u6709\u5bb3\u8bba\u300b\u7684\u8bba\u6587,\u5f15\u8d77\u4e86\u957f\u8fbe\u6570\u5e74\u7684\u8bba\u6218,\u5e76\u7531\u6b64\u4ea7\u751f\u4e86\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9 \u6cd5\u3002\u540c\u65f6,\u7b2c\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u7a0b\u5e8f\u8bed\u8a00 Pascal \u4e5f\u5728\u6b64\u65f6\u8bde\u751f,\u5e76\u8fc5\u901f\u6d41\u884c\u8d77\u6765\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e3b\u8981\u7279\u70b9\u662f\u629b\u5f03 goto \u8bed\u53e5,\u91c7\u53d6\u201c\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u7ec6\u5316\u3001\u6a21\u5757\u5316\u201d\u7684\u6307\u5bfc\u601d\u60f3\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u79cd\u9762\u5411\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u601d\u60f3,\u4f46\u901a\u8fc7\u201c\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u7ec6\u5316\u3001\u6a21\u5757\u5316\u201d\u7684\u65b9\u6cd5,\u5c06\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6\u63a7\u5236\u5728\u4e00\u5b9a\u8303\u56f4\u5185,\u4ece\u800c\u4ece\u6574\u4f53\u4e0a\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u590d\u6742\u5ea6\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u65b9\u6cd5\u6210\u4e3a\u4e86 1970 \u5e74 \u4ee3\u8f6f\u4ef6\u5f00\u53d1\u7684\u6f6e\u6d41\u3002 \u79d1\u5b66\u7814\u7a76\u8bc1\u660e,\u4eba\u8111\u5b58\u5728\u4eba\u7c7b\u77ed\u671f\u8bb0\u5fc6\u4e00\u822c\u4e00\u6b21\u53ea\u80fd\u8bb0\u4f4f 5-9 \u4e2a\u4e8b\u7269,\u8fd9\u5c31\u662f\u8457\u540d\u7684 7+- 2 \u539f\u7406\u3002\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u662f\u9762\u5411\u8fc7\u7a0b\u8bbe\u8ba1\u601d\u60f3\u7684\u4e00\u4e2a\u6539\u8fdb,\u4f7f\u5f97\u8f6f\u4ef6\u5f00\u53d1\u66f4\u52a0\u7b26\u5408\u4eba\u7c7b\u601d\u7ef4\u7684 7+-2 \u7279\u70b9\u3002 4.\u7b2c\u56db\u9636\u6bb5\uff1a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1 \u00b6 \u7ed3\u6784\u5316\u7f16\u7a0b\u7684\u98ce\u9761\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u8f6f\u4ef6\u5371\u673a,\u7136\u800c\u597d\u666f\u4e0d\u957f,\u968f\u7740\u786c\u4ef6\u7684\u5feb\u901f\u53d1\u5c55,\u4e1a\u52a1\u9700\u6c42\u8d8a\u6765\u8d8a\u590d\u6742,\u4ee5\u53ca\u7f16\u7a0b\u5e94\u7528\u9886\u57df\u8d8a\u6765\u8d8a\u5e7f\u6cdb,\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u5f88\u5feb\u5c31\u5230\u6765\u4e86\u3002 \u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u7684\u6839\u672c\u539f\u56e0\u8fd8\u662f\u5728\u4e8e\u8f6f\u4ef6\u751f\u4ea7\u529b\u8fdc\u8fdc\u8ddf\u4e0d\u4e0a\u786c\u4ef6\u548c\u4e1a\u52a1\u7684\u53d1\u5c55,\u76f8\u6bd4\u7b2c\u4e00\u6b21\u8f6f\u4ef6\u5371\u673a\u4e3b\u8981\u4f53\u73b0\u5728\u201c\u590d\u6742\u6027\u201d,\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u4e3b\u8981\u4f53\u73b0\u5728\u201c\u53ef\u6269\u5c55\u6027\u201d\u3001\u201c\u53ef\u7ef4\u62a4\u6027\u201d\u4e0a\u9762\u3002 \u4f20\u7edf\u7684\u9762\u5411\u8fc7\u7a0b(\u5305\u62ec \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1)\u65b9\u6cd5\u5df2\u7ecf\u8d8a\u6765\u8d8a\u4e0d\u80fd\u9002\u5e94\u5feb\u901f\u591a\u53d8\u7684\u4e1a\u52a1\u9700\u6c42\u4e86,\u8f6f\u4ef6\u9886\u57df\u8feb\u5207\u5e0c\u671b\u627e\u5230\u65b0\u7684\u94f6\u5f39\u6765\u89e3 \u51b3\u8f6f\u4ef6\u5371\u673a,\u5728\u8fd9\u79cd\u80cc\u666f\u4e0b,\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5e76\u4e0d\u662f\u5728\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u540e\u624d\u51fa\u73b0\u7684,\u65e9\u5728 1967 \u5e74\u7684 Simula \u8bed\u8a00\u4e2d\u5c31\u5f00\u59cb\u63d0\u51fa\u6765\u4e86,\u4f46\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u4fc3\u8fdb\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u53d1\u5c55\u3002 \u9762\u5411\u5bf9\u8c61\u771f\u6b63\u5f00\u59cb\u6d41\u884c\u662f\u5728 1980s \u5e74\u4ee3,\u4e3b\u8981\u5f97\u76ca\u4e8e C++\u7684\u529f \u52b3,\u540e\u6765\u7684 Java\u3001C#\u628a\u9762\u5411\u5bf9\u8c61\u63a8\u5411\u4e86\u65b0\u7684\u9ad8\u5cf0\u3002\u5230\u73b0\u5728\u4e3a\u6b62,\u9762\u5411\u5bf9\u8c61\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e3b\u6d41\u7684\u5f00\u53d1\u601d\u60f3\u3002 \u867d\u7136\u9762\u5411\u5bf9\u8c61\u5f00\u59cb\u4e5f\u88ab\u5f53\u505a\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u94f6\u5f39,\u4f46\u4e8b\u5b9e\u8bc1\u660e,\u548c\u8f6f\u4ef6\u5de5\u7a0b\u4e00\u6837,\u9762\u5411\u5bf9\u8c61\u4e5f\u4e0d\u662f\u94f6\u5f39, \u800c\u53ea\u662f\u4e00\u79cd\u65b0\u7684\u8f6f\u4ef6\u65b9\u6cd5\u800c\u5df2\u3002 \u867d\u7136\u9762\u5411\u5bf9\u8c61\u5e76\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u94f6\u5f39,\u4f46\u548c\u9762\u5411\u8fc7\u7a0b\u76f8\u6bd4,\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u66f4\u52a0\u8d34\u8fd1\u4eba\u7c7b\u601d\u7ef4\u7684\u7279\u70b9, \u66f4\u52a0\u8131\u79bb\u673a\u5668\u601d\u7ef4,\u662f\u4e00\u6b21\u8f6f\u4ef6\u8bbe\u8ba1\u601d\u60f3\u4e0a\u7684\u98de\u8dc3\u3002 \u8865\u5145\uff1a \u7f16\u7a0b\u8bed\u8a00\u53d1\u5c55\u53f2\u4e0a\u7684\u6770\u51fa\u4eba\u7269 \u7ea6\u7ff0\u00b7\u5df4\u79d1\u65af\uff0c\u53d1\u660e\u4e86Fortran\u3002 \u963f\u5170\u00b7\u5e93\u73c0\uff0c\u5f00\u53d1\u4e86Visual Basic\u3002 \u827e\u5179\u683c\u00b7\u8fea\u6770\u65af\u7279\u62c9\uff0c\u5f00\u521b\u4e86\u6b63\u786e\u8fd0\u7528\u7f16\u7a0b\u8bed\u8a00(proper programming)\u7684\u6846\u67b6\u3002 \u8a79\u59c6\u65af\u00b7\u9ad8\u65af\u6797\uff0c\u5f00\u53d1\u4e86Oak\uff0c\u8be5\u8bed\u8a00\u4e3aJava\u7684\u5148\u9a71\u3002 \u5b89\u5fb7\u65af\u00b7\u6d77\u5c14\u65af\u4f2f\u683c\uff0c\u5f00\u53d1\u4e86Turbo Pascal\u3001Delphi\uff0c\u4ee5\u53caC#\u3002 \u845b\u4e3d\u4e1d\u00b7\u970d\u666e\uff0c\u5f00\u53d1\u4e86Flow-Matic\uff0c\u8be5\u8bed\u8a00\u5bf9COBOL\u9020\u6210\u4e86\u5f71\u54cd\u3002 \u80af\u5c3c\u65af\u00b7\u827e\u4f5b\u68ee\uff0c\u5f00\u53d1\u4e86APL\uff0c\u5e76\u4e0eRoger Hui\u5408\u4f5c\u5f00\u53d1\u4e86J\u3002 \u6bd4\u5c14\u00b7\u4e54\u4f0a\uff0c\u53d1\u660e\u4e86vi\uff0cBSD Unix\u7684\u524d\u671f\u4f5c\u8005\uff0c\u4ee5\u53caSunOS\u7684\u53d1\u8d77\u4eba\uff0c\u8be5\u64cd\u4f5c\u7cfb\u7edf\u540e\u6765\u6539\u540d\u4e3aSolaris\u3002 \u827e\u4f26\u00b7\u51ef\uff0c\u5f00\u521b\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u53caSmalltalk\u7684\u53d1\u8d77\u4eba\u3002 Brian Kernighan\uff0c\u4e0e\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\u5408\u8457\u7b2c\u4e00\u672cC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u4e66\u7c4d\uff0c\u540c\u65f6\u4e5f\u662fAWK\u4e0eAMPL\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u5171\u540c\u4f5c\u8005\u3002 \u7ea6\u7ff0\u00b7\u9ea6\u5361\u9521\uff0c\u53d1\u660e\u4e86LISP\u3002 \u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f0a\u66fc\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6982\u5ff5\u7684\u53d1\u8d77\u8005\u3002 \u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff0c\u53d1\u660e\u4e86C\u3002 \u6bd4\u96c5\u5c3c\u00b7\u65af\u7279\u52b3\u65af\u7279\u9c81\u666e\uff0c\u5f00\u53d1\u4e86C++\u3002 \u80af\u00b7\u6c64\u666e\u900a\uff0c\u53d1\u660e\u4e86Unix\u3002 \u5c3c\u514b\u52b3\u65af\u00b7\u7ef4\u5c14\u7279\uff0c\u53d1\u660e\u4e86Pascal\u4e0eModula\u3002 \u62c9\u91cc\u00b7\u6c83\u5c14\uff0c\u521b\u9020\u4e86Perl\u4e0ePerl 6\u3002 \u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff0c\u521b\u9020\u4e86Python\u3002 \u4e8c\u3001\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u610f\u4e49 \u00b6 \u9762\u5411\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6838\u5fc3\u662f\u8fc7\u7a0b\uff08\u6d41\u6c34\u7ebf\u5f0f\u601d\u7ef4\uff09\uff0c\u8fc7\u7a0b\u5373\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\uff0c\u9762\u5411\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u5c31\u597d\u6bd4\u7cbe\u5fc3\u8bbe\u8ba1\u597d\u4e00\u6761\u6d41\u6c34\u7ebf\uff0c\u8003\u8651\u5468\u5168\u4ec0\u4e48\u65f6\u5019\u5904\u7406\u4ec0\u4e48\u4e1c\u897f\u3002 **\u4f18\u70b9\u662f\uff1a**\u6781\u5927\u7684\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\uff1b **\u7f3a\u70b9\u662f\uff1a**\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u4fee\u6539\u4ee3\u7801\u9ebb\u70e6\uff1b **\u5e94\u7528\u573a\u666f\uff1a**\u4e00\u65e6\u5b8c\u6210\u57fa\u672c\u5f88\u5c11\u6539\u53d8\u7684\u573a\u666f\uff0c\u8457\u540d\u7684\u4f8b\u5b50\u6709Linux\u5167\u6838\uff0cgit\uff0c\u4ee5\u53caApache HTTP Server\u7b49\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6838\u5fc3\u662f\u5bf9\u8c61\uff08\u4e0a\u5e1d\u5f0f\u601d\u7ef4\uff09\uff0c\u8981\u7406\u89e3\u5bf9\u8c61\u4e3a\u4f55\u7269\uff0c\u5fc5\u987b\u628a\u81ea\u5df1\u5f53\u6210\u4e0a\u5e1d\uff0c\u4e0a\u5e1d\u773c\u91cc\u4e16\u95f4\u5b58\u5728\u7684\u4e07\u7269\u7686\u4e3a\u5bf9\u8c61\uff0c\u4e0d\u5b58\u5728\u7684\u4e5f\u53ef\u4ee5\u521b\u9020\u51fa\u6765\u3002\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u597d\u6bd4\u5982\u6765\u8bbe\u8ba1\u897f\u6e38\u8bb0\uff0c\u5982\u6765\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u628a\u7ecf\u4e66\u4f20\u7ed9\u4e1c\u571f\u5927\u5510\uff0c\u5982\u6765\u60f3\u4e86\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u56db\u4e2a\u4eba\uff1a\u5510\u50e7\uff0c\u6c99\u548c\u5c1a\uff0c\u732a\u516b\u6212\uff0c\u5b59\u609f\u7a7a\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u5404\u81ea\u7684\u7279\u5f81\u548c\u6280\u80fd\uff08\u8fd9\u5c31\u662f\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u7279\u5f81\u548c\u6280\u80fd\u5206\u522b\u5bf9\u5e94\u5bf9\u8c61\u7684\u6570\u636e\u5c5e\u6027\u548c\u65b9\u6cd5\u5c5e\u6027\uff09\uff0c\u7136\u800c\u8fd9\u5e76\u4e0d\u597d\u73a9\uff0c\u4e8e\u662f\u5982\u6765\u53c8\u5b89\u6392\u4e86\u4e00\u7fa4\u5996\u9b54\u9b3c\u602a\uff0c\u4e3a\u4e86\u9632\u6b62\u5e08\u5f92\u56db\u4eba\u5728\u53d6\u7ecf\u8def\u4e0a\u88ab\u641e\u6b7b\uff0c\u53c8\u5b89\u6392\u4e86\u4e00\u7fa4\u795e\u4ed9\u4fdd\u9a7e\u62a4\u822a\uff0c\u8fd9\u4e9b\u90fd\u662f\u5bf9\u8c61\u3002\u7136\u540e\u53d6\u7ecf\u5f00\u59cb\uff0c\u5e08\u5f92\u56db\u4eba\u4e0e\u5996\u9b54\u9b3c\u602a\u795e\u4ed9\u4ea4\u4e92\u7740\u76f4\u5230\u6700\u540e\u53d6\u5f97\u771f\u7ecf\u3002\u5982\u6765\u6839\u672c\u4e0d\u4f1a\u7ba1\u5e08\u5f92\u56db\u4eba\u6309\u7167\u4ec0\u4e48\u6d41\u7a0b\u53bb\u53d6\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1 **\u4f18\u70b9\uff1a**\u89e3\u51b3\u4e86\u7a0b\u5e8f\u7684\u6269\u5c55\u6027\u3002\u5bf9\u67d0\u4e00\u4e2a\u5bf9\u8c61\u5355\u72ec\u4fee\u6539\uff0c\u4f1a\u7acb\u523b\u53cd\u6620\u5230\u6574\u4e2a\u4f53\u7cfb\u4e2d\uff0c\u5982\u5bf9\u6e38\u620f\u4e2d\u4e00\u4e2a\u4eba\u7269\u53c2\u6570\u7684\u7279\u5f81\u548c\u6280\u80fd\u4fee\u6539\u90fd\u5f88\u5bb9\u6613\u3002 **\u7f3a\u70b9\uff1a**\u53ef\u63a7\u6027\u5dee\uff0c\u65e0\u6cd5\u5411\u9762\u5411\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6d41\u6c34\u7ebf\u5f0f\u7684\u53ef\u4ee5\u5f88\u7cbe\u51c6\u7684\u9884\u6d4b\u95ee\u9898\u7684\u5904\u7406\u6d41\u7a0b\u4e0e\u7ed3\u679c\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u4e00\u65e6\u5f00\u59cb\u5c31\u7531\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u89e3\u51b3\u95ee\u9898\uff0c\u65e0\u6cd5\u9884\u6d4b\u6700\u7ec8\u7ed3\u679c\u3002\u4e8e\u662f\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u4e00\u4e2a\u6e38\u620f\u4eba\u67d0\u4e00\u53c2\u6570\u7684\u4fee\u6539\u6781\u6709\u53ef\u80fd\u5bfc\u81f4bug\u7684\u6280\u80fd\u51fa\u73b0\uff0c\u4e00\u5200\u780d\u6b7b3\u4e2a\u4eba\uff0c\u8fd9\u4e2a\u6e38\u620f\u5c31\u5931\u53bb\u5e73\u8861\u3002 **\u5e94\u7528\u573a\u666f\uff1a**\u9700\u6c42\u7ecf\u5e38\u53d8\u5316\u7684\u8f6f\u4ef6\uff0c\u4e00\u822c\u9700\u6c42\u7684\u53d8\u5316\u90fd\u96c6\u4e2d\u5728\u7528\u6237\u5c42\uff0c\u4e92\u8054\u7f51\u5e94\u7528\uff0c\u4f01\u4e1a\u5185\u90e8\u8f6f\u4ef6\uff0c\u6e38\u620f\u7b49\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u663e\u8eab\u624b\u7684\u597d\u5730\u65b9\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e76\u4e0d\u662f\u5168\u90e8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8f6f\u4ef6\u8d28\u91cf\u6765\u8bf4\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u53ea\u662f\u7528\u6765\u89e3\u51b3\u6269\u5c55\u6027\u3002 \u4e09\u3001\u7c7b\u548c\u5bf9\u8c61 \u00b6 1.\u5b9a\u4e49 \u00b6 python\u4e2d\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u4e14python3\u7edf\u4e00\u4e86\u7c7b\u4e0e\u7c7b\u578b\u7684\u6982\u5ff5\uff0c\u7c7b\u578b\u5c31\u662f\u7c7b\u3002 \u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e00\u4e2a\u6b3e\u6e38\u620f\uff1a\u82f1\u96c4\u8054\u76df\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u9009\u4e00\u4e2a\u82f1\u96c4\uff0c\u6bcf\u4e2a\u82f1\u96c4\u90fd\u6709\u81ea\u5df1\u7684\u7279\u5f81\u548c\u548c\u6280\u80fd\uff0c\u7279\u5f81\u5373\u6570\u636e\u5c5e\u6027\uff0c\u6280\u80fd\u5373\u65b9\u6cd5\u5c5e\u6027\uff0c\u7279\u5f81\u4e0e\u6280\u80fd\u7684\u7ed3\u5408\u4f53\u5c31\u4e00\u4e2a\u5bf9\u8c61\u3002 \u4ece\u4e00\u7ec4\u5bf9\u8c61\u4e2d\u63d0\u53d6\u76f8\u4f3c\u7684\u90e8\u5206\u5c31\u662f\u7c7b\uff0c\u7c7b\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u7684\u7279\u5f81\u548c\u6280\u80fd\u7684\u7ed3\u5408\u4f53\u3002 \u5728python\u4e2d\uff0c\u7528\u53d8\u91cf\u8868\u793a\u7279\u5f81\uff0c\u7528\u51fd\u6570\u8868\u793a\u6280\u80fd\uff0c\u56e0\u800c\u7c7b\u662f\u53d8\u91cf\u4e0e\u51fd\u6570\u7684\u7ed3\u5408\u4f53\uff0c\u5bf9\u8c61\u662f\u53d8\u91cf\u4e0e\u65b9\u6cd5\uff08\u6307\u5411\u7c7b\u7684\u51fd\u6570\uff09\u7684\u7ed3\u5408\u4f53\u3002 2.\u7c7b\u7684\u58f0\u660e \u00b6 \u5728python\u4e2d\u58f0\u660e\u7c7b\u4e0e\u58f0\u660e\u51fd\u6570\u5f88\u76f8\u4f3c \u58f0\u660e\u7c7b class \u7c7b\u540d: '\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32' \u7c7b\u4f53 # \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7c7b class Data: pass \u5206\u7c7b\uff1a\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b \u6ce8\u610f\uff1a 1.\u53ea\u6709\u5728python2\u4e2d\u624d\u5206\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\uff0cpython3\u4e2d\u7edf\u4e00\u90fd\u662f\u65b0\u5f0f\u7c7b 2.\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u58f0\u660e\u7684\u6700\u5927\u4e0d\u540c\u5728\u4e8e,\u6240\u6709\u65b0\u5f0f\u7c7b\u5fc5\u987b\u7ee7\u627f\u81f3\u5c11\u4e00\u4e2a\u7236\u7c7b 3.\u6240\u6709\u7c7b\u752d\u7ba1\u662f\u5426\u663e\u5f0f\u58f0\u660e\u7236\u7c7b\uff0c\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7ee7\u627fobject\u7236\u7c7b # \u5728python2\u4e2d\u7684\u533a\u5206 # \u7ecf\u5178\u7c7b\uff1a class \u7c7b\u540d: \u3000\u3000pass # \u65b0\u5f0f\u7c7b\uff1a class \u7c7b\u540d(\u7236\u7c7b): \u3000\u3000pass # \u5728python3\u4e2d\uff0c\u4e0a\u8ff0\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\u5168\u90fd\u662f\u65b0\u5f0f\u7c7b \u4f8b: class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def attack(self,enemy): ; enemy.life_value-=self.aggressivity 3.\u7c7b\u7684\u4e24\u79cd\u7528\u6cd5 \u00b6 \u7c7b\u7684\u5c5e\u6027\u5f15\u7528 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def attack(self,enemy): ; enemy.life_value-=self.aggressivity print(Garen.camp) #\u5f15\u7528\u7c7b\u7684\u6570\u636e\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u4e0e\u6240\u6709\u5bf9\u8c61/\u5b9e\u4f8b\u5171\u4eab print(Garen.attack) #\u5f15\u7528\u7c7b\u7684\u51fd\u6570\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u4e5f\u5171\u4eab print(Garen.__dict__) #\u67e5\u770b\u7c7b\u7684\u5c5e\u6027\u5b57\u5178\uff0c\u6216\u8005\u8bf4\u540d\u79f0\u7a7a\u95f4 # Garen.name='Garen')#\u589e\u52a0\u5c5e\u6027 # del Garen.name #\u5220\u9664\u5c5e\u6027 \u8f93\u51fa Demacia <function Garen.attack at 0x106acd400> {'__doc__': None, 'attack': <function Garen.attack at 0x106acd400>, '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'Garen' objects>, 'camp': 'Demacia', '__dict__': <attribute '__dict__' of 'Garen' objects>} \u7c7b\u7684\u5b9e\u4f8b\u5316 \u7c7b\u540d\u52a0\u62ec\u53f7\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1__init__\u51fd\u6570\u7684\u8fd0\u884c\uff0c\u53ef\u4ee5\u7528\u5b83\u6765\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u5b9a\u5236\u81ea\u5df1\u7684\u7279\u5f81 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def __init__(self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u8349\u4e1b\u4f26') .__init__(g1,'\u8349\u4e1b\u4f26')\uff0c\u7136\u540e\u6267\u884c__init__\u5185\u7684\u4ee3\u7801g1.nickname=\u2018\u8349\u4e1b\u4f26\u2019\u7b49 print(g1) print(g1.nickname) \u8f93\u51fa <__main__.Garen object at 0x10ee26e10> \u8349\u4e1b\u4f26 **\u6ce8\uff1a**self\u7684\u4f5c\u7528\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u81ea\u52a8\u5c06\u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u4f20\u7ed9__init__\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0cself\u53ef\u4ee5\u662f\u4efb\u610f\u540d\u5b57 \u8865\u5145\uff1a # \u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u7684\u5c5e\u6027\u5230\u5e95\u5b58\u5230\u54ea\u91cc\u4e86\uff1f\u6709\u4e24\u79cd\u65b9\u5f0f\u67e5\u770b # dir(\u7c7b\u540d)\uff1a\u67e5\u51fa\u7684\u662f\u4e00\u4e2a\u540d\u5b57\u5217\u8868 # \u7c7b\u540d.__dict__:\u67e5\u51fa\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0ckey\u4e3a\u5c5e\u6027\u540d\uff0cvalue\u4e3a\u5c5e\u6027\u503c # \u4e8c\uff1a\u7279\u6b8a\u7684\u7c7b\u5c5e\u6027 \u7c7b\u540d.__name__# \u7c7b\u7684\u540d\u5b57(\u5b57\u7b26\u4e32) \u7c7b\u540d.__doc__# \u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32 \u7c7b\u540d.__base__# \u7c7b\u7684\u7b2c\u4e00\u4e2a\u7236\u7c7b(\u5728\u8bb2\u7ee7\u627f\u65f6\u4f1a\u8bb2) \u7c7b\u540d.__bases__# \u7c7b\u6240\u6709\u7236\u7c7b\u6784\u6210\u7684\u5143\u7ec4(\u5728\u8bb2\u7ee7\u627f\u65f6\u4f1a\u8bb2) \u7c7b\u540d.__dict__# \u7c7b\u7684\u5b57\u5178\u5c5e\u6027 \u7c7b\u540d.__module__# \u7c7b\u5b9a\u4e49\u6240\u5728\u7684\u6a21\u5757 \u7c7b\u540d.__class__# \u5b9e\u4f8b\u5bf9\u5e94\u7684\u7c7b(\u4ec5\u65b0\u5f0f\u7c7b\u4e2d) 4.\u5bf9\u8c61\u7684\u4ea7\u751f\u548c\u5f15\u7528 \u00b6 \u5bf9\u8c61\u662f\u5173\u4e8e\u7c7b\u800c\u5b9e\u9645\u5b58\u5728\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5373\u7c7b\u7684\u5b9e\u4f8b\u5316\u3002 g1=Garen('\u8349\u4e1b\u4f26') #\u5b9e\u4f8b\u5316\u7c7b\u5c31\u662f\u5bf9\u8c61 print(g1) print(g1.nickname) print(type(g1)) #\u67e5\u770bg1\u7684\u7c7b\u578b\u5c31\u662f\u7c7bGaren print(isinstance(g1,Garen)) #g1\u5c31\u662fGaren\u7684\u5b9e\u4f8b \u8f93\u51fa <__main__.Garen object at 0x108d55dd8> \u8349\u4e1b\u4f26 <class '__main__.Garen'> True ``` * \u5bf9\u8c61\u7684\u5f15\u7528\u53ea\u6709\u4e00\u79cd\uff1a\u5c5e\u6027\u5f15\u7528 \u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u5176\u5b9e\u53ea\u6709\u6570\u636e\u5c5e\u6027 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def init (self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u8349\u4e1b\u4f26') print(g1.nickname)\u3000\u3000 print(g1.aggressivity) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 58 455 **\u8865\u5145\uff1a** \u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u53ea\u6709\u6570\u636e\u5c5e\u6027\uff0c\u4f46\u662fpython\u7684class\u673a\u5236\u4f1a\u5c06\u7c7b\u7684\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e0a\uff0c\u79f0\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u53eb\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u7ed1\u5b9a\u65b9\u6cd5\u552f\u4e00\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\u7ed1\u5b9a\u5230\u4e0d\u540c\u7684\u5bf9\u8c61\u4e0a\uff0c\u5c5e\u4e8e\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5185\u5b58\u5730\u5740\u90fd\u4e0d\u4f1a\u4e00\u6837\u3002 print(g1.attack)\u3000\u3000 print(Garen.attack)\u3000\u3000 **\u8f93\u51fa** <bound method Garen.attack of < main .Garen object at 0x10809ee10>> \u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5\u7684\u7279\u522b\u4e4b\u5904\u5728\u4e8e\uff1aobj.func()\u4f1a\u628aobj\u4f20\u7ed9func\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 ### 5.\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92 \u4eff\u7167garen\u7c7b\u518d\u521b\u5efa\u4e00\u4e2aRiven\u7c7b\uff0c\u7528\u745e\u96ef\u653b\u51fb\u76d6\u4f26\uff0c\u5b8c\u6210\u5bf9\u8c61\u4ea4\u4e92 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def init (self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity class Riven: camp='Noxus' )\u7684\u9635\u8425\u90fd\u662fNoxus; def init (self,nickname,aggressivity=54,life_value=414): ; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u76d6\u4f26') . init (g1,'\u8349\u4e1b\u4f26')\uff0c\u7136\u540e\u6267\u884c__init__\u5185\u7684\u4ee3\u7801g1.nickname=\u2018\u8349\u4e1b\u4f26\u2019\u7b49 r1=Riven('\u745e\u96ef') print(g1.life_value) print(r1.attack(g1)) ,\u745e\u96ef\u653b\u51fb\u76d6\u4f26 print(g1.life_value) **\u8f93\u51fa** 455 None 401 ### 6.\u7c7b\u540d\u79f0\u7a7a\u95f4\u4e0e\u5bf9\u8c61/\u5b9e\u4f8b\u540d\u79f0\u7a7a\u95f4 \u521b\u5efa\u4e00\u4e2a\u7c7b\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u7528\u6765\u5b58\u50a8\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u540d\u5b57\uff0c\u8fd9\u4e9b\u540d\u5b57\u79f0\u4e3a\u7c7b\u7684\u5c5e\u6027\u3002 \u7c7b\u6709\u4e24\u79cd\u5c5e\u6027\uff1a\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027 \u5176\u4e2d\u7c7b\u7684\u6570\u636e\u5c5e\u6027\u662f\u5171\u4eab\u7ed9\u6240\u6709\u5bf9\u8c61\u7684 \u5b9a\u4e49\u5728\u7c7b\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u662f\u6240\u6709\u5bf9\u8c61\u5171\u6709\u7684\uff0cid\u5168\u4e00\u6837 print(id(r1.camp)) print(id(Riven.camp)) 4482776512 4482776512 \u800c\u7c7b\u7684\u51fd\u6570\u5c5e\u6027\u662f\u7ed1\u5b9a\u5230\u6240\u6709\u5bf9\u8c61\u7684\uff1a \u5b9a\u4e49\u5728\u7c7b\u5185\u90e8\u7684\u51fd\u6570\uff0c\u662f\u7ed1\u5b9a\u5230\u6240\u6709\u5bf9\u8c61\u7684\uff0c\u662f\u7ed9\u5bf9\u8c61\u6765\u7528\uff0cobj.func() \u4f1a\u628aobj\u672c\u8eab\u5f53\u505a\u7b2c\u4e00\u4e2a\u53c2\u6570\u51fa\u5165 r1.attack\u5c31\u662f\u5728\u6267\u884cRiven.attack\u7684\u529f\u80fd\uff0cpython\u7684class\u673a\u5236\u4f1a\u5c06Riven\u7684\u51fd\u6570\u5c5e\u6027attack\u7ed1\u5b9a\u7ed9r1\uff0cr1\u76f8\u5f53\u4e8e\u62ff\u5230\u4e86\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411Riven\u7c7b\u7684attack\u529f\u80fd,r1.attack()\u4f1a\u5c06r1\u4f20\u7ed9attack\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 print(id(r1.attack)) print(id(Riven.attack)) **\u8f93\u51fa** 4372850184 4374779288 **\u6ce8\uff1a** \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61/\u5b9e\u4f8b\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u5b58\u653e\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u540d\u5b57\uff0c\u79f0\u4e3a\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u5c5e\u6027 \u5728obj.name\u4f1a\u5148\u4eceobj\u81ea\u5df1\u7684\u540d\u79f0\u7a7a\u95f4\u91cc\u627ename\uff0c\u627e\u4e0d\u5230\u5219\u53bb\u7c7b\u4e2d\u627e\uff0c\u7c7b\u4e5f\u627e\u4e0d\u5230\u5c31\u627e\u7236\u7c7b...\u6700\u540e\u90fd\u627e\u4e0d\u5230\u5c31\u629b\u51fa\u5f02\u5e38 print(g1.x) #\u5148\u4eceg1.__dict__,\u627e\u4e0d\u5230\u518d\u627eGaren.__dict__,\u627e\u4e0d\u5230\u5c31\u4f1a\u62a5\u9519 ## \u56db.\u7ee7\u627f\u548c\u6d3e\u751f ### 1.\u7ee7\u627f\u7684\u5b9a\u4e49 \u7ee7\u627f\u662f\u4e00\u79cd\u521b\u5efa\u65b0\u7c7b\u7684\u65b9\u5f0f\uff0c\u5728python\u4e2d\uff0c\u65b0\u5efa\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\uff0c\u7236\u7c7b\u53c8\u53ef\u79f0\u4e3a\u57fa\u7c7b\u6216\u8d85\u7c7b\uff0c\u65b0\u5efa\u7684\u7c7b\u79f0\u4e3a\u6d3e\u751f\u7c7b\u6216\u5b50\u7c7b\u3002 * **\u5206\u7c7b\uff1a**\u5355\u7ee7\u627f\u548c\u591a\u7ee7\u627f class ParentClass1: pass class ParentClass2: pass class SubClass1(ParentClass1): pass class SubClass2(ParentClass1,ParentClass2): * **\u67e5\u770b\u7ee7\u627f** __base__\u53ea\u67e5\u770b\u4ece\u5de6\u5230\u53f3\u7ee7\u627f\u7684\u7b2c\u4e00\u4e2a\u5b50\u7c7b\uff0c__bases__\u5219\u662f\u67e5\u770b\u6240\u6709\u7ee7\u627f\u7684\u7236\u7c7b print(SubClass2. base ) print(SubClass2. bases ) **\u8f93\u51fa** ( , ) \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u57fa\u7c7b\uff0cpython\u7684\u7c7b\u4f1a\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b\uff0cobject\u662f\u6240\u6709python\u7c7b\u7684\u57fa\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u89c1\u65b9\u6cd5\uff08\u5982__str__\uff09\u7684\u5b9e\u73b0\u3002 print(ParentClass1. base ) **\u8f93\u51fa** ### 2. \u7ee7\u627f\u4e0e\u62bd\u8c61 \u62bd\u8c61\u5373\u62bd\u53d6\u7c7b\u4f3c\u6216\u8005\u8bf4\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u3002 \u62bd\u8c61\u5206\u6210\u4e24\u4e2a\u5c42\u6b21\uff1a > 1.\u5c06\u5965\u5df4\u9a6c\u548c\u6885\u897f\u8fd9\u4fe9\u5bf9\u8c61\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u62bd\u53d6\u6210\u7c7b\uff1b > 2.\u5c06\u4eba\uff0c\u732a\uff0c\u72d7\u8fd9\u4e09\u4e2a\u7c7b\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u62bd\u53d6\u6210\u7236\u7c7b\u3002 * **\u62bd\u8c61\uff1a**\u6700\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u5212\u5206\u7c7b\u522b\uff08\u53ef\u4ee5\u9694\u79bb\u5173\u6ce8\u70b9\uff0c\u964d\u4f4e\u590d\u6742\u5ea6\uff09 * **\u7ee7\u627f\uff1a**\u662f\u57fa\u4e8e\u62bd\u8c61\u7684\u7ed3\u679c\uff0c\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u53bb\u5b9e\u73b0\u5b83\uff0c\u80af\u5b9a\u662f\u5148\u7ecf\u5386\u62bd\u8c61\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u624d\u80fd\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u53bb\u8868\u8fbe\u51fa\u62bd\u8c61\u7684\u7ed3\u6784\u3002 \u62bd\u8c61\u53ea\u662f\u5206\u6790\u548c\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u52a8\u4f5c\u6216\u8005\u8bf4\u4e00\u79cd\u6280\u5de7\uff0c\u901a\u8fc7\u62bd\u8c61\u53ef\u4ee5\u5f97\u5230\u7c7b\u3002 ### 3.\u7ee7\u627f\u4e0e\u91cd\u7528\u6027 \u5728\u5f00\u53d1\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7bA\uff0c\u7136\u540e\u53c8\u60f3\u65b0\u5efa\u7acb\u53e6\u5916\u4e00\u4e2a\u7c7bB\uff0c\u4f46\u662f\u7c7bB\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4e0e\u7c7bA\u7684\u76f8\u540c\u65f6 \u6211\u4eec\u4e0d\u53ef\u80fd\u4ece\u5934\u5f00\u59cb\u5199\u4e00\u4e2a\u7c7bB\uff0c\u8fd9\u5c31\u7528\u5230\u4e86\u7c7b\u7684\u7ee7\u627f\u7684\u6982\u5ff5\u3002 \u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u65b0\u5efa\u7c7bB\uff0c\u8ba9B\u7ee7\u627fA\uff0cB\u4f1a\u2018\u9057\u4f20\u2019A\u7684\u6240\u6709\u5c5e\u6027(\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027)\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528 class Hero: def init (self,nickname,aggressivity,life_value): self.nickname=nickname self.aggressivity=aggressivity self.life_value=life_value def move_forward(self): print('%s move forward' %self.nickname) def move_backward(self): print('%s move backward' %self.nickname) def move_left(self): print('%s move forward' %self.nickname) def move_right(self): print('%s move forward' %self.nickname) def attack(self,enemy): enemy.life_value-=self.aggressivity class Garen(Hero): pass class Riven(Hero): pass g1=Garen('\u8349\u4e1b\u4f26',100,300) r1=Riven('\u9510\u96ef\u96ef',57,200) print(g1.nickname) print(r1.nickname) print(g1.life_value) r1.attack(g1) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 300 243 **\u6ce8\u610f\uff1a** \u50cfg1.life_value\u4e4b\u7c7b\u7684\u5c5e\u6027\u5f15\u7528\uff0c\u4f1a\u5148\u4ece\u5b9e\u4f8b\u4e2d\u627elife_value\u7136\u540e\u53bb\u7c7b\u4e2d\u627e\uff0c\u7136\u540e\u518d\u53bb\u7236\u7c7b\u4e2d\u627e...\u76f4\u5230\u6700\u9876\u7ea7\u7684\u7236\u7c7b\u3002 \u5f53\u7136\u5b50\u7c7b\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u65b0\u7684\u5c5e\u6027\u6216\u8005\u5728\u81ea\u5df1\u8fd9\u91cc\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e9b\u5c5e\u6027\uff08\u4e0d\u4f1a\u5f71\u54cd\u5230\u7236\u7c7b\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u65e6\u91cd\u65b0\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u5c5e\u6027\u4e14\u4e0e\u7236\u7c7b\u91cd\u540d\uff0c\u90a3\u4e48\u8c03\u7528\u65b0\u589e\u7684\u5c5e\u6027\u65f6\uff0c\u5c31\u4ee5\u81ea\u5df1\u4e3a\u51c6\u4e86\u3002 \u5728\u5b50\u7c7b\u5b9a\u4e49\u65b0\u7684\u5c5e\u6027\uff0c\u8986\u76d6\u6389\u7236\u7c7b\u7684\u5c5e\u6027,\u79f0\u4e3a\u6d3e\u751f\u3002 class Hero: def init (self,nickname,aggressivity,life_value): self.nickname=nickname self.aggressivity=aggressivity self.life_value=life_value def move_forward(self): print('%s move forward' %self.nickname) def move_backward(self): print('%s move backward' %self.nickname) def move_left(self): print('%s move forward' %self.nickname) def move_right(self): print('%s move forward' %self.nickname) def attack(self,enemy): enemy.life_value-=self.aggressivity class Garen(Hero): pass class Riven(Hero): camp='Noxus' def attack(self,enemy): ,\u4e0d\u518d\u4f7f\u7528\u7236\u7c7b\u7684attack,\u4e14\u4e0d\u4f1a\u5f71\u54cd\u7236\u7c7b print('from riven') def fly(self): print('%s is flying' %self.nickname) g1=Garen('\u8349\u4e1b\u4f26',100,300) r1=Riven('\u9510\u96ef\u96ef',57,200) print(g1.nickname) print(r1.nickname) print(g1.life_value) r1.attack(g1) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 \u9510\u96ef\u96ef 300 from riven 300 ### 4.\u7ec4\u5408\u4e0e\u91cd\u7528\u6027 \u8f6f\u4ef6\u91cd\u7528\u7684\u91cd\u8981\u65b9\u5f0f\u9664\u4e86\u7ee7\u627f\u4e4b\u5916\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff0c\u5373\uff1a\u7ec4\u5408\u3002\u7ec4\u5408\u6307\u7684\u662f\uff0c\u5728\u4e00\u4e2a\u7c7b\u4e2d\u4ee5\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u6570\u636e\u5c5e\u6027\uff0c\u79f0\u4e3a\u7c7b\u7684\u7ec4\u5408\u3002 class Equip: def fire(self): print('release Fire skill') class Riven: ,\u4e00\u4e2a\u82f1\u96c4\u9700\u8981\u6709\u88c5\u5907,\u56e0\u800c\u9700\u8981\u7ec4\u5408Equip\u7c7b camp='Noxus' def init (self,nickname): self.nickname=nickname self.equip=Equip() ,\u8d4b\u503c\u7ed9\u5b9e\u4f8b\u7684equip\u5c5e\u6027 r1=Riven('\u9510\u96ef\u96ef') r1.equip.fire() **\u8f93\u51fa** release Fire skill **\u5bf9\u6bd4\uff1a** \u7ec4\u5408\u4e0e\u7ee7\u627f\u90fd\u662f\u6709\u6548\u5730\u5229\u7528\u5df2\u6709\u7c7b\u7684\u8d44\u6e90\u7684\u91cd\u8981\u65b9\u5f0f\u3002\u4f46\u662f\u4e8c\u8005\u7684\u6982\u5ff5\u548c\u4f7f\u7528\u573a\u666f\u7686\u4e0d\u540c\uff0c * 1.\u7ee7\u627f\u7684\u65b9\u5f0f \u901a\u8fc7\u7ee7\u627f\u5efa\u7acb\u4e86\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u662f\u4e00\u79cd'\u662f'\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u767d\u9a6c\u662f\u9a6c\uff0c\u4eba\u662f\u52a8\u7269\u3002 \u5f53\u7c7b\u4e4b\u95f4\u6709\u5f88\u591a\u76f8\u540c\u7684\u529f\u80fd\uff0c\u63d0\u53d6\u8fd9\u4e9b\u5171\u540c\u7684\u529f\u80fd\u505a\u6210\u57fa\u7c7b\uff0c\u7528\u7ee7\u627f\u6bd4\u8f83\u597d\uff0c\u6bd4\u5982\u6559\u6388\u662f\u8001\u5e08 class Teacher: def init (self,name,gender): self.name=name self.gender=gender def teach(self): print('teaching') class Professor(Teacher): pass p1=Professor('hexin','male') p1.teach() **\u8f93\u51fa** teaching * 2.\u7ec4\u5408\u7684\u65b9\u5f0f \u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u5efa\u7acb\u4e86\u7c7b\u4e0e\u7ec4\u5408\u7684\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u662f\u4e00\u79cd\u2018\u6709\u2019\u7684\u5173\u7cfb,\u6bd4\u5982\u6559\u6388\u6709\u751f\u65e5\uff0c\u6559\u6388\u6559python\u8bfe\u7a0b\u3002 class BirthDate: def init (self,year,month,day): self.year=year self.month=month self.day=day class Couse: def init (self,name,price,period): self.name=name self.price=price self.period=period class Teacher: def init (self,name,gender): self.name=name self.gender=gender def teach(self): print('teaching') class Professor(Teacher): def init (self,name,gender,birth,course): Teacher. init (self,name,gender) self.birth=birth self.course=course p1=Professor('hexin','male', BirthDate('1995','1','27'), Couse('python','28000','4 months')) print(p1.birth.year,p1.birth.month,p1.birth.day) print(p1.course.name,p1.course.price,p1.course.period) **\u8f93\u51fa** 1995 1 27 python 28000 4 months \u5f53\u7c7b\u4e4b\u95f4\u6709\u663e\u8457\u4e0d\u540c\uff0c\u5e76\u4e14\u8f83\u5c0f\u7684\u7c7b\u662f\u8f83\u5927\u7684\u7c7b\u6240\u9700\u8981\u7684\u7ec4\u4ef6\u65f6\uff0c\u7528\u7ec4\u5408\u6bd4\u8f83\u597d ### 5.\u63a5\u53e3\u4e0e\u5f52\u4e00\u5316\u8bbe\u8ba1 * **\u63a5\u53e3\u5b9a\u4e49\uff1a**\u63a5\u53e3\u5c31\u662f\u4e00\u4e9b\u65b9\u6cd5\u7279\u5f81\u7684\u96c6\u5408------\u63a5\u53e3\u662f\u5bf9\u62bd\u8c61\u7684\u62bd\u8c61\u3002 \u7ee7\u627f\u6709\u4e24\u79cd\u7528\u9014\uff1a > \u2460\u7ee7\u627f\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u505a\u51fa\u81ea\u5df1\u7684\u6539\u53d8\u6216\u8005\u6269\u5c55\uff08\u4ee3\u7801\u91cd\u7528\uff09\uff1b > \u2461\u58f0\u660e\u67d0\u4e2a\u5b50\u7c7b\u517c\u5bb9\u4e8e\u67d0\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u7c7bInterface\uff0c\u63a5\u53e3\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u63a5\u53e3\u540d\uff08\u5c31\u662f\u51fd\u6570\u540d\uff09\u4e14\u5e76\u672a\u5b9e\u73b0\u63a5\u53e3\u7684\u529f\u80fd\uff0c\u5b50\u7c7b\u7ee7\u627f\u63a5\u53e3\u7c7b\uff0c\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u529f\u80fd\uff1b class Interface:#\u5b9a\u4e49\u63a5\u53e3Interface\u7c7b\u6765\u6a21\u4eff\u63a5\u53e3\u7684\u6982\u5ff5\uff0cpython\u4e2d\u538b\u6839\u5c31\u6ca1\u6709interface\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u3002 def read(self): pass def write(self): pass class Txt(Interface): def read(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Sata(Interface): def read(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Process(Interface): def read(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') ``` \u5b9e\u8df5\u4e2d\uff0c \u7ee7\u627f\u7684\u7b2c\u4e00\u79cd\u542b\u4e49\u610f\u4e49\u5e76\u4e0d\u5f88\u5927\uff0c\u751a\u81f3\u5e38\u5e38\u662f\u6709\u5bb3\u7684\u3002\u56e0\u4e3a\u5b83\u4f7f\u5f97\u5b50\u7c7b\u4e0e\u57fa\u7c7b\u51fa\u73b0\u5f3a\u8026\u5408\u3002 \u7ee7\u627f\u7684\u7b2c\u4e8c\u79cd\u542b\u4e49\u53eb\u201c\u63a5\u53e3\u7ee7\u627f\u201d\u3002\u63a5\u53e3\u7ee7\u627f\u5b9e\u8d28\u4e0a\u662f\u8981\u6c42\u201c\u505a\u51fa\u4e00\u4e2a\u826f\u597d\u7684\u62bd\u8c61\uff0c\u8fd9\u4e2a\u62bd\u8c61\u89c4\u5b9a\u4e86\u4e00\u4e2a\u517c\u5bb9\u63a5\u53e3\uff0c\u4f7f\u5f97\u5916\u90e8\u8c03\u7528\u8005\u65e0\u9700\u5173\u5fc3\u5177\u4f53\u7ec6\u8282\uff0c\u53ef\u4e00\u89c6\u540c\u4ec1\u7684\u5904\u7406\u5b9e\u73b0\u4e86\u7279\u5b9a\u63a5\u53e3\u7684\u6240\u6709\u5bf9\u8c61\u201d\u2014\u2014\u8fd9\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e0a\uff0c\u53eb\u505a\u5f52\u4e00\u5316\u3002 \u5f52\u4e00\u5316\u4f7f\u5f97\u9ad8\u5c42\u7684\u5916\u90e8\u4f7f\u7528\u8005\u53ef\u4ee5\u4e0d\u52a0\u533a\u5206\u7684\u5904\u7406\u6240\u6709\u63a5\u53e3\u517c\u5bb9\u7684\u5bf9\u8c61\u96c6\u5408\u2014\u2014\u5c31\u597d\u8c61linux\u7684\u6cdb\u6587\u4ef6\u6982\u5ff5\u4e00\u6837\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u53ef\u4ee5\u5f53\u6587\u4ef6\u5904\u7406\uff0c\u4e0d\u5fc5\u5173\u5fc3\u5b83\u662f\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u8fd8\u662f\u5c4f\u5e55\uff08\u5f53\u7136\uff0c\u5bf9\u5e95\u5c42\u8bbe\u8ba1\u8005\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u533a\u5206\u51fa\u201c\u5b57\u7b26\u8bbe\u5907\u201d\u548c\u201c\u5757\u8bbe\u5907\u201d\uff0c\u7136\u540e\u505a\u51fa\u9488\u5bf9\u6027\u7684\u8bbe\u8ba1\uff1a\u7ec6\u81f4\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff0c\u89c6\u9700\u6c42\u800c\u5b9a\uff09\u3002 * \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u63a5\u53e3\uff1f \u63a5\u53e3\u63d0\u53d6\u4e86\u4e00\u7fa4\u7c7b\u5171\u540c\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u628a\u63a5\u53e3\u5f53\u505a\u4e00\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u7136\u540e\u8ba9\u5b50\u7c7b\u53bb\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u51fd\u6570\u3002 \u8fd9\u4e48\u505a\u7684\u610f\u4e49\u5728\u4e8e\u5f52\u4e00\u5316\uff0c\u4ec0\u4e48\u53eb\u5f52\u4e00\u5316\uff0c\u5c31\u662f\u53ea\u8981\u662f\u57fa\u4e8e\u540c\u4e00\u4e2a\u63a5\u53e3\u5b9e\u73b0\u7684\u7c7b\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8fd9\u4e9b\u7c7b\u4ea7\u751f\u7684\u5bf9\u8c61\u5728\u4f7f\u7528\u65f6\uff0c\u4ece\u7528\u6cd5\u4e0a\u6765\u8bf4\u90fd\u4e00\u6837\u3002 \u5f52\u4e00\u5316\uff0c\u8ba9\u4f7f\u7528\u8005\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u7c7b\u662f\u4ec0\u4e48\uff0c\u53ea\u9700\u8981\u7684\u77e5\u9053\u8fd9\u4e9b\u5bf9\u8c61\u90fd\u5177\u5907\u67d0\u4e9b\u529f\u80fd\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6781\u5927\u5730\u964d\u4f4e\u4e86\u4f7f\u7528\u8005\u7684\u4f7f\u7528\u96be\u5ea6\u3002 \u6bd4\u5982\uff1a\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u52a8\u7269\u63a5\u53e3\uff0c\u63a5\u53e3\u91cc\u5b9a\u4e49\u4e86\u6709\u8dd1\u3001\u5403\u3001\u547c\u5438\u7b49\u63a5\u53e3\u51fd\u6570\uff0c\u8fd9\u6837\u8001\u9f20\u7684\u7c7b\u53bb\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\uff0c\u677e\u9f20\u7684\u7c7b\u4e5f\u53bb\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\uff0c\u7531\u4e8c\u8005\u5206\u522b\u4ea7\u751f\u4e00\u53ea\u8001\u9f20\u548c\u4e00\u53ea\u677e\u9f20\u9001\u5230\u4f60\u9762\u524d\uff0c\u5373\u4fbf\u662f\u4f60\u5206\u522b\u4e0d\u5230\u5e95\u54ea\u53ea\u662f\u4ec0\u4e48\u9f20\u4f60\u80af\u5b9a\u77e5\u9053\u4ed6\u4fe9\u90fd\u4f1a\u8dd1\uff0c\u90fd\u4f1a\u5403\uff0c\u90fd\u80fd\u547c\u5438\u3002 \u518d\u6bd4\u5982\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u6c7d\u8f66\u63a5\u53e3\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u6c7d\u8f66\u6240\u6709\u7684\u529f\u80fd\uff0c\u7136\u540e\u7531\u672c\u7530\u6c7d\u8f66\u7684\u7c7b\uff0c\u5965\u8fea\u6c7d\u8f66\u7684\u7c7b\uff0c\u5927\u4f17\u6c7d\u8f66\u7684\u7c7b\uff0c\u4ed6\u4eec\u90fd\u5b9e\u73b0\u4e86\u6c7d\u8f66\u63a5\u53e3\uff0c\u8fd9\u6837\u5c31\u597d\u529e\u4e86\uff0c\u5927\u5bb6\u53ea\u9700\u8981\u5b66\u4f1a\u4e86\u600e\u4e48\u5f00\u6c7d\u8f66\uff0c\u90a3\u4e48\u65e0\u8bba\u662f\u672c\u7530\uff0c\u8fd8\u662f\u5965\u8fea\uff0c\u8fd8\u662f\u5927\u4f17\u6211\u4eec\u90fd\u4f1a\u5f00\u4e86\uff0c\u5f00\u7684\u65f6\u5019\u6839\u672c\u65e0\u9700\u5173\u5fc3\u6211\u5f00\u7684\u662f\u54ea\u4e00\u7c7b\u8f66\uff0c\u64cd\u4f5c\u624b\u6cd5\uff08\u51fd\u6570\u8c03\u7528\uff09\u90fd\u4e00\u6837\u3002 6.\u62bd\u8c61\u7c7b \u00b6 \u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\uff0c\u5b83\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u4e3a\u4ec0\u4e48\u8981\u6709\u62bd\u8c61\u7c7b \u5982\u679c\u8bf4\u7c7b\u662f\u4ece\u4e00\u5806\u5bf9\u8c61\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\u7684\uff0c\u90a3\u4e48\u62bd\u8c61\u7c7b\u5c31\u662f\u4ece\u4e00\u5806\u7c7b\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\u7684\uff0c\u5185\u5bb9\u5305\u62ec\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027\u3002\u3000 \u6bd4\u5982\u6211\u4eec\u6709\u9999\u8549\u7684\u7c7b\uff0c\u6709\u82f9\u679c\u7684\u7c7b\uff0c\u6709\u6843\u5b50\u7684\u7c7b\uff0c\u4ece\u8fd9\u4e9b\u7c7b\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u5c31\u662f\u6c34\u679c\u8fd9\u4e2a\u62bd\u8c61\u7684\u7c7b\uff0c\u4f60\u5403\u6c34\u679c\u65f6\uff0c\u8981\u4e48\u662f\u5403\u4e00\u4e2a\u5177\u4f53\u7684\u9999\u8549\uff0c\u8981\u4e48\u662f\u5403\u4e00\u4e2a\u5177\u4f53\u7684\u6843\u5b50\u3002\u4f60\u6c38\u8fdc\u65e0\u6cd5\u5403\u5230\u4e00\u4e2a\u53eb\u505a\u6c34\u679c\u7684\u4e1c\u897f\u3002 \u4ece\u8bbe\u8ba1\u89d2\u5ea6\u53bb\u770b\uff0c\u5982\u679c\u7c7b\u662f\u4ece\u73b0\u5b9e\u5bf9\u8c61\u62bd\u8c61\u800c\u6765\u7684\uff0c\u90a3\u4e48\u62bd\u8c61\u7c7b\u5c31\u662f\u57fa\u4e8e\u7c7b\u62bd\u8c61\u800c\u6765\u7684\u3002\u3000 \u4ece\u5b9e\u73b0\u89d2\u5ea6\u6765\u770b\uff0c\u62bd\u8c61\u7c7b\u4e0e\u666e\u901a\u7c7b\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u62bd\u8c61\u7c7b\u4e2d\u53ea\u80fd\u6709\u62bd\u8c61\u65b9\u6cd5\uff08\u6ca1\u6709\u5b9e\u73b0\u529f\u80fd\uff09\uff0c\u8be5\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e14\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5\u3002\u8fd9\u4e00\u70b9\u4e0e\u63a5\u53e3\u6709\u70b9\u7c7b\u4f3c\uff0c\u4f46\u5176\u5b9e\u662f\u4e0d\u540c\u7684 \u5728python\u4e2d\u5b9e\u73b0\u62bd\u8c61\u7c7b ``` import abc class All_file(metaclass=abc.ABCMeta): all_type='file' @abc.abstractmethod def read(self): '\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u8bfb\u529f\u80fd' pass @abc . abstractmethod def write ( self ) : '\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u5199\u529f\u80fd' pass class Txt(All_file): \u00b6 pass \u00b6 \u00b6 t1=Txt() ,\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u62bd\u8c61\u65b9\u6cd5 \u00b6 class Txt(All_file): def read(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Sata(All_file): def read(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Process(All_file): def read(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') wenbenwenjian=Txt() yingpanwenjian=Sata() jinchengwenjian=Process() ,\u4e5f\u5c31\u662f\u4e00\u5207\u7686\u6587\u4ef6\u7684\u601d\u60f3 wenbenwenjian.read() yingpanwenjian.write() jinchengwenjian.read() print(wenbenwenjian.all_type) print(yingpanwenjian.all_type) print(jinchengwenjian.all_type) **\u8f93\u51fa** \u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 \u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 \u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 file file file * **\u8865\u5145\uff1a**Python\u7684abc\u6a21\u5757 abc\u6a21\u5757\u4f5c\u7528\uff1aPython\u672c\u8eab\u4e0d\u63d0\u4f9b\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u673a\u5236\uff0c\u8981\u60f3\u5b9e\u73b0\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u501f\u52a9abc\u6a21\u5757\u3002ABC\u662fAbstract Base Class\u7684\u7f29\u5199\u3002 \u6a21\u5757\u4e2d\u7684\u7c7b\u548c\u51fd\u6570\uff1a abc.ABCMeta\u3000\u3000\u8fd9\u662f\u7528\u6765\u751f\u6210\u62bd\u8c61\u57fa\u7840\u7c7b\u7684\u5143\u7c7b\u3002\u7531\u5b83\u751f\u6210\u7684\u7c7b\u53ef\u4ee5\u88ab\u76f4\u63a5\u7ee7\u627f\u3002 abc.abstractmethod(function)\u3000\u3000\u8868\u660e\u62bd\u8c61\u65b9\u6cd5\u7684\u751f\u6210\u5668 abc.abstractproperty([fget[,fset[,fdel[,doc]]]])\u3000\u3000\u8868\u660e\u4e00\u4e2a\u62bd\u8c61\u5c5e\u6027 * \u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3 \u62bd\u8c61\u7c7b\u7684\u672c\u8d28\u8fd8\u662f\u7c7b\uff0c\u6307\u7684\u662f\u4e00\u7ec4\u7c7b\u7684\u76f8\u4f3c\u6027\uff0c\u5305\u62ec\u6570\u636e\u5c5e\u6027\uff08\u5982all_type\uff09\u548c\u51fd\u6570\u5c5e\u6027\uff08\u5982read\u3001write\uff09\uff0c\u800c\u63a5\u53e3\u53ea\u5f3a\u8c03\u51fd\u6570\u5c5e\u6027\u7684\u76f8\u4f3c\u6027\u3002 \u62bd\u8c61\u7c7b\u662f\u4e00\u4e2a\u4ecb\u4e8e\u7c7b\u548c\u63a5\u53e3\u76f4\u63a5\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u540c\u65f6\u5177\u5907\u7c7b\u548c\u63a5\u53e3\u7684\u90e8\u5206\u7279\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5f52\u4e00\u5316\u8bbe\u8ba1 \u3002 ### 7.\u7ee7\u627f\u7684\u987a\u5e8f * \u7ee7\u627f\u987a\u5e8f class A(object): def test(self): print('from A') class B(A): def test(self): print('from B') class C(A): def test(self): print('from C') class D(B): def test(self): print('from D') class E(C): def test(self): print('from E') class F(D,E): # def test(self): # print('from F') pass f1=F() f1.test() print(F. mro ) :F->D->B->E->C->A :F->D->B->A->E->C **\u8f93\u51fa** from D ( , , , , , , ) * \u7ee7\u627f\u539f\u7406 * \u5bf9\u4e8e\u4f60\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u7c7b\uff0cpython\u4f1a\u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f(MRO)\u5217\u8868\uff0c\u8fd9\u4e2aMRO\u5217\u8868\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6240\u6709\u57fa\u7c7b\u7684\u7ebf\u6027\u987a\u5e8f\u5217\u8868\uff0c\u4f8b\u5982 F.mro() . mro [ , , , , , , ] \u4e3a\u4e86\u5b9e\u73b0\u7ee7\u627f,python\u4f1a\u5728MRO\u5217\u8868\u4e0a\u4ece\u5de6\u5230\u53f3\u5f00\u59cb\u67e5\u627e\u57fa\u7c7b,\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u8fd9\u4e2a\u5c5e\u6027\u7684\u7c7b\u4e3a\u6b62\u3002 \u800c\u8fd9\u4e2aMRO\u5217\u8868\u7684\u6784\u9020\u662f\u901a\u8fc7\u4e00\u4e2aC3\u7ebf\u6027\u5316\u7b97\u6cd5\u6765\u5b9e\u73b0\u7684\u3002\u6211\u4eec\u4e0d\u53bb\u6df1\u7a76\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6570\u5b66\u539f\u7406,\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u5408\u5e76\u6240\u6709\u7236\u7c7b\u7684MRO\u5217\u8868\u5e76\u9075\u5faa\u5982\u4e0b\u4e09\u6761\u51c6\u5219: > 1.\u5b50\u7c7b\u4f1a\u5148\u4e8e\u7236\u7c7b\u88ab\u68c0\u67e5 > 2.\u591a\u4e2a\u7236\u7c7b\u4f1a\u6839\u636e\u5b83\u4eec\u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u88ab\u68c0\u67e5 > 3.\u5982\u679c\u5bf9\u4e0b\u4e00\u4e2a\u7c7b\u5b58\u5728\u4e24\u4e2a\u5408\u6cd5\u7684\u9009\u62e9,\u9009\u62e9\u7b2c\u4e00\u4e2a\u7236\u7c7b ### 8.\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u60f3\u8fdb\u884c\u4fee\u6539\uff0c\u6ce8\u610f\u4e86\u662f\u57fa\u4e8e\u539f\u6709\u7684\u57fa\u7840\u4e0a\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 * \u65b9\u6cd5\u4e00\uff1a\u7236\u7c7b\u540d.\u7236\u7c7b\u65b9\u6cd5() class Vehicle: Country='China' def init (self,name,speed,load,power): self.name=name self.speed=speed self.load=load self.power=power def run(self): print('\u5f00\u52a8\u5566...') class Subway(Vehicle): def init (self,name,speed,load,power,line): Vehicle. init (self,name,speed,load,power) self.line=line def run(self): print('\u5730\u94c1%s\u53f7\u7ebf\u6b22\u8fce\u60a8' %self.line) Vehicle.run(self) line13=Subway('\u4e2d\u56fd\u5730\u94c1','180m/s','1000\u4eba/\u7bb1','\u7535',13) line13.run() **\u8f93\u51fa** \u5730\u94c113\u53f7\u7ebf\u6b22\u8fce\u60a8 \u5f00\u52a8\u5566... * \u65b9\u6cd5\u4e8c\uff1asuper() class Vehicle: Country='China' def init (self,name,speed,load,power): self.name=name self.speed=speed self.load=load self.power=power def run(self): print('\u5f00\u52a8\u5566...') class Subway(Vehicle): def init (self,name,speed,load,power,line): ,self) \u5c31\u76f8\u5f53\u4e8e\u5b9e\u4f8b\u672c\u8eab \u5728python3\u4e2dsuper()\u7b49\u540c\u4e8esuper(Subway,self) super(). init (name,speed,load,power) self.line=line def run(self): print('\u5730\u94c1%s\u53f7\u7ebf\u6b22\u8fce\u60a8' %self.line) super(Subway,self).run() class Mobike(Vehicle):#\u6469\u62dc\u5355\u8f66 pass line13=Subway('\u4e2d\u56fd\u5730\u94c1','180m/s','1000\u4eba/\u7bb1','\u7535',13) line13.run() **\u6ce8\u610f\uff1a** \u5f53\u4f60\u4f7f\u7528super()\u51fd\u6570\u65f6,Python\u4f1a\u5728MRO\u5217\u8868\u4e0a\u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7c7b\u3002\u53ea\u8981\u6bcf\u4e2a\u91cd\u5b9a\u4e49\u7684\u65b9\u6cd5\u7edf\u4e00\u4f7f\u7528super()\u5e76\u53ea\u8c03\u7528\u5b83\u4e00\u6b21,\u90a3\u4e48\u63a7\u5236\u6d41\u6700\u7ec8\u4f1a\u904d\u5386\u5b8c\u6574\u4e2aMRO\u5217\u8868,\u6bcf\u4e2a\u65b9\u6cd5\u4e5f\u53ea\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21 \u4f7f\u7528super\u8c03\u7528\u7684\u6240\u6709\u5c5e\u6027\uff0c\u90fd\u662f\u4eceMRO\u5217\u8868\u5f53\u524d\u7684\u4f4d\u7f6e\u5f80\u540e\u627e\uff0c\u5343\u4e07\u4e0d\u8981\u901a\u8fc7\u770b\u4ee3\u7801\u53bb\u627e\u7ee7\u627f\u5173\u7cfb\uff0c\u4e00\u5b9a\u8981\u770bMRO\u5217\u8868 ## \u4e94\u3001\u591a\u6001\u4e0e\u591a\u6001\u6027 ### 1.\u591a\u6001 \u591a\u6001\u6307\u7684\u662f\u4e00\u7c7b\u4e8b\u7269\u6709\u591a\u79cd\u5f62\u6001\uff0c\uff08\u4e00\u4e2a\u62bd\u8c61\u7c7b\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u56e0\u800c\u591a\u6001\u7684\u6982\u5ff5\u4f9d\u8d56\u4e8e\u7ee7\u627f\uff09\u3002 * \u5e8f\u5217\u7c7b\u578b\u6709\u591a\u79cd\u5f62\u6001\uff1a\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\u3002 * \u52a8\u7269\u6709\u591a\u79cd\u5f62\u6001\uff1a\u4eba\uff0c\u72d7\uff0c\u732a import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class People(Animal): :\u4eba def talk(self): print('say hello') class Dog(Animal): :\u72d7 def talk(self): print('say wangwang') class Pig(Animal): :\u732a def talk(self): print('say aoao') * \u6587\u4ef6\u6709\u591a\u79cd\u5f62\u6001\uff1a\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u6267\u884c\u6587\u4ef6 import abc class File(metaclass=abc.ABCMeta): :\u6587\u4ef6 @abc.abstractmethod def click(self): pass class Text(File): :\u6587\u672c\u6587\u4ef6 def click(self): print('open file') class ExeFile(File): :\u53ef\u6267\u884c\u6587\u4ef6 def click(self): print('execute file') ### 2.\u591a\u6001\u6027 \u591a\u6001\u6027\u662f\u6307\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u3002 \u6bd4\u5982\uff1a\u8001\u5e08.\u4e0b\u8bfe\u94c3\u54cd\u4e86\uff08\uff09\uff0c\u5b66\u751f.\u4e0b\u8bfe\u94c3\u54cd\u4e86()\uff0c\u8001\u5e08\u6267\u884c\u7684\u662f\u4e0b\u73ed\u64cd\u4f5c\uff0c\u5b66\u751f\u6267\u884c\u7684\u662f\u653e\u5b66\u64cd\u4f5c\uff0c\u867d\u7136\u4e8c\u8005\u6d88\u606f\u4e00\u6837\uff0c\u4f46\u662f\u6267\u884c\u7684\u6548\u679c\u4e0d\u540c\u3002 * \u9759\u6001\u591a\u6001\u6027\uff1a\u5982\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u7528\u8fd0\u7b97\u7b26+\u8fdb\u884c\u8fd0\u7b97 * \u52a8\u6001\u591a\u6001\u6027\uff1a import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class People(Animal): :\u4eba def talk(self): print('say hello') class Dog(Animal): :\u72d7 def talk(self): print('say wangwang') class Pig(Animal): :\u732a def talk(self): print('say aoao') def func(animal): animal.talk() people1=People() pig1=Pig() dog1=Dog() func(people1) func(pig1) func(dog1) \u591a\u6001\u6027\u662f\u2018\u4e00\u4e2a\u63a5\u53e3\uff08\u51fd\u6570func\uff09\uff0c\u591a\u79cd\u5b9e\u73b0\uff08\u5982f.click()\uff09\u2019 ### 3.\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u591a\u6001\u6027\uff1f * \u589e\u52a0\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027 \u4ee5\u4e0d\u53d8\u5e94\u4e07\u53d8\uff0c\u4e0d\u8bba\u5bf9\u8c61\u5343\u53d8\u4e07\u5316\uff0c\u4f7f\u7528\u8005\u90fd\u662f\u540c\u4e00\u79cd\u5f62\u5f0f\u53bb\u8c03\u7528\uff0c\u5982func(animal) * \u589e\u52a0\u4e86\u7a0b\u5e8f\u53ef\u6269\u5c55\u6027 \u901a\u8fc7\u7ee7\u627fanimal\u7c7b\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0c\u4f7f\u7528\u8005\u65e0\u9700\u66f4\u6539\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u8fd8\u662f\u7528 func(animal)\u53bb\u8c03\u7528 \u3000 import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class Cat(Animal): def talk(self): print('say miao') def func(animal): animal.talk() cat1=Cat() func(cat1) **\u8f93\u51fa** say miao \u8fd9\u6837\u6211\u4eec\u65b0\u589e\u4e86\u4e00\u4e2a\u5f62\u6001Cat\uff0c\u7531Cat\u7c7b\u4ea7\u751f\u7684\u5b9e\u4f8bcat1\uff0c\u4f7f\u7528\u8005\u53ef\u4ee5\u5728\u5b8c\u5168\u4e0d\u9700\u8981\u4fee\u6539\u81ea\u5df1\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u3002\u4f7f\u7528\u548c\u4eba\u3001\u72d7\u3001\u732a\u4e00\u6837\u7684\u65b9\u5f0f\u8c03\u7528cat1\u7684talk\u65b9\u6cd5\uff0c\u5373func(cat1) ## \u516d\u3001\u5c01\u88c5 ### 1.\u5c01\u88c5\u7684\u5b9a\u4e49 \u201c\u5c01\u88c5\u201d\u5c31\u662f\u5c06\u62bd\u8c61\u5f97\u5230\u7684\u6570\u636e\u548c\u884c\u4e3a\uff08\u6216\u529f\u80fd\uff09\u76f8\u7ed3\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u673a\u7684\u6574\u4f53\uff08\u5373\u7c7b\uff09\u3002 \u5c01\u88c5\u7684\u76ee\u7684\u662f\u589e\u5f3a\u5b89\u5168\u6027\u548c\u7b80\u5316\u7f16\u7a0b\uff0c\u4f7f\u7528\u8005\u4e0d\u5fc5\u4e86\u89e3\u5177\u4f53\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u53ea\u662f\u8981\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\uff0c\u4e00\u7279\u5b9a\u7684\u8bbf\u95ee\u6743\u9650\u6765\u4f7f\u7528\u7c7b\u7684\u6210\u5458\u3002 \u4fdd\u62a4\u9690\u79c1\u548c\u9694\u79bb\u590d\u6742\u5ea6\u3002 ### 2.\u5c01\u88c5\u7684\u5c42\u9762 \u7b2c\u4e00\u4e2a\u5c42\u9762\u7684\u5c01\u88c5\uff08\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\uff09\uff1a\u521b\u5efa\u7c7b\u548c\u5bf9\u8c61\u4f1a\u5206\u522b\u521b\u5efa\u4e8c\u8005\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u7c7b\u540d.\u6216\u8005obj.\u7684\u65b9\u5f0f\u53bb\u8bbf\u95ee\u91cc\u9762\u7684\u540d\u5b57\uff0c\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u5c01\u88c5\u3002 r1.nickname '\u8349\u4e1b\u4f26' Riven.camp 'Noxus' * **\u6ce8\u610f\uff1a** \u5bf9\u4e8e\u8fd9\u4e00\u5c42\u9762\u7684\u5c01\u88c5\uff08\u9690\u85cf\uff09\uff0c\u7c7b\u540d.\u548c\u5b9e\u4f8b\u540d.\u5c31\u662f\u8bbf\u95ee\u9690\u85cf\u5c5e\u6027\u7684\u63a5\u53e3 \u7b2c\u4e8c\u4e2a\u5c42\u9762\u7684\u5c01\u88c5\uff1a\u7c7b\u4e2d\u628a\u67d0\u4e9b\u5c5e\u6027\u548c\u65b9\u6cd5\u9690\u85cf\u8d77\u6765(\u6216\u8005\u8bf4\u5b9a\u4e49\u6210\u79c1\u6709\u7684)\uff0c\u53ea\u5728\u7c7b\u7684\u5185\u90e8\u4f7f\u7528\u3001\u5916\u90e8\u65e0\u6cd5\u8bbf\u95ee\uff0c\u6216\u8005\u7559\u4e0b\u5c11\u91cf\u63a5\u53e3\uff08\u51fd\u6570\uff09\u4f9b\u5916\u90e8\u8bbf\u95ee\u3002 **\u5728python\u4e2d\u7528\u53cc\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f\u5b9e\u73b0\u9690\u85cf\u5c5e\u6027\uff08\u8bbe\u7f6e\u6210\u79c1\u6709\u7684\uff09**\uff0c\u7c7b\u4e2d\u6240\u6709\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u540d\u79f0\u5982__x\u90fd\u4f1a\u81ea\u52a8\u53d8\u5f62\u6210\uff1a_\u7c7b\u540d__x\u7684\u5f62\u5f0f\uff1a class Foo: __x=1 def __test(self): print('from test') print(Foo. dict ) print(Foo. Foo__x) **\u8f93\u51fa** {'_Foo__test': , '__module_ ': ' main ', ' dict ': , ' weakref ': , ' doc ': None, '_Foo__x': 1} 1 class Teacher: def init (self,name,age): self.__name=name self.__age=age def tell_info ( self ) : print ( ' \u59d3\u540d:%s,\u5e74\u9f84:%s ' % ( self . __name , self . __age )) def set_info ( self , name , age ) : if not isinstance ( name , str ) : raise TypeError ( ' \u59d3\u540d\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b ' ) if not isinstance ( age , int ) : raise TypeError ( ' \u5e74\u9f84\u5fc5\u987b\u662f\u6574\u578b ' ) self . __name = name self . __age = age t=Teacher('hexin',18) t.tell_info() **\u8f93\u51fa** \u59d3\u540d:hexin,\u5e74\u9f84:18 \u8fd9\u79cd\u81ea\u52a8\u53d8\u5f62\u7684\u7279\u70b9\uff1a > 1.\u7c7b\u4e2d\u5b9a\u4e49\u7684__x\u53ea\u80fd\u5728\u5185\u90e8\u4f7f\u7528\uff0c\u5982self.__x\uff0c\u5f15\u7528\u7684\u5c31\u662f\u53d8\u5f62\u7684\u7ed3\u679c\u3002 > 2.\u8fd9\u79cd\u53d8\u5f62\u5176\u5b9e\u6b63\u662f\u9488\u5bf9\u5916\u90e8\u7684\u53d8\u5f62\uff0c\u5728\u5916\u90e8\u662f\u65e0\u6cd5\u901a\u8fc7__x\u8fd9\u4e2a\u540d\u5b57\u8bbf\u95ee\u5230\u7684\u3002 > 3.\u5728\u5b50\u7c7b\u5b9a\u4e49\u7684__x\u4e0d\u4f1a\u8986\u76d6\u5728\u7236\u7c7b\u5b9a\u4e49\u7684__x\uff0c\u56e0\u4e3a\u5b50\u7c7b\u4e2d\u53d8\u5f62\u6210\u4e86\uff1a_\u5b50\u7c7b\u540d__x,\u800c\u7236\u7c7b\u4e2d\u53d8\u5f62\u6210\u4e86\uff1a_\u7236\u7c7b\u540d__x\uff0c\u5373\u53cc\u4e0b\u6ed1\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u5728\u7ee7\u627f\u7ed9\u5b50\u7c7b\u65f6\uff0c\u5b50\u7c7b\u662f\u65e0\u6cd5\u8986\u76d6\u7684\u3002 **\u6ce8\u610f\uff1a**\u5bf9\u4e8e\u8fd9\u4e00\u5c42\u9762\u7684\u5c01\u88c5\uff08\u9690\u85cf\uff09\uff0c\u6211\u4eec\u9700\u8981\u5728\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff08\u63a5\u53e3\u51fd\u6570\uff09\u5728\u5b83\u5185\u90e8\u8bbf\u95ee\u88ab\u9690\u85cf\u7684\u5c5e\u6027\uff0c\u7136\u540e\u5916\u90e8\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86. \u8fd9\u79cd\u53d8\u5f62\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\uff1a > 1.\u8fd9\u79cd\u673a\u5236\u4e5f\u5e76\u6ca1\u6709\u771f\u6b63\u610f\u4e49\u4e0a\u9650\u5236\u6211\u4eec\u4ece\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u5c5e\u6027\uff0c\u77e5\u9053\u4e86\u7c7b\u540d\u548c\u5c5e\u6027\u540d\u5c31\u53ef\u4ee5\u62fc\u51fa\u540d\u5b57\uff1a_\u7c7b\u540d__\u5c5e\u6027\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\uff0c\u5982a._A__N > 2.\u53d8\u5f62\u7684\u8fc7\u7a0b\u53ea\u5728\u7c7b\u7684\u5b9a\u4e49\u662f\u53d1\u751f\u4e00\u6b21,\u5728\u5b9a\u4e49\u540e\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u53d8\u5f62 > 3.\u5728\u7ee7\u627f\u4e2d\uff0c\u7236\u7c7b\u5982\u679c\u4e0d\u60f3\u8ba9\u5b50\u7c7b\u8986\u76d6\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u79c1\u6709\u7684 ### 3. \u7279\u6027\uff08property\uff09 property\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u8bbf\u95ee\u5b83\u65f6\u4f1a\u6267\u884c\u4e00\u6bb5\u529f\u80fd\uff08\u51fd\u6570\uff09\u7136\u540e\u8fd4\u56de\u503c import math class Circle: def init (self,radius): self.radius=radius @property def area ( self ) : return math . pi * self . radius ** 2 @property def perimeter ( self ) : return 2 * math . pi * self . radius c=Circle(10) print(c.radius) print(c.area) ,\u4f1a\u89e6\u53d1\u4e00\u4e2a\u51fd\u6570\u7684\u6267\u884c,\u52a8\u6001\u8ba1\u7b97\u51fa\u4e00\u4e2a\u503c print(c.perimeter) **\u8f93\u51fa** 10 314.1592653589793 62.83185307179586 **\u6ce8\u610f\uff1a**\u6b64\u65f6\u7684\u7279\u6027arear\u548cperimeter\u4e0d\u80fd\u88ab\u8d4b\u503c c.area=3 ''' \u629b\u51fa\u5f02\u5e38: AttributeError: can't set attribute ''' \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u7279\u6027\uff1f \u5c06\u4e00\u4e2a\u7c7b\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u7279\u6027\u4ee5\u540e\uff0c\u5bf9\u8c61\u518d\u53bb\u4f7f\u7528\u7684\u65f6\u5019obj.name,\u6839\u672c\u65e0\u6cd5\u5bdf\u89c9\u81ea\u5df1\u7684name\u662f\u6267\u884c\u4e86\u4e00\u4e2a\u51fd\u6570\u7136\u540e\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u8fd9\u79cd\u7279\u6027\u7684\u4f7f\u7528\u65b9\u5f0f\u9075\u5faa\u4e86\u7edf\u4e00\u8bbf\u95ee\u7684\u539f\u5219 **\u8865\u5145\uff1a**\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u6709\u4e09\u79cd\u65b9\u5f0f: * \u3010public\u3011 \u8fd9\u79cd\u5176\u5b9e\u5c31\u662f\u4e0d\u5c01\u88c5,\u662f\u5bf9\u5916\u516c\u5f00\u7684 * \u3010protected\u3011 \u8fd9\u79cd\u5c01\u88c5\u65b9\u5f0f\u5bf9\u5916\u4e0d\u516c\u5f00,\u4f46\u5bf9\u670b\u53cb(friend)\u6216\u8005\u5b50\u7c7b\u516c\u5f00 * \u3010private\u3011 \u8fd9\u79cd\u5c01\u88c5\u5bf9\u8c01\u90fd\u4e0d\u516c\u5f00 python\u5e76\u6ca1\u6709\u5728\u8bed\u6cd5\u4e0a\u628a\u5b83\u4eec\u4e09\u4e2a\u5185\u5efa\u5230\u81ea\u5df1\u7684class\u673a\u5236\u4e2d\uff0c\u5728C++\u91cc\u4e00\u822c\u4f1a\u5c06\u6240\u6709\u7684\u6240\u6709\u7684\u6570\u636e\u90fd\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u7136\u540e\u63d0\u4f9bset\u548cget\u65b9\u6cd5\uff08\u63a5\u53e3\uff09\u53bb\u8bbe\u7f6e\u548c\u83b7\u53d6\uff0c\u5728python\u4e2d\u901a\u8fc7property\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0 class Foo: def init (self,val): self.__NAME=val @property def name ( self ) : return self . __NAME . name\u8bbf\u95ee\u7684\u662fself . __NAME ( \u8fd9\u4e5f\u662f\u771f\u5b9e\u503c\u7684\u5b58\u653e\u4f4d\u7f6e ) @name . setter def name ( self , value ) : if not isinstance ( value , str ) : raise TypeError ( '%s must be str' % value ) self . __NAME = value , \u5c06\u503cvalue\u5b58\u653e\u5230\u771f\u5b9e\u7684\u4f4d\u7f6eself . __NAME @name . deleter def name ( self ) : raise TypeError ( 'Can not delete' ) f=Foo('egon') print(f.name) f.name=10 'TypeError: 10 must be str' \u00b6 del f.name 'TypeError: Can not delete' \u4e00\u79cdproperty\u7684\u53e4\u8001\u7528\u6cd5 class Foo: def init (self,val): self.__NAME=val def getname ( self ) : return self . __NAME . name \u8bbf\u95ee\u7684\u662f self . __NAME ( \u8fd9\u4e5f\u662f\u771f\u5b9e\u503c\u7684\u5b58\u653e\u4f4d\u7f6e ) def setname ( self , value ) : if not isinstance ( value , str ) : raise TypeError ( ' %s must be str ' % value ) self . __NAME = value ,\u5c06\u503c value \u5b58\u653e\u5230\u771f\u5b9e\u7684\u4f4d\u7f6e self . __NAME def delname ( self ) : raise TypeError ( ' Can not delete ' ) name = property ( getname , setname , delname ) ``` 4.\u5c01\u88c5\u4e0e\u6269\u5c55\u6027 \u00b6 \u5c01\u88c5\u5728\u4e8e\u660e\u786e\u533a\u5206\u5185\u5916\uff0c\u4f7f\u5f97\u7c7b\u5b9e\u73b0\u8005\u53ef\u4ee5\u4fee\u6539\u5c01\u88c5\u5185\u7684\u4e1c\u897f\u800c\u4e0d\u5f71\u54cd\u5916\u90e8\u8c03\u7528\u8005\u7684\u4ee3\u7801\uff1b\u800c\u5916\u90e8\u4f7f\u7528\u7528\u8005\u53ea\u77e5\u9053\u4e00\u4e2a\u63a5\u53e3(\u51fd\u6570)\uff0c\u53ea\u8981\u63a5\u53e3\uff08\u51fd\u6570\uff09\u540d\u3001\u53c2\u6570\u4e0d\u53d8\uff0c\u4f7f\u7528\u8005\u7684\u4ee3\u7801\u6c38\u8fdc\u65e0\u9700\u6539\u53d8\u3002 ``` class Room: def init (self,name,owner,width,length,high): self.name=name self.owner=owner self.__width=width self.__length=length self.__high=high def tell_area(self): return self.__width * self.__length r1=Room('\u5367\u5ba4','hexin',20,20,20) r1.tell_area() 400 \u8981\u8ba1\u7b97\u4f53\u79ef class Room: def init (self,name,owner,width,length,high): self.name=name self.owner=owner self.__width=width self.__length=length self.__high=high def tell_area(self): ,\u5185\u90e8\u903b\u8f91\u53d8\u4e86,\u53ea\u9700\u6c42\u4fee\u8be5\u4e0b\u5217\u4e00\u884c\u5c31\u53ef\u4ee5\u5f88\u7b80\u7b54\u7684\u5b9e\u73b0,\u800c\u4e14\u5916\u90e8\u8c03\u7528\u611f\u77e5\u4e0d\u5230,\u4ecd\u7136\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f46\u662f\u529f\u80fd\u5df2\u7ecf\u53d8\u4e86 return self.__width * self.__length * self.__high \u5bf9\u4e8e\u4ecd\u7136\u5728\u4f7f\u7528tell_area\u63a5\u53e3\u7684\u4eba\u6765\u8bf4\uff0c\u6839\u672c\u65e0\u9700\u6539\u52a8\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u7528\u4e0a\u65b0\u529f\u80fd r1.tell_area() 8000 ## \u4e03\u3001\u7ed1\u5b9a\u65b9\u6cd5\u4e0e\u975e\u7ed1\u5b9a\u65b9\u6cd5 ### 1.\u5b9a\u4e49 \u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u5206\u6210\u4e24\u5927\u7c7b\uff1a * \u7ed1\u5b9a\u65b9\u6cd5\uff08\u7ed1\u5b9a\u7ed9\u8c01\uff0c\u8c01\u6765\u8c03\u7528\u5c31\u81ea\u52a8\u5c06\u5b83\u672c\u8eab\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09\uff1a \u3000 1.\u7ed1\u5b9a\u5230\u7c7b\u7684\u65b9\u6cd5\uff1a\u7528classmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3002\u4e3a\u7c7b\u91cf\u8eab\u5b9a\u5236 \u7c7b.boud_method(),\u81ea\u52a8\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165 \uff08\u5176\u5b9e\u5bf9\u8c61\u4e5f\u53ef\u8c03\u7528\uff0c\u4f46\u4ecd\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09 \u3000\u3000 2.\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1a\u6ca1\u6709\u88ab\u4efb\u4f55\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3002 \u4e3a\u5bf9\u8c61\u91cf\u8eab\u5b9a\u5236 \u5bf9\u8c61.boud_method(),\u81ea\u52a8\u5c06\u5bf9\u8c61\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165 \uff08\u5c5e\u4e8e\u7c7b\u7684\u51fd\u6570\uff0c\u7c7b\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u5fc5\u987b\u6309\u7167\u51fd\u6570\u7684\u89c4\u5219\u6765\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u90a3\u4e48\u4e00\u8bf4\uff09\u3000\u3000 * \u975e\u7ed1\u5b9a\u65b9\u6cd5\uff1a\u7528staticmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3000 \u3000 1.\u4e0e\u7c7b\u6216\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u90a3\u4e48\u4e00\u8bf4\u3002\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u5de5\u5177\u800c\u5df2\u3000\u3000\u3000\u3000 **\u6ce8\u610f\uff1a**\u4e0e\u7ed1\u5b9a\u5230\u5bf9\u8c61\u65b9\u6cd5\u533a\u5206\u5f00\uff0c\u5728\u7c7b\u4e2d\u76f4\u63a5\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u88ab\u4efb\u4f55\u88c5\u9970\u5668\u88c5\u9970\u7684\uff0c\u90fd\u662f\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u53ef\u4e0d\u662f\u666e\u901a\u51fd\u6570\uff0c\u5bf9\u8c61\u8c03\u7528\u8be5\u65b9\u6cd5\u4f1a\u81ea\u52a8\u4f20\u503c\uff0c\u800cstaticmethod\u88c5\u9970\u7684\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8c01\u6765\u8c03\u7528\uff0c\u90fd\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u4e00\u8bf4 ### 2.staticmethod statimethod\u4e0d\u4e0e\u7c7b\u6216\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u6548\u679c\uff0cpython\u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u51fd\u6570staticmethod\u6765\u628a\u7c7b\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u9759\u6001\u65b9\u6cd5\u3002 import hashlib import time class MySQL: def init (self,host,port): self.id=self.create_id() self.host=host self.port=port @staticmethod def create_id(): m=hashlib.md5(str(time.clock()).encode('utf-8')) return m.hexdigest() print(MySQL.create_id) MySQL.create_id at 0x0000000001E6B9D8> conn=MySQL('127.0.0.1',3306) print(conn.create_id) MySQL.create_id at 0x00000000026FB9D8> ### 3.classmethod classmehtod\u662f\u7ed9\u7c7b\u7528\u7684\uff0c\u5373\u7ed1\u5b9a\u5230\u7c7b\uff0c\u7c7b\u5728\u4f7f\u7528\u65f6\u4f1a\u5c06\u7c7b\u672c\u8eab\u5f53\u505a\u53c2\u6570\u4f20\u7ed9\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08\u5373\u4fbf\u662f\u5bf9\u8c61\u6765\u8c03\u7528\u4e5f\u4f1a\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09\uff0cpython\u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u51fd\u6570classmethod\u6765\u628a\u7c7b\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u7c7b\u65b9\u6cd5 settings.py HOST='127.0.0.1' PORT=3306 DB_PATH=r'C:\\Users\\Administrator\\PycharmProjects\\test\\\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\\test1\\db' import settings import hashlib import time class MySQL: def init (self,host,port): self.host=host self.port=port @classmethod def from_conf ( cls ) : print ( cls ) return cls ( settings . HOST , settings . PORT ) print(MySQL.from_conf) method MySQL.from_conf of > conn=MySQL.from_conf() print(conn.host,conn.port) conn.from_conf() \u6bd4\u8f83staticmethod\u548cclassmethod\u7684\u533a\u522b import settings class MySQL: def init (self,host,port): self.host=host self.port=port @staticmethod def from_conf(): return MySQL(settings.HOST,settings.PORT) # @classmethod # def from_conf ( cls ) : # return cls ( settings . HOST , settings . PORT ) def __str__ ( self ) : return '\u5c31\u4e0d\u544a\u8bc9\u4f60' class Mariadb(MySQL): def str (self): return '\u4e3b\u673a:%s \u7aef\u53e3:%s' %(self.host,self.port) m=Mariadb.from_conf() print(m) . str ,\u4f46\u662f\u7ed3\u679c\u89e6\u53d1\u4e86MySQL. str__\u7684\u6267\u884c\uff0c\u6253\u5370\u5c31\u4e0d\u544a\u8bc9\u4f60 \u5b9a\u4e49MySQL\u7c7b 1.\u5bf9\u8c61\u6709id\u3001host\u3001port\u4e09\u4e2a\u5c5e\u6027 2.\u5b9a\u4e49\u5de5\u5177create_id\uff0c\u5728\u5b9e\u4f8b\u5316\u65f6\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u968f\u673a\u751f\u6210id\uff0c\u4fdd\u8bc1id\u552f\u4e00 3.\u63d0\u4f9b\u4e24\u79cd\u5b9e\u4f8b\u5316\u65b9\u5f0f\uff0c\u65b9\u5f0f\u4e00\uff1a\u7528\u6237\u4f20\u5165host\u548cport \u65b9\u5f0f\u4e8c\uff1a\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6host\u548cport\u8fdb\u884c\u5b9e\u4f8b\u5316 4.\u4e3a\u5bf9\u8c61\u5b9a\u5236\u65b9\u6cd5\uff0csave\u548cget\uff0csave\u80fd\u81ea\u52a8\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d\uff0c\u6587\u4ef6\u540d\u4e3aid\u53f7\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2dDB_PATH;get\u65b9\u6cd5\u7528\u6765\u4ece\u6587\u4ef6\u4e2d\u53cd\u5e8f\u5217\u5316\u51fa\u5bf9\u8c61 .py\u5185\u5bb9 ''' HOST='127.0.0.1' PORT=3306 DB_PATH=r'C:\\Users\\Administrator\\PycharmProjects\\test\\\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\\test1\\db' ''' import settings import hashlib import time import random import pickle import os class MySQL: def __init (self,host,port): self.id=self.create_id() self.host=host self.port=port def save(self): file_path=r'%s%s%s' %(settings.DB_PATH,os.sep,self.id) pickle.dump(self,open(file_path,'wb')) def get ( self ): file_path = r ' %s%s%s ' % ( settings . DB_PATH , os . sep , self . id ) return pickle . load ( open ( file_path , 'rb' )) @ staticmethod def create_id (): m = hashlib . md5 ( str ( time . clock ()) . encode ( 'utf-8' )) . time () \uff0c\u5426\u5219\u4f1a\u51fa\u73b0 id\u91cd\u590d return m . hexdigest () @ classmethod def from_conf ( cls ): print ( cls ) return cls ( settings . HOST , settings . PORT ) print(MySQL.from_conf) method MySQL.from_conf of > \u00b6 conn=MySQL.from_conf() print(conn.id) \u00b6 print(conn.create_id()) print(MySQL.create_id()) print(conn.id) \u00b6 conn.save() \u00b6 obj=conn.get() \u00b6 print(obj.id) \u00b6 \u5c0f\u7ec3\u4e60 import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day @staticmethod def now(): .now()\u7684\u5f62\u5f0f\u53bb\u4ea7\u751f\u5b9e\u4f8b,\u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u5f53\u524d\u65f6\u95f4 t=time.localtime() return Date(t.tm_year,t.tm_mon,t.tm_mday) @staticmethod def tomorrow():#\u7528Date.tomorrow()\u7684\u5f62\u5f0f\u53bb\u4ea7\u751f\u5b9e\u4f8b,\u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u660e\u5929\u7684\u65f6\u95f4 t=time.localtime(time.time()+86400) return Date(t.tm_year,t.tm_mon,t.tm_mday) a=Date('1987',11,27) b=Date.now() c=Date.tomorrow() print(a.year,a.month,a.day) print(b.year,b.month,b.day) print(c.year,c.month,c.day) **\u8f93\u51fa** 1987 11 27 2017 6 15 2017 6 16 import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day @staticmethod def now(): t=time.localtime() return Date(t.tm_year,t.tm_mon,t.tm_mday) class EuroDate(Date): def str (self): return 'year:%s month:%s day:%s' %(self.year,self.month,self.day) e=EuroDate.now() print(e) . str ,\u4f46\u662f\u7ed3\u679c\u4e3a ''' \u8f93\u51fa\u7ed3\u679c: < main .Date object at 0x1013f9d68> ''' \u56e0\u4e3ae\u5c31\u662f\u7528Date\u7c7b\u4ea7\u751f\u7684,\u6240\u4ee5\u6839\u672c\u4e0d\u4f1a\u89e6\u53d1EuroDate. str ,\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u7528classmethod import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day # @staticmethod # def now(): # t=time.localtime() # return Date(t.tm_year,t.tm_mon,t.tm_mday) @classmethod def now ( cls ) : t = time . localtime () return cls ( t . tm_year , t . tm_mon , t . tm_mday ) , \u5373\u7528\u54ea\u4e2a\u7c7bcls\u6765\u5b9e\u4f8b\u5316 class EuroDate(Date): def str (self): return 'year:%s month:%s day:%s' %(self.year,self.month,self.day) e=EuroDate.now() print(e) . str ,\u6b64\u65f6e\u5c31\u662f\u7531EuroDate\u4ea7\u751f\u7684,\u6240\u4ee5\u4f1a\u5982\u6211\u4eec\u6240\u613f ''' \u8f93\u51fa\u7ed3\u679c: year:2017 month:3 day:3 ''' ```","title":"10 Python\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#_1","text":"","title":"\u4e00\u3001\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u7531\u6765"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#11940","text":"\u6700\u65e9\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u90fd\u662f\u91c7\u7528\u673a\u5668\u8bed\u8a00\u6765\u7f16\u5199\u7684,\u76f4\u63a5\u4f7f\u7528\u4e8c\u8fdb\u5236\u7801\u6765\u8868\u793a\u673a\u5668\u80fd\u591f\u8bc6\u522b\u548c\u6267\u884c\u7684\u6307\u4ee4\u548c\u6570\u636e\u3002 \u7b80\u5355\u6765\u8bf4,\u5c31\u662f\u76f4\u63a5\u7f16\u5199 0 \u548c 1 \u7684\u5e8f\u5217\u6765\u4ee3\u8868\u7a0b\u5e8f\u8bed\u8a00\u3002\u4f8b\u5982:\u4f7f\u7528 0000 \u4ee3\u8868 \u52a0\u8f7d(LOAD),0001 \u4ee3\u8868 \u5b58\u50a8(STORE)\u7b49\u3002 \u4f18\u70b9\uff1a\u673a\u5668\u8bed\u8a00\u7531\u673a\u5668\u76f4\u63a5\u6267\u884c,\u901f\u5ea6\u5feb\uff1b \u7f3a\u70b9\uff1a\u5199\u6bd4\u8f83\u56f0\u96be\uff0c\u4fee\u6539\u4e5f\u9ebb\u70e6\uff0c\u8fd9\u6837\u76f4\u63a5\u5bfc\u81f4\u7a0b\u5e8f\u7f16\u5199\u6548\u7387\u5341\u5206\u4f4e\u4e0b,\u7f16\u5199\u7a0b\u5e8f\u82b1\u8d39\u7684\u65f6\u95f4\u5f80\u5f80\u662f\u5b9e\u9645\u8fd0\u884c\u65f6\u95f4\u7684\u51e0\u5341\u500d\u6216\u51e0\u767e\u500d\u3002 \u7531\u4e8e\u673a\u5668\u8bed\u8a00\u5b9e\u5728\u662f\u592a\u96be\u7f16\u5199\u4e86,\u4e8e\u662f\u5c31\u53d1\u5c55\u51fa\u4e86\u6c47\u7f16\u8bed\u8a00\u3002 \u6c47\u7f16\u8bed\u8a00\u4ea6\u79f0\u7b26\u53f7\u8bed\u8a00,\u7528\u52a9\u8bb0\u7b26\u4ee3\u66ff\u673a\u5668 \u6307\u4ee4\u7684\u64cd\u4f5c\u7801,\u7528\u5730\u5740\u7b26\u53f7(Symbol)\u6216\u6807\u53f7(Label)\u4ee3\u66ff\u6307\u4ee4\u6216\u64cd\u4f5c\u6570\u7684\u5730\u5740\u3002 \u6c47\u7f16\u8bed\u8a00\u7531\u4e8e\u662f\u91c7\u7528\u4e86\u52a9\u8bb0\u7b26\u53f7\u6765\u7f16\u5199\u7a0b\u5e8f,\u6bd4\u7528\u673a\u5668\u8bed\u8a00\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\u7f16\u7a0b\u8981\u65b9\u4fbf\u4e9b,\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7b80\u5316\u4e86\u7f16\u7a0b\u8fc7\u7a0b\u3002\u4f8b\u5982 \u4f7f\u7528 LOAD \u6765\u4ee3\u66ff 0000,\u4f7f\u7528 STORE \u6765\u4ee3\u66ff 0001\u3002 \u5373\u4f7f\u6c47\u7f16\u8bed\u8a00\u76f8\u6bd4\u673a\u5668\u8bed\u8a00\u63d0\u5347\u4e86\u53ef\u8bfb\u6027,\u4f46\u5176\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u79cd\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00,\u7f16\u5199\u540c\u6837\u56f0\u96be,\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519\u3002","title":"1.\u7b2c\u4e00\u9636\u6bb5\uff1a\u9762\u5411\u673a\u5668\uff0c1940\u5e74\u4ee5\u524d"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#2","text":"\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u901a\u5e38\u60c5\u51b5\u4e0b\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u201c\u4f4e\u7ea7\u8bed\u8a00\u201d,\u4e3a\u4e86\u89e3\u51b3\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u5b58\u5728\u7684\u95ee\u9898,\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u524d\u8f88\u4eec\u53c8\u521b\u5efa\u4e86\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u3002 \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u201c\u9ad8\u7ea7\u8bed\u8a00\u201d,\u76f8\u6bd4\u9762\u5411\u673a\u5668\u7684\u8bed\u8a00\u6765\u8bf4,\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u5df2\u7ecf\u4e0d\u518d\u5173\u6ce8\u673a\u5668\u672c\u8eab\u7684\u64cd\u4f5c\u6307\u4ee4\u3001\u5b58\u50a8\u7b49\u65b9\u9762,\u800c\u662f\u5173\u6ce8\u5982\u4f55\u4e00\u6b65\u4e00\u6b65\u7684\u89e3\u51b3\u5177\u4f53\u7684\u95ee\u9898,\u5373:\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b,\u8fd9\u5e94\u8be5\u4e5f\u662f\u9762\u5411\u8fc7\u7a0b\u8bf4\u6cd5\u7684\u6765\u7531\u3002 \u76f8\u6bd4\u9762\u5411\u673a\u5668\u7684\u601d\u60f3\u6765\u8bf4,\u9762\u5411\u8fc7\u7a0b\u662f\u4e00\u6b21\u601d\u60f3\u4e0a\u7684\u98de\u8dc3,\u5c06\u7a0b\u5e8f\u5458\u4ece\u590d\u6742\u7684\u673a\u5668\u64cd\u4f5c\u548c\u8fd0\u884c\u7684\u7ec6\u8282\u4e2d\u89e3\u653e\u51fa\u6765,\u8f6c\u800c\u5173\u6ce8\u5177\u4f53\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898; \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u4e5f\u4e0d\u518d\u9700\u8981\u548c\u5177\u4f53\u7684\u673a\u5668\u7ed1\u5b9a,\u4ece\u800c\u5177\u5907\u4e86\u79fb\u690d\u6027\u548c\u901a\u7528\u6027; \u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u672c\u8eab\u4e5f\u66f4\u52a0\u5bb9\u6613\u7f16\u5199\u548c\u7ef4\u62a4\u3002 \u8fd9\u4e9b\u56e0\u7d20\u53e0\u52a0\u8d77\u6765,\u5927\u5927\u51cf\u8f7b\u4e86\u7a0b\u5e8f\u5458\u7684\u8d1f\u62c5, \u63d0\u5347\u4e86\u7a0b\u5e8f\u5458\u7684\u5de5\u4f5c\u6548\u7387,\u4ece\u800c\u4fc3\u8fdb\u4e86\u8f6f\u4ef6\u884c\u4e1a\u7684\u5feb\u901f\u53d1\u5c55\u3002 \u5178\u578b\u7684\u9762\u5411\u8fc7\u7a0b\u7684\u8bed\u8a00\u6709:COBOL\u3001FORTRAN\u3001BASIC\u3001C \u8bed\u8a00\u7b49\u3002","title":"2.\u7b2c\u4e8c\u9636\u6bb5\uff1a\u9762\u5411\u8fc7\u7a0b"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#3","text":"\u6839\u672c\u539f\u56e0\u5c31\u662f\u4e00\u4e9b\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\u4e2d\u7684goto\u8bed\u53e5\u5bfc\u81f4\u7684\u9762\u6761\u5f0f\u4ee3\u7801\uff0c\u6781\u5927\u7684\u9650\u5236\u4e86\u7a0b\u5e8f\u7684\u89c4\u6a21\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\uff08\u82f1\u8bed\uff1aStructured programming\uff09\uff0c\u4e00\u79cd\u7f16\u7a0b\u8303\u578b\u3002\u5b83\u91c7\u7528\u5b50\u7a0b\u5e8f\uff08\u51fd\u6570\u5c31\u662f\u4e00\u79cd\u5b50\u7a0b\u5e8f\uff09\u3001\u4ee3\u7801\u533a\u5757\u3001for\u5faa\u73af\u4ee5\u53cawhile\u5faa\u73af\u7b49\u7ed3\u6784\uff0c\u6765\u66ff\u6362\u4f20\u7edf\u7684goto\u3002\u5e0c\u671b\u501f\u6b64\u6765\u6539\u5584\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u660e\u6670\u6027\u3001\u8d28\u91cf\u4ee5\u53ca\u5f00\u53d1\u65f6\u95f4\uff0c\u5e76\u4e14\u907f\u514d\u5199\u51fa\u9762\u6761\u5f0f\u4ee3\u7801\u3002 \u968f\u7740\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u98de\u901f\u53d1\u5c55,\u4ee5\u53ca\u5e94\u7528\u590d\u6742\u5ea6\u8d8a\u6765\u8d8a\u9ad8,\u8f6f\u4ef6\u89c4\u6a21\u8d8a\u6765\u8d8a\u5927,\u539f\u6709\u7684\u7a0b\u5e8f\u5f00\u53d1\u65b9\u5f0f\u5df2\u7ecf\u8d8a\u6765\u8d8a\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u4e86\u30021960 \u5e74\u4ee3\u4e2d\u671f\u5f00\u59cb\u7206\u53d1\u4e86\u7b2c\u4e00\u6b21\u8f6f\u4ef6\u5371\u673a,\u5178\u578b\u8868\u73b0\u6709\u8f6f\u4ef6\u8d28\u91cf\u4f4e\u4e0b\u3001\u9879\u76ee\u65e0\u6cd5\u5982\u671f\u5b8c\u6210\u3001\u9879\u76ee\u4e25\u91cd\u8d85\u652f\u7b49,\u56e0\u4e3a\u8f6f\u4ef6\u800c\u5bfc\u81f4\u7684\u91cd\u5927\u4e8b\u6545\u65f6\u6709\u53d1\u751f\u3002\u4f8b\u5982 1963 \u5e74\u7f8e\u56fd ( http://en.wikipedia.org/wiki/Mariner_1 ) \u7684\u6c34\u624b\u4e00\u53f7\u706b\u7bad\u53d1\u5c04\u5931\u8d25\u4e8b\u6545,\u5c31\u662f\u56e0\u4e3a\u4e00\u884c FORTRAN \u4ee3\u7801 \u9519\u8bef\u5bfc\u81f4\u7684\u3002 \u8f6f\u4ef6\u5371\u673a\u6700\u5178\u578b\u7684\u4f8b\u5b50\u83ab\u8fc7\u4e8e IBM \u7684 System/360 \u7684\u64cd\u4f5c\u7cfb\u7edf\u5f00\u53d1\u3002\u4f5b\u745e\u5fb7\u00b7\u5e03\u9c81\u514b\u65af(Frederick P. Brooks, Jr.)\u4f5c\u4e3a\u9879\u76ee\u4e3b\u7ba1,\u7387\u9886 2000 \u591a\u4e2a\u7a0b\u5e8f\u5458\u591c\u4ee5\u7ee7\u65e5\u7684\u5de5\u4f5c,\u5171\u8ba1\u82b1\u8d39\u4e86 5000 \u4eba\u4e00\u5e74\u7684\u5de5\u4f5c\u91cf,\u5199\u51fa\u5c06\u8fd1 100 \u4e07\u884c\u7684\u6e90\u7801,\u603b\u5171\u6295\u5165 5 \u4ebf\u7f8e\u5143,\u662f\u7f8e\u56fd\u7684\u201c\u66fc\u54c8\u987f\u201d\u539f\u5b50\u5f39\u8ba1\u5212\u6295\u5165\u7684 \u00bc\u3002\u5c3d\u7ba1\u6295\u5165\u5982\u6b64\u5de8\u5927, \u4f46\u9879\u76ee\u8fdb\u5ea6\u5374\u4e00\u518d\u5ef6\u8fdf,\u8f6f\u4ef6\u8d28\u91cf\u4e5f\u5f97\u4e0d\u5230\u4fdd\u969c\u3002\u5e03\u9c81\u514b\u65af\u540e\u6765\u57fa\u4e8e\u8fd9\u4e2a\u9879\u76ee\u7ecf\u9a8c\u800c\u603b\u7ed3\u7684\u300a\u4eba\u6708\u795e\u8bdd\u300b \u4e00\u4e66,\u6210\u4e86\u53f2\u4e0a\u6700\u7545\u9500\u7684\u8f6f\u4ef6\u5de5\u7a0b\u4e66\u7c4d\u3002 \u4e3a\u4e86\u89e3\u51b3\u95ee\u9898,\u5728 1968\u30011969 \u5e74\u8fde\u7eed\u53ec\u5f00\u4e24\u6b21\u8457\u540d\u7684 NATO \u4f1a\u8bae,\u4f1a\u8bae\u6b63\u5f0f\u521b\u9020\u4e86\u201c\u8f6f\u4ef6\u5371\u673a\u201d\u4e00\u8bcd, \u5e76\u63d0\u51fa\u4e86\u9488\u5bf9\u6027\u7684\u89e3\u51b3\u65b9\u6cd5\u201c\u8f6f\u4ef6\u5de5\u7a0b\u201d\u3002\u867d\u7136\u201c\u8f6f\u4ef6\u5de5\u7a0b\u201d\u63d0\u51fa\u4e4b\u540e\u4e5f\u66fe\u88ab\u89c6\u4e3a\u8f6f\u4ef6\u9886\u57df\u7684\u94f6\u5f39,\u4f46\u540e\u6765\u4e8b\u5b9e\u8bc1\u660e,\u8f6f\u4ef6\u5de5\u7a0b\u540c\u6837\u65e0\u6cd5\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u3002 \u5dee\u4e0d\u591a\u540c\u4e00\u65f6\u95f4,\u201c\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u201d\u4f5c\u4e3a\u53e6\u5916\u4e00\u79cd\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u65b9\u6848\u88ab\u63d0\u51fa\u6765\u4e86\u3002 Edsger Dijkstra \u4e8e 1968 \u53d1\u8868\u4e86\u8457\u540d\u7684\u300aGOTO \u6709\u5bb3\u8bba\u300b\u7684\u8bba\u6587,\u5f15\u8d77\u4e86\u957f\u8fbe\u6570\u5e74\u7684\u8bba\u6218,\u5e76\u7531\u6b64\u4ea7\u751f\u4e86\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u65b9 \u6cd5\u3002\u540c\u65f6,\u7b2c\u4e00\u4e2a\u7ed3\u6784\u5316\u7684\u7a0b\u5e8f\u8bed\u8a00 Pascal \u4e5f\u5728\u6b64\u65f6\u8bde\u751f,\u5e76\u8fc5\u901f\u6d41\u884c\u8d77\u6765\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e3b\u8981\u7279\u70b9\u662f\u629b\u5f03 goto \u8bed\u53e5,\u91c7\u53d6\u201c\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u7ec6\u5316\u3001\u6a21\u5757\u5316\u201d\u7684\u6307\u5bfc\u601d\u60f3\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u672c\u8d28\u4e0a\u8fd8\u662f\u4e00\u79cd\u9762\u5411\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u601d\u60f3,\u4f46\u901a\u8fc7\u201c\u81ea\u9876\u5411\u4e0b\u3001\u9010\u6b65\u7ec6\u5316\u3001\u6a21\u5757\u5316\u201d\u7684\u65b9\u6cd5,\u5c06\u8f6f\u4ef6\u7684\u590d\u6742\u5ea6\u63a7\u5236\u5728\u4e00\u5b9a\u8303\u56f4\u5185,\u4ece\u800c\u4ece\u6574\u4f53\u4e0a\u964d\u4f4e\u4e86\u8f6f\u4ef6\u5f00\u53d1\u7684\u590d\u6742\u5ea6\u3002 \u7ed3\u6784\u5316\u7a0b\u5e8f\u65b9\u6cd5\u6210\u4e3a\u4e86 1970 \u5e74 \u4ee3\u8f6f\u4ef6\u5f00\u53d1\u7684\u6f6e\u6d41\u3002 \u79d1\u5b66\u7814\u7a76\u8bc1\u660e,\u4eba\u8111\u5b58\u5728\u4eba\u7c7b\u77ed\u671f\u8bb0\u5fc6\u4e00\u822c\u4e00\u6b21\u53ea\u80fd\u8bb0\u4f4f 5-9 \u4e2a\u4e8b\u7269,\u8fd9\u5c31\u662f\u8457\u540d\u7684 7+- 2 \u539f\u7406\u3002\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u662f\u9762\u5411\u8fc7\u7a0b\u8bbe\u8ba1\u601d\u60f3\u7684\u4e00\u4e2a\u6539\u8fdb,\u4f7f\u5f97\u8f6f\u4ef6\u5f00\u53d1\u66f4\u52a0\u7b26\u5408\u4eba\u7c7b\u601d\u7ef4\u7684 7+-2 \u7279\u70b9\u3002","title":"3.\u7b2c\u4e09\u9636\u6bb5\uff1a\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#4","text":"\u7ed3\u6784\u5316\u7f16\u7a0b\u7684\u98ce\u9761\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7f13\u89e3\u4e86\u8f6f\u4ef6\u5371\u673a,\u7136\u800c\u597d\u666f\u4e0d\u957f,\u968f\u7740\u786c\u4ef6\u7684\u5feb\u901f\u53d1\u5c55,\u4e1a\u52a1\u9700\u6c42\u8d8a\u6765\u8d8a\u590d\u6742,\u4ee5\u53ca\u7f16\u7a0b\u5e94\u7528\u9886\u57df\u8d8a\u6765\u8d8a\u5e7f\u6cdb,\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u5f88\u5feb\u5c31\u5230\u6765\u4e86\u3002 \u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u7684\u6839\u672c\u539f\u56e0\u8fd8\u662f\u5728\u4e8e\u8f6f\u4ef6\u751f\u4ea7\u529b\u8fdc\u8fdc\u8ddf\u4e0d\u4e0a\u786c\u4ef6\u548c\u4e1a\u52a1\u7684\u53d1\u5c55,\u76f8\u6bd4\u7b2c\u4e00\u6b21\u8f6f\u4ef6\u5371\u673a\u4e3b\u8981\u4f53\u73b0\u5728\u201c\u590d\u6742\u6027\u201d,\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u4e3b\u8981\u4f53\u73b0\u5728\u201c\u53ef\u6269\u5c55\u6027\u201d\u3001\u201c\u53ef\u7ef4\u62a4\u6027\u201d\u4e0a\u9762\u3002 \u4f20\u7edf\u7684\u9762\u5411\u8fc7\u7a0b(\u5305\u62ec \u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1)\u65b9\u6cd5\u5df2\u7ecf\u8d8a\u6765\u8d8a\u4e0d\u80fd\u9002\u5e94\u5feb\u901f\u591a\u53d8\u7684\u4e1a\u52a1\u9700\u6c42\u4e86,\u8f6f\u4ef6\u9886\u57df\u8feb\u5207\u5e0c\u671b\u627e\u5230\u65b0\u7684\u94f6\u5f39\u6765\u89e3 \u51b3\u8f6f\u4ef6\u5371\u673a,\u5728\u8fd9\u79cd\u80cc\u666f\u4e0b,\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5f00\u59cb\u6d41\u884c\u8d77\u6765\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u5e76\u4e0d\u662f\u5728\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u540e\u624d\u51fa\u73b0\u7684,\u65e9\u5728 1967 \u5e74\u7684 Simula \u8bed\u8a00\u4e2d\u5c31\u5f00\u59cb\u63d0\u51fa\u6765\u4e86,\u4f46\u7b2c\u4e8c\u6b21\u8f6f\u4ef6\u5371\u673a\u4fc3\u8fdb\u4e86\u9762\u5411\u5bf9\u8c61\u7684\u53d1\u5c55\u3002 \u9762\u5411\u5bf9\u8c61\u771f\u6b63\u5f00\u59cb\u6d41\u884c\u662f\u5728 1980s \u5e74\u4ee3,\u4e3b\u8981\u5f97\u76ca\u4e8e C++\u7684\u529f \u52b3,\u540e\u6765\u7684 Java\u3001C#\u628a\u9762\u5411\u5bf9\u8c61\u63a8\u5411\u4e86\u65b0\u7684\u9ad8\u5cf0\u3002\u5230\u73b0\u5728\u4e3a\u6b62,\u9762\u5411\u5bf9\u8c61\u5df2\u7ecf\u6210\u4e3a\u4e86\u4e3b\u6d41\u7684\u5f00\u53d1\u601d\u60f3\u3002 \u867d\u7136\u9762\u5411\u5bf9\u8c61\u5f00\u59cb\u4e5f\u88ab\u5f53\u505a\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u94f6\u5f39,\u4f46\u4e8b\u5b9e\u8bc1\u660e,\u548c\u8f6f\u4ef6\u5de5\u7a0b\u4e00\u6837,\u9762\u5411\u5bf9\u8c61\u4e5f\u4e0d\u662f\u94f6\u5f39, \u800c\u53ea\u662f\u4e00\u79cd\u65b0\u7684\u8f6f\u4ef6\u65b9\u6cd5\u800c\u5df2\u3002 \u867d\u7136\u9762\u5411\u5bf9\u8c61\u5e76\u4e0d\u662f\u89e3\u51b3\u8f6f\u4ef6\u5371\u673a\u7684\u94f6\u5f39,\u4f46\u548c\u9762\u5411\u8fc7\u7a0b\u76f8\u6bd4,\u9762\u5411\u5bf9\u8c61\u7684\u601d\u60f3\u66f4\u52a0\u8d34\u8fd1\u4eba\u7c7b\u601d\u7ef4\u7684\u7279\u70b9, \u66f4\u52a0\u8131\u79bb\u673a\u5668\u601d\u7ef4,\u662f\u4e00\u6b21\u8f6f\u4ef6\u8bbe\u8ba1\u601d\u60f3\u4e0a\u7684\u98de\u8dc3\u3002 \u8865\u5145\uff1a \u7f16\u7a0b\u8bed\u8a00\u53d1\u5c55\u53f2\u4e0a\u7684\u6770\u51fa\u4eba\u7269 \u7ea6\u7ff0\u00b7\u5df4\u79d1\u65af\uff0c\u53d1\u660e\u4e86Fortran\u3002 \u963f\u5170\u00b7\u5e93\u73c0\uff0c\u5f00\u53d1\u4e86Visual Basic\u3002 \u827e\u5179\u683c\u00b7\u8fea\u6770\u65af\u7279\u62c9\uff0c\u5f00\u521b\u4e86\u6b63\u786e\u8fd0\u7528\u7f16\u7a0b\u8bed\u8a00(proper programming)\u7684\u6846\u67b6\u3002 \u8a79\u59c6\u65af\u00b7\u9ad8\u65af\u6797\uff0c\u5f00\u53d1\u4e86Oak\uff0c\u8be5\u8bed\u8a00\u4e3aJava\u7684\u5148\u9a71\u3002 \u5b89\u5fb7\u65af\u00b7\u6d77\u5c14\u65af\u4f2f\u683c\uff0c\u5f00\u53d1\u4e86Turbo Pascal\u3001Delphi\uff0c\u4ee5\u53caC#\u3002 \u845b\u4e3d\u4e1d\u00b7\u970d\u666e\uff0c\u5f00\u53d1\u4e86Flow-Matic\uff0c\u8be5\u8bed\u8a00\u5bf9COBOL\u9020\u6210\u4e86\u5f71\u54cd\u3002 \u80af\u5c3c\u65af\u00b7\u827e\u4f5b\u68ee\uff0c\u5f00\u53d1\u4e86APL\uff0c\u5e76\u4e0eRoger Hui\u5408\u4f5c\u5f00\u53d1\u4e86J\u3002 \u6bd4\u5c14\u00b7\u4e54\u4f0a\uff0c\u53d1\u660e\u4e86vi\uff0cBSD Unix\u7684\u524d\u671f\u4f5c\u8005\uff0c\u4ee5\u53caSunOS\u7684\u53d1\u8d77\u4eba\uff0c\u8be5\u64cd\u4f5c\u7cfb\u7edf\u540e\u6765\u6539\u540d\u4e3aSolaris\u3002 \u827e\u4f26\u00b7\u51ef\uff0c\u5f00\u521b\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\uff0c\u4ee5\u53caSmalltalk\u7684\u53d1\u8d77\u4eba\u3002 Brian Kernighan\uff0c\u4e0e\u4e39\u5c3c\u65af\u00b7\u91cc\u5947\u5408\u8457\u7b2c\u4e00\u672cC\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u4e66\u7c4d\uff0c\u540c\u65f6\u4e5f\u662fAWK\u4e0eAMPL\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u7684\u5171\u540c\u4f5c\u8005\u3002 \u7ea6\u7ff0\u00b7\u9ea6\u5361\u9521\uff0c\u53d1\u660e\u4e86LISP\u3002 \u7ea6\u7ff0\u00b7\u51af\u00b7\u8bfa\u4f0a\u66fc\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6982\u5ff5\u7684\u53d1\u8d77\u8005\u3002 \u4e39\u5c3c\u65af\u00b7\u91cc\u5947\uff0c\u53d1\u660e\u4e86C\u3002 \u6bd4\u96c5\u5c3c\u00b7\u65af\u7279\u52b3\u65af\u7279\u9c81\u666e\uff0c\u5f00\u53d1\u4e86C++\u3002 \u80af\u00b7\u6c64\u666e\u900a\uff0c\u53d1\u660e\u4e86Unix\u3002 \u5c3c\u514b\u52b3\u65af\u00b7\u7ef4\u5c14\u7279\uff0c\u53d1\u660e\u4e86Pascal\u4e0eModula\u3002 \u62c9\u91cc\u00b7\u6c83\u5c14\uff0c\u521b\u9020\u4e86Perl\u4e0ePerl 6\u3002 \u5409\u591a\u00b7\u8303\u7f57\u82cf\u59c6\uff0c\u521b\u9020\u4e86Python\u3002","title":"4.\u7b2c\u56db\u9636\u6bb5\uff1a\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#_2","text":"\u9762\u5411\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6838\u5fc3\u662f\u8fc7\u7a0b\uff08\u6d41\u6c34\u7ebf\u5f0f\u601d\u7ef4\uff09\uff0c\u8fc7\u7a0b\u5373\u89e3\u51b3\u95ee\u9898\u7684\u6b65\u9aa4\uff0c\u9762\u5411\u8fc7\u7a0b\u7684\u8bbe\u8ba1\u5c31\u597d\u6bd4\u7cbe\u5fc3\u8bbe\u8ba1\u597d\u4e00\u6761\u6d41\u6c34\u7ebf\uff0c\u8003\u8651\u5468\u5168\u4ec0\u4e48\u65f6\u5019\u5904\u7406\u4ec0\u4e48\u4e1c\u897f\u3002 **\u4f18\u70b9\u662f\uff1a**\u6781\u5927\u7684\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u590d\u6742\u5ea6\uff1b **\u7f3a\u70b9\u662f\uff1a**\u53ef\u6269\u5c55\u6027\u5dee\uff0c\u4fee\u6539\u4ee3\u7801\u9ebb\u70e6\uff1b **\u5e94\u7528\u573a\u666f\uff1a**\u4e00\u65e6\u5b8c\u6210\u57fa\u672c\u5f88\u5c11\u6539\u53d8\u7684\u573a\u666f\uff0c\u8457\u540d\u7684\u4f8b\u5b50\u6709Linux\u5167\u6838\uff0cgit\uff0c\u4ee5\u53caApache HTTP Server\u7b49\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6838\u5fc3\u662f\u5bf9\u8c61\uff08\u4e0a\u5e1d\u5f0f\u601d\u7ef4\uff09\uff0c\u8981\u7406\u89e3\u5bf9\u8c61\u4e3a\u4f55\u7269\uff0c\u5fc5\u987b\u628a\u81ea\u5df1\u5f53\u6210\u4e0a\u5e1d\uff0c\u4e0a\u5e1d\u773c\u91cc\u4e16\u95f4\u5b58\u5728\u7684\u4e07\u7269\u7686\u4e3a\u5bf9\u8c61\uff0c\u4e0d\u5b58\u5728\u7684\u4e5f\u53ef\u4ee5\u521b\u9020\u51fa\u6765\u3002\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u597d\u6bd4\u5982\u6765\u8bbe\u8ba1\u897f\u6e38\u8bb0\uff0c\u5982\u6765\u8981\u89e3\u51b3\u7684\u95ee\u9898\u662f\u628a\u7ecf\u4e66\u4f20\u7ed9\u4e1c\u571f\u5927\u5510\uff0c\u5982\u6765\u60f3\u4e86\u60f3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u9700\u8981\u56db\u4e2a\u4eba\uff1a\u5510\u50e7\uff0c\u6c99\u548c\u5c1a\uff0c\u732a\u516b\u6212\uff0c\u5b59\u609f\u7a7a\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u5404\u81ea\u7684\u7279\u5f81\u548c\u6280\u80fd\uff08\u8fd9\u5c31\u662f\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u7279\u5f81\u548c\u6280\u80fd\u5206\u522b\u5bf9\u5e94\u5bf9\u8c61\u7684\u6570\u636e\u5c5e\u6027\u548c\u65b9\u6cd5\u5c5e\u6027\uff09\uff0c\u7136\u800c\u8fd9\u5e76\u4e0d\u597d\u73a9\uff0c\u4e8e\u662f\u5982\u6765\u53c8\u5b89\u6392\u4e86\u4e00\u7fa4\u5996\u9b54\u9b3c\u602a\uff0c\u4e3a\u4e86\u9632\u6b62\u5e08\u5f92\u56db\u4eba\u5728\u53d6\u7ecf\u8def\u4e0a\u88ab\u641e\u6b7b\uff0c\u53c8\u5b89\u6392\u4e86\u4e00\u7fa4\u795e\u4ed9\u4fdd\u9a7e\u62a4\u822a\uff0c\u8fd9\u4e9b\u90fd\u662f\u5bf9\u8c61\u3002\u7136\u540e\u53d6\u7ecf\u5f00\u59cb\uff0c\u5e08\u5f92\u56db\u4eba\u4e0e\u5996\u9b54\u9b3c\u602a\u795e\u4ed9\u4ea4\u4e92\u7740\u76f4\u5230\u6700\u540e\u53d6\u5f97\u771f\u7ecf\u3002\u5982\u6765\u6839\u672c\u4e0d\u4f1a\u7ba1\u5e08\u5f92\u56db\u4eba\u6309\u7167\u4ec0\u4e48\u6d41\u7a0b\u53bb\u53d6\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1 **\u4f18\u70b9\uff1a**\u89e3\u51b3\u4e86\u7a0b\u5e8f\u7684\u6269\u5c55\u6027\u3002\u5bf9\u67d0\u4e00\u4e2a\u5bf9\u8c61\u5355\u72ec\u4fee\u6539\uff0c\u4f1a\u7acb\u523b\u53cd\u6620\u5230\u6574\u4e2a\u4f53\u7cfb\u4e2d\uff0c\u5982\u5bf9\u6e38\u620f\u4e2d\u4e00\u4e2a\u4eba\u7269\u53c2\u6570\u7684\u7279\u5f81\u548c\u6280\u80fd\u4fee\u6539\u90fd\u5f88\u5bb9\u6613\u3002 **\u7f3a\u70b9\uff1a**\u53ef\u63a7\u6027\u5dee\uff0c\u65e0\u6cd5\u5411\u9762\u5411\u8fc7\u7a0b\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u6d41\u6c34\u7ebf\u5f0f\u7684\u53ef\u4ee5\u5f88\u7cbe\u51c6\u7684\u9884\u6d4b\u95ee\u9898\u7684\u5904\u7406\u6d41\u7a0b\u4e0e\u7ed3\u679c\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u4e00\u65e6\u5f00\u59cb\u5c31\u7531\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92\u89e3\u51b3\u95ee\u9898\uff0c\u65e0\u6cd5\u9884\u6d4b\u6700\u7ec8\u7ed3\u679c\u3002\u4e8e\u662f\u6211\u4eec\u7ecf\u5e38\u770b\u5230\u4e00\u4e2a\u6e38\u620f\u4eba\u67d0\u4e00\u53c2\u6570\u7684\u4fee\u6539\u6781\u6709\u53ef\u80fd\u5bfc\u81f4bug\u7684\u6280\u80fd\u51fa\u73b0\uff0c\u4e00\u5200\u780d\u6b7b3\u4e2a\u4eba\uff0c\u8fd9\u4e2a\u6e38\u620f\u5c31\u5931\u53bb\u5e73\u8861\u3002 **\u5e94\u7528\u573a\u666f\uff1a**\u9700\u6c42\u7ecf\u5e38\u53d8\u5316\u7684\u8f6f\u4ef6\uff0c\u4e00\u822c\u9700\u6c42\u7684\u53d8\u5316\u90fd\u96c6\u4e2d\u5728\u7528\u6237\u5c42\uff0c\u4e92\u8054\u7f51\u5e94\u7528\uff0c\u4f01\u4e1a\u5185\u90e8\u8f6f\u4ef6\uff0c\u6e38\u620f\u7b49\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u663e\u8eab\u624b\u7684\u597d\u5730\u65b9\u3002 \u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u5e76\u4e0d\u662f\u5168\u90e8\u3002\u5bf9\u4e8e\u4e00\u4e2a\u8f6f\u4ef6\u8d28\u91cf\u6765\u8bf4\uff0c\u9762\u5411\u5bf9\u8c61\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u53ea\u662f\u7528\u6765\u89e3\u51b3\u6269\u5c55\u6027\u3002","title":"\u4e8c\u3001\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u610f\u4e49"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#_3","text":"","title":"\u4e09\u3001\u7c7b\u548c\u5bf9\u8c61"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#1","text":"python\u4e2d\u4e00\u5207\u7686\u4e3a\u5bf9\u8c61\uff0c\u4e14python3\u7edf\u4e00\u4e86\u7c7b\u4e0e\u7c7b\u578b\u7684\u6982\u5ff5\uff0c\u7c7b\u578b\u5c31\u662f\u7c7b\u3002 \u57fa\u4e8e\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e00\u4e2a\u6b3e\u6e38\u620f\uff1a\u82f1\u96c4\u8054\u76df\uff0c\u6bcf\u4e2a\u73a9\u5bb6\u9009\u4e00\u4e2a\u82f1\u96c4\uff0c\u6bcf\u4e2a\u82f1\u96c4\u90fd\u6709\u81ea\u5df1\u7684\u7279\u5f81\u548c\u548c\u6280\u80fd\uff0c\u7279\u5f81\u5373\u6570\u636e\u5c5e\u6027\uff0c\u6280\u80fd\u5373\u65b9\u6cd5\u5c5e\u6027\uff0c\u7279\u5f81\u4e0e\u6280\u80fd\u7684\u7ed3\u5408\u4f53\u5c31\u4e00\u4e2a\u5bf9\u8c61\u3002 \u4ece\u4e00\u7ec4\u5bf9\u8c61\u4e2d\u63d0\u53d6\u76f8\u4f3c\u7684\u90e8\u5206\u5c31\u662f\u7c7b\uff0c\u7c7b\u6240\u6709\u5bf9\u8c61\u90fd\u5177\u6709\u7684\u7279\u5f81\u548c\u6280\u80fd\u7684\u7ed3\u5408\u4f53\u3002 \u5728python\u4e2d\uff0c\u7528\u53d8\u91cf\u8868\u793a\u7279\u5f81\uff0c\u7528\u51fd\u6570\u8868\u793a\u6280\u80fd\uff0c\u56e0\u800c\u7c7b\u662f\u53d8\u91cf\u4e0e\u51fd\u6570\u7684\u7ed3\u5408\u4f53\uff0c\u5bf9\u8c61\u662f\u53d8\u91cf\u4e0e\u65b9\u6cd5\uff08\u6307\u5411\u7c7b\u7684\u51fd\u6570\uff09\u7684\u7ed3\u5408\u4f53\u3002","title":"1.\u5b9a\u4e49"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#2_1","text":"\u5728python\u4e2d\u58f0\u660e\u7c7b\u4e0e\u58f0\u660e\u51fd\u6570\u5f88\u76f8\u4f3c \u58f0\u660e\u7c7b class \u7c7b\u540d: '\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32' \u7c7b\u4f53 # \u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7c7b class Data: pass \u5206\u7c7b\uff1a\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b \u6ce8\u610f\uff1a 1.\u53ea\u6709\u5728python2\u4e2d\u624d\u5206\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\uff0cpython3\u4e2d\u7edf\u4e00\u90fd\u662f\u65b0\u5f0f\u7c7b 2.\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u58f0\u660e\u7684\u6700\u5927\u4e0d\u540c\u5728\u4e8e,\u6240\u6709\u65b0\u5f0f\u7c7b\u5fc5\u987b\u7ee7\u627f\u81f3\u5c11\u4e00\u4e2a\u7236\u7c7b 3.\u6240\u6709\u7c7b\u752d\u7ba1\u662f\u5426\u663e\u5f0f\u58f0\u660e\u7236\u7c7b\uff0c\u90fd\u6709\u4e00\u4e2a\u9ed8\u8ba4\u7ee7\u627fobject\u7236\u7c7b # \u5728python2\u4e2d\u7684\u533a\u5206 # \u7ecf\u5178\u7c7b\uff1a class \u7c7b\u540d: \u3000\u3000pass # \u65b0\u5f0f\u7c7b\uff1a class \u7c7b\u540d(\u7236\u7c7b): \u3000\u3000pass # \u5728python3\u4e2d\uff0c\u4e0a\u8ff0\u4e24\u79cd\u5b9a\u4e49\u65b9\u5f0f\u5168\u90fd\u662f\u65b0\u5f0f\u7c7b \u4f8b: class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def attack(self,enemy): ; enemy.life_value-=self.aggressivity","title":"2.\u7c7b\u7684\u58f0\u660e"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#3_1","text":"\u7c7b\u7684\u5c5e\u6027\u5f15\u7528 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def attack(self,enemy): ; enemy.life_value-=self.aggressivity print(Garen.camp) #\u5f15\u7528\u7c7b\u7684\u6570\u636e\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u4e0e\u6240\u6709\u5bf9\u8c61/\u5b9e\u4f8b\u5171\u4eab print(Garen.attack) #\u5f15\u7528\u7c7b\u7684\u51fd\u6570\u5c5e\u6027\uff0c\u8be5\u5c5e\u6027\u4e5f\u5171\u4eab print(Garen.__dict__) #\u67e5\u770b\u7c7b\u7684\u5c5e\u6027\u5b57\u5178\uff0c\u6216\u8005\u8bf4\u540d\u79f0\u7a7a\u95f4 # Garen.name='Garen')#\u589e\u52a0\u5c5e\u6027 # del Garen.name #\u5220\u9664\u5c5e\u6027 \u8f93\u51fa Demacia <function Garen.attack at 0x106acd400> {'__doc__': None, 'attack': <function Garen.attack at 0x106acd400>, '__module__': '__main__', '__weakref__': <attribute '__weakref__' of 'Garen' objects>, 'camp': 'Demacia', '__dict__': <attribute '__dict__' of 'Garen' objects>} \u7c7b\u7684\u5b9e\u4f8b\u5316 \u7c7b\u540d\u52a0\u62ec\u53f7\u5c31\u662f\u5b9e\u4f8b\u5316\uff0c\u4f1a\u81ea\u52a8\u89e6\u53d1__init__\u51fd\u6570\u7684\u8fd0\u884c\uff0c\u53ef\u4ee5\u7528\u5b83\u6765\u4e3a\u6bcf\u4e2a\u5b9e\u4f8b\u5b9a\u5236\u81ea\u5df1\u7684\u7279\u5f81 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def __init__(self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u8349\u4e1b\u4f26') .__init__(g1,'\u8349\u4e1b\u4f26')\uff0c\u7136\u540e\u6267\u884c__init__\u5185\u7684\u4ee3\u7801g1.nickname=\u2018\u8349\u4e1b\u4f26\u2019\u7b49 print(g1) print(g1.nickname) \u8f93\u51fa <__main__.Garen object at 0x10ee26e10> \u8349\u4e1b\u4f26 **\u6ce8\uff1a**self\u7684\u4f5c\u7528\u662f\u5728\u5b9e\u4f8b\u5316\u65f6\u81ea\u52a8\u5c06\u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u4f20\u7ed9__init__\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0cself\u53ef\u4ee5\u662f\u4efb\u610f\u540d\u5b57 \u8865\u5145\uff1a # \u6211\u4eec\u5b9a\u4e49\u7684\u7c7b\u7684\u5c5e\u6027\u5230\u5e95\u5b58\u5230\u54ea\u91cc\u4e86\uff1f\u6709\u4e24\u79cd\u65b9\u5f0f\u67e5\u770b # dir(\u7c7b\u540d)\uff1a\u67e5\u51fa\u7684\u662f\u4e00\u4e2a\u540d\u5b57\u5217\u8868 # \u7c7b\u540d.__dict__:\u67e5\u51fa\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0ckey\u4e3a\u5c5e\u6027\u540d\uff0cvalue\u4e3a\u5c5e\u6027\u503c # \u4e8c\uff1a\u7279\u6b8a\u7684\u7c7b\u5c5e\u6027 \u7c7b\u540d.__name__# \u7c7b\u7684\u540d\u5b57(\u5b57\u7b26\u4e32) \u7c7b\u540d.__doc__# \u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32 \u7c7b\u540d.__base__# \u7c7b\u7684\u7b2c\u4e00\u4e2a\u7236\u7c7b(\u5728\u8bb2\u7ee7\u627f\u65f6\u4f1a\u8bb2) \u7c7b\u540d.__bases__# \u7c7b\u6240\u6709\u7236\u7c7b\u6784\u6210\u7684\u5143\u7ec4(\u5728\u8bb2\u7ee7\u627f\u65f6\u4f1a\u8bb2) \u7c7b\u540d.__dict__# \u7c7b\u7684\u5b57\u5178\u5c5e\u6027 \u7c7b\u540d.__module__# \u7c7b\u5b9a\u4e49\u6240\u5728\u7684\u6a21\u5757 \u7c7b\u540d.__class__# \u5b9e\u4f8b\u5bf9\u5e94\u7684\u7c7b(\u4ec5\u65b0\u5f0f\u7c7b\u4e2d)","title":"3.\u7c7b\u7684\u4e24\u79cd\u7528\u6cd5"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#4_1","text":"\u5bf9\u8c61\u662f\u5173\u4e8e\u7c7b\u800c\u5b9e\u9645\u5b58\u5728\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5373\u7c7b\u7684\u5b9e\u4f8b\u5316\u3002 g1=Garen('\u8349\u4e1b\u4f26') #\u5b9e\u4f8b\u5316\u7c7b\u5c31\u662f\u5bf9\u8c61 print(g1) print(g1.nickname) print(type(g1)) #\u67e5\u770bg1\u7684\u7c7b\u578b\u5c31\u662f\u7c7bGaren print(isinstance(g1,Garen)) #g1\u5c31\u662fGaren\u7684\u5b9e\u4f8b \u8f93\u51fa <__main__.Garen object at 0x108d55dd8> \u8349\u4e1b\u4f26 <class '__main__.Garen'> True ``` * \u5bf9\u8c61\u7684\u5f15\u7528\u53ea\u6709\u4e00\u79cd\uff1a\u5c5e\u6027\u5f15\u7528 \u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u5176\u5b9e\u53ea\u6709\u6570\u636e\u5c5e\u6027 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def init (self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u8349\u4e1b\u4f26') print(g1.nickname)\u3000\u3000 print(g1.aggressivity) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 58 455 **\u8865\u5145\uff1a** \u5bf9\u8c61/\u5b9e\u4f8b\u672c\u8eab\u53ea\u6709\u6570\u636e\u5c5e\u6027\uff0c\u4f46\u662fpython\u7684class\u673a\u5236\u4f1a\u5c06\u7c7b\u7684\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u8c61\u4e0a\uff0c\u79f0\u4e3a\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u53eb\u7ed1\u5b9a\u65b9\u6cd5\uff0c\u7ed1\u5b9a\u65b9\u6cd5\u552f\u4e00\u7ed1\u5b9a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u540c\u4e00\u4e2a\u7c7b\u7684\u65b9\u6cd5\u7ed1\u5b9a\u5230\u4e0d\u540c\u7684\u5bf9\u8c61\u4e0a\uff0c\u5c5e\u4e8e\u4e0d\u540c\u7684\u65b9\u6cd5\uff0c\u5185\u5b58\u5730\u5740\u90fd\u4e0d\u4f1a\u4e00\u6837\u3002 print(g1.attack)\u3000\u3000 print(Garen.attack)\u3000\u3000 **\u8f93\u51fa** <bound method Garen.attack of < main .Garen object at 0x10809ee10>> \u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5\u7684\u7279\u522b\u4e4b\u5904\u5728\u4e8e\uff1aobj.func()\u4f1a\u628aobj\u4f20\u7ed9func\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 ### 5.\u5bf9\u8c61\u4e4b\u95f4\u7684\u4ea4\u4e92 \u4eff\u7167garen\u7c7b\u518d\u521b\u5efa\u4e00\u4e2aRiven\u7c7b\uff0c\u7528\u745e\u96ef\u653b\u51fb\u76d6\u4f26\uff0c\u5b8c\u6210\u5bf9\u8c61\u4ea4\u4e92 class Garen: ; camp='Demacia' )\u7684\u9635\u8425\u90fd\u662fDemacia; def init (self,nickname,aggressivity=58,life_value=455): ...; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity class Riven: camp='Noxus' )\u7684\u9635\u8425\u90fd\u662fNoxus; def init (self,nickname,aggressivity=54,life_value=414): ; self.nickname=nickname ; self.aggressivity=aggressivity ; self.life_value=life_value ; def attack(self,enemy): ; enemy.life_value-=self.aggressivity g1=Garen('\u76d6\u4f26') . init (g1,'\u8349\u4e1b\u4f26')\uff0c\u7136\u540e\u6267\u884c__init__\u5185\u7684\u4ee3\u7801g1.nickname=\u2018\u8349\u4e1b\u4f26\u2019\u7b49 r1=Riven('\u745e\u96ef') print(g1.life_value) print(r1.attack(g1)) ,\u745e\u96ef\u653b\u51fb\u76d6\u4f26 print(g1.life_value) **\u8f93\u51fa** 455 None 401 ### 6.\u7c7b\u540d\u79f0\u7a7a\u95f4\u4e0e\u5bf9\u8c61/\u5b9e\u4f8b\u540d\u79f0\u7a7a\u95f4 \u521b\u5efa\u4e00\u4e2a\u7c7b\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u7528\u6765\u5b58\u50a8\u7c7b\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u540d\u5b57\uff0c\u8fd9\u4e9b\u540d\u5b57\u79f0\u4e3a\u7c7b\u7684\u5c5e\u6027\u3002 \u7c7b\u6709\u4e24\u79cd\u5c5e\u6027\uff1a\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027 \u5176\u4e2d\u7c7b\u7684\u6570\u636e\u5c5e\u6027\u662f\u5171\u4eab\u7ed9\u6240\u6709\u5bf9\u8c61\u7684 \u5b9a\u4e49\u5728\u7c7b\u5185\u90e8\u7684\u53d8\u91cf\uff0c\u662f\u6240\u6709\u5bf9\u8c61\u5171\u6709\u7684\uff0cid\u5168\u4e00\u6837 print(id(r1.camp)) print(id(Riven.camp)) 4482776512 4482776512 \u800c\u7c7b\u7684\u51fd\u6570\u5c5e\u6027\u662f\u7ed1\u5b9a\u5230\u6240\u6709\u5bf9\u8c61\u7684\uff1a \u5b9a\u4e49\u5728\u7c7b\u5185\u90e8\u7684\u51fd\u6570\uff0c\u662f\u7ed1\u5b9a\u5230\u6240\u6709\u5bf9\u8c61\u7684\uff0c\u662f\u7ed9\u5bf9\u8c61\u6765\u7528\uff0cobj.func() \u4f1a\u628aobj\u672c\u8eab\u5f53\u505a\u7b2c\u4e00\u4e2a\u53c2\u6570\u51fa\u5165 r1.attack\u5c31\u662f\u5728\u6267\u884cRiven.attack\u7684\u529f\u80fd\uff0cpython\u7684class\u673a\u5236\u4f1a\u5c06Riven\u7684\u51fd\u6570\u5c5e\u6027attack\u7ed1\u5b9a\u7ed9r1\uff0cr1\u76f8\u5f53\u4e8e\u62ff\u5230\u4e86\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411Riven\u7c7b\u7684attack\u529f\u80fd,r1.attack()\u4f1a\u5c06r1\u4f20\u7ed9attack\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 print(id(r1.attack)) print(id(Riven.attack)) **\u8f93\u51fa** 4372850184 4374779288 **\u6ce8\uff1a** \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61/\u5b9e\u4f8b\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u5b58\u653e\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u540d\u5b57\uff0c\u79f0\u4e3a\u5bf9\u8c61/\u5b9e\u4f8b\u7684\u5c5e\u6027 \u5728obj.name\u4f1a\u5148\u4eceobj\u81ea\u5df1\u7684\u540d\u79f0\u7a7a\u95f4\u91cc\u627ename\uff0c\u627e\u4e0d\u5230\u5219\u53bb\u7c7b\u4e2d\u627e\uff0c\u7c7b\u4e5f\u627e\u4e0d\u5230\u5c31\u627e\u7236\u7c7b...\u6700\u540e\u90fd\u627e\u4e0d\u5230\u5c31\u629b\u51fa\u5f02\u5e38 print(g1.x) #\u5148\u4eceg1.__dict__,\u627e\u4e0d\u5230\u518d\u627eGaren.__dict__,\u627e\u4e0d\u5230\u5c31\u4f1a\u62a5\u9519 ## \u56db.\u7ee7\u627f\u548c\u6d3e\u751f ### 1.\u7ee7\u627f\u7684\u5b9a\u4e49 \u7ee7\u627f\u662f\u4e00\u79cd\u521b\u5efa\u65b0\u7c7b\u7684\u65b9\u5f0f\uff0c\u5728python\u4e2d\uff0c\u65b0\u5efa\u7684\u7c7b\u53ef\u4ee5\u7ee7\u627f\u4e00\u4e2a\u6216\u591a\u4e2a\u7236\u7c7b\uff0c\u7236\u7c7b\u53c8\u53ef\u79f0\u4e3a\u57fa\u7c7b\u6216\u8d85\u7c7b\uff0c\u65b0\u5efa\u7684\u7c7b\u79f0\u4e3a\u6d3e\u751f\u7c7b\u6216\u5b50\u7c7b\u3002 * **\u5206\u7c7b\uff1a**\u5355\u7ee7\u627f\u548c\u591a\u7ee7\u627f class ParentClass1: pass class ParentClass2: pass class SubClass1(ParentClass1): pass class SubClass2(ParentClass1,ParentClass2): * **\u67e5\u770b\u7ee7\u627f** __base__\u53ea\u67e5\u770b\u4ece\u5de6\u5230\u53f3\u7ee7\u627f\u7684\u7b2c\u4e00\u4e2a\u5b50\u7c7b\uff0c__bases__\u5219\u662f\u67e5\u770b\u6240\u6709\u7ee7\u627f\u7684\u7236\u7c7b print(SubClass2. base ) print(SubClass2. bases ) **\u8f93\u51fa** ( , ) \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u57fa\u7c7b\uff0cpython\u7684\u7c7b\u4f1a\u9ed8\u8ba4\u7ee7\u627fobject\u7c7b\uff0cobject\u662f\u6240\u6709python\u7c7b\u7684\u57fa\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u89c1\u65b9\u6cd5\uff08\u5982__str__\uff09\u7684\u5b9e\u73b0\u3002 print(ParentClass1. base ) **\u8f93\u51fa** ### 2. \u7ee7\u627f\u4e0e\u62bd\u8c61 \u62bd\u8c61\u5373\u62bd\u53d6\u7c7b\u4f3c\u6216\u8005\u8bf4\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u3002 \u62bd\u8c61\u5206\u6210\u4e24\u4e2a\u5c42\u6b21\uff1a > 1.\u5c06\u5965\u5df4\u9a6c\u548c\u6885\u897f\u8fd9\u4fe9\u5bf9\u8c61\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u62bd\u53d6\u6210\u7c7b\uff1b > 2.\u5c06\u4eba\uff0c\u732a\uff0c\u72d7\u8fd9\u4e09\u4e2a\u7c7b\u6bd4\u8f83\u50cf\u7684\u90e8\u5206\u62bd\u53d6\u6210\u7236\u7c7b\u3002 * **\u62bd\u8c61\uff1a**\u6700\u4e3b\u8981\u7684\u4f5c\u7528\u662f\u5212\u5206\u7c7b\u522b\uff08\u53ef\u4ee5\u9694\u79bb\u5173\u6ce8\u70b9\uff0c\u964d\u4f4e\u590d\u6742\u5ea6\uff09 * **\u7ee7\u627f\uff1a**\u662f\u57fa\u4e8e\u62bd\u8c61\u7684\u7ed3\u679c\uff0c\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\u53bb\u5b9e\u73b0\u5b83\uff0c\u80af\u5b9a\u662f\u5148\u7ecf\u5386\u62bd\u8c61\u8fd9\u4e2a\u8fc7\u7a0b\uff0c\u624d\u80fd\u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u53bb\u8868\u8fbe\u51fa\u62bd\u8c61\u7684\u7ed3\u6784\u3002 \u62bd\u8c61\u53ea\u662f\u5206\u6790\u548c\u8bbe\u8ba1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u52a8\u4f5c\u6216\u8005\u8bf4\u4e00\u79cd\u6280\u5de7\uff0c\u901a\u8fc7\u62bd\u8c61\u53ef\u4ee5\u5f97\u5230\u7c7b\u3002 ### 3.\u7ee7\u627f\u4e0e\u91cd\u7528\u6027 \u5728\u5f00\u53d1\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7bA\uff0c\u7136\u540e\u53c8\u60f3\u65b0\u5efa\u7acb\u53e6\u5916\u4e00\u4e2a\u7c7bB\uff0c\u4f46\u662f\u7c7bB\u7684\u5927\u90e8\u5206\u5185\u5bb9\u4e0e\u7c7bA\u7684\u76f8\u540c\u65f6 \u6211\u4eec\u4e0d\u53ef\u80fd\u4ece\u5934\u5f00\u59cb\u5199\u4e00\u4e2a\u7c7bB\uff0c\u8fd9\u5c31\u7528\u5230\u4e86\u7c7b\u7684\u7ee7\u627f\u7684\u6982\u5ff5\u3002 \u901a\u8fc7\u7ee7\u627f\u7684\u65b9\u5f0f\u65b0\u5efa\u7c7bB\uff0c\u8ba9B\u7ee7\u627fA\uff0cB\u4f1a\u2018\u9057\u4f20\u2019A\u7684\u6240\u6709\u5c5e\u6027(\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027)\uff0c\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528 class Hero: def init (self,nickname,aggressivity,life_value): self.nickname=nickname self.aggressivity=aggressivity self.life_value=life_value def move_forward(self): print('%s move forward' %self.nickname) def move_backward(self): print('%s move backward' %self.nickname) def move_left(self): print('%s move forward' %self.nickname) def move_right(self): print('%s move forward' %self.nickname) def attack(self,enemy): enemy.life_value-=self.aggressivity class Garen(Hero): pass class Riven(Hero): pass g1=Garen('\u8349\u4e1b\u4f26',100,300) r1=Riven('\u9510\u96ef\u96ef',57,200) print(g1.nickname) print(r1.nickname) print(g1.life_value) r1.attack(g1) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 300 243 **\u6ce8\u610f\uff1a** \u50cfg1.life_value\u4e4b\u7c7b\u7684\u5c5e\u6027\u5f15\u7528\uff0c\u4f1a\u5148\u4ece\u5b9e\u4f8b\u4e2d\u627elife_value\u7136\u540e\u53bb\u7c7b\u4e2d\u627e\uff0c\u7136\u540e\u518d\u53bb\u7236\u7c7b\u4e2d\u627e...\u76f4\u5230\u6700\u9876\u7ea7\u7684\u7236\u7c7b\u3002 \u5f53\u7136\u5b50\u7c7b\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u81ea\u5df1\u65b0\u7684\u5c5e\u6027\u6216\u8005\u5728\u81ea\u5df1\u8fd9\u91cc\u91cd\u65b0\u5b9a\u4e49\u8fd9\u4e9b\u5c5e\u6027\uff08\u4e0d\u4f1a\u5f71\u54cd\u5230\u7236\u7c7b\uff09\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u65e6\u91cd\u65b0\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u5c5e\u6027\u4e14\u4e0e\u7236\u7c7b\u91cd\u540d\uff0c\u90a3\u4e48\u8c03\u7528\u65b0\u589e\u7684\u5c5e\u6027\u65f6\uff0c\u5c31\u4ee5\u81ea\u5df1\u4e3a\u51c6\u4e86\u3002 \u5728\u5b50\u7c7b\u5b9a\u4e49\u65b0\u7684\u5c5e\u6027\uff0c\u8986\u76d6\u6389\u7236\u7c7b\u7684\u5c5e\u6027,\u79f0\u4e3a\u6d3e\u751f\u3002 class Hero: def init (self,nickname,aggressivity,life_value): self.nickname=nickname self.aggressivity=aggressivity self.life_value=life_value def move_forward(self): print('%s move forward' %self.nickname) def move_backward(self): print('%s move backward' %self.nickname) def move_left(self): print('%s move forward' %self.nickname) def move_right(self): print('%s move forward' %self.nickname) def attack(self,enemy): enemy.life_value-=self.aggressivity class Garen(Hero): pass class Riven(Hero): camp='Noxus' def attack(self,enemy): ,\u4e0d\u518d\u4f7f\u7528\u7236\u7c7b\u7684attack,\u4e14\u4e0d\u4f1a\u5f71\u54cd\u7236\u7c7b print('from riven') def fly(self): print('%s is flying' %self.nickname) g1=Garen('\u8349\u4e1b\u4f26',100,300) r1=Riven('\u9510\u96ef\u96ef',57,200) print(g1.nickname) print(r1.nickname) print(g1.life_value) r1.attack(g1) print(g1.life_value) **\u8f93\u51fa** \u8349\u4e1b\u4f26 \u9510\u96ef\u96ef 300 from riven 300 ### 4.\u7ec4\u5408\u4e0e\u91cd\u7528\u6027 \u8f6f\u4ef6\u91cd\u7528\u7684\u91cd\u8981\u65b9\u5f0f\u9664\u4e86\u7ee7\u627f\u4e4b\u5916\u8fd8\u6709\u53e6\u5916\u4e00\u79cd\u65b9\u5f0f\uff0c\u5373\uff1a\u7ec4\u5408\u3002\u7ec4\u5408\u6307\u7684\u662f\uff0c\u5728\u4e00\u4e2a\u7c7b\u4e2d\u4ee5\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u6570\u636e\u5c5e\u6027\uff0c\u79f0\u4e3a\u7c7b\u7684\u7ec4\u5408\u3002 class Equip: def fire(self): print('release Fire skill') class Riven: ,\u4e00\u4e2a\u82f1\u96c4\u9700\u8981\u6709\u88c5\u5907,\u56e0\u800c\u9700\u8981\u7ec4\u5408Equip\u7c7b camp='Noxus' def init (self,nickname): self.nickname=nickname self.equip=Equip() ,\u8d4b\u503c\u7ed9\u5b9e\u4f8b\u7684equip\u5c5e\u6027 r1=Riven('\u9510\u96ef\u96ef') r1.equip.fire() **\u8f93\u51fa** release Fire skill **\u5bf9\u6bd4\uff1a** \u7ec4\u5408\u4e0e\u7ee7\u627f\u90fd\u662f\u6709\u6548\u5730\u5229\u7528\u5df2\u6709\u7c7b\u7684\u8d44\u6e90\u7684\u91cd\u8981\u65b9\u5f0f\u3002\u4f46\u662f\u4e8c\u8005\u7684\u6982\u5ff5\u548c\u4f7f\u7528\u573a\u666f\u7686\u4e0d\u540c\uff0c * 1.\u7ee7\u627f\u7684\u65b9\u5f0f \u901a\u8fc7\u7ee7\u627f\u5efa\u7acb\u4e86\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u662f\u4e00\u79cd'\u662f'\u7684\u5173\u7cfb\uff0c\u6bd4\u5982\u767d\u9a6c\u662f\u9a6c\uff0c\u4eba\u662f\u52a8\u7269\u3002 \u5f53\u7c7b\u4e4b\u95f4\u6709\u5f88\u591a\u76f8\u540c\u7684\u529f\u80fd\uff0c\u63d0\u53d6\u8fd9\u4e9b\u5171\u540c\u7684\u529f\u80fd\u505a\u6210\u57fa\u7c7b\uff0c\u7528\u7ee7\u627f\u6bd4\u8f83\u597d\uff0c\u6bd4\u5982\u6559\u6388\u662f\u8001\u5e08 class Teacher: def init (self,name,gender): self.name=name self.gender=gender def teach(self): print('teaching') class Professor(Teacher): pass p1=Professor('hexin','male') p1.teach() **\u8f93\u51fa** teaching * 2.\u7ec4\u5408\u7684\u65b9\u5f0f \u7528\u7ec4\u5408\u7684\u65b9\u5f0f\u5efa\u7acb\u4e86\u7c7b\u4e0e\u7ec4\u5408\u7684\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5b83\u662f\u4e00\u79cd\u2018\u6709\u2019\u7684\u5173\u7cfb,\u6bd4\u5982\u6559\u6388\u6709\u751f\u65e5\uff0c\u6559\u6388\u6559python\u8bfe\u7a0b\u3002 class BirthDate: def init (self,year,month,day): self.year=year self.month=month self.day=day class Couse: def init (self,name,price,period): self.name=name self.price=price self.period=period class Teacher: def init (self,name,gender): self.name=name self.gender=gender def teach(self): print('teaching') class Professor(Teacher): def init (self,name,gender,birth,course): Teacher. init (self,name,gender) self.birth=birth self.course=course p1=Professor('hexin','male', BirthDate('1995','1','27'), Couse('python','28000','4 months')) print(p1.birth.year,p1.birth.month,p1.birth.day) print(p1.course.name,p1.course.price,p1.course.period) **\u8f93\u51fa** 1995 1 27 python 28000 4 months \u5f53\u7c7b\u4e4b\u95f4\u6709\u663e\u8457\u4e0d\u540c\uff0c\u5e76\u4e14\u8f83\u5c0f\u7684\u7c7b\u662f\u8f83\u5927\u7684\u7c7b\u6240\u9700\u8981\u7684\u7ec4\u4ef6\u65f6\uff0c\u7528\u7ec4\u5408\u6bd4\u8f83\u597d ### 5.\u63a5\u53e3\u4e0e\u5f52\u4e00\u5316\u8bbe\u8ba1 * **\u63a5\u53e3\u5b9a\u4e49\uff1a**\u63a5\u53e3\u5c31\u662f\u4e00\u4e9b\u65b9\u6cd5\u7279\u5f81\u7684\u96c6\u5408------\u63a5\u53e3\u662f\u5bf9\u62bd\u8c61\u7684\u62bd\u8c61\u3002 \u7ee7\u627f\u6709\u4e24\u79cd\u7528\u9014\uff1a > \u2460\u7ee7\u627f\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u5e76\u4e14\u505a\u51fa\u81ea\u5df1\u7684\u6539\u53d8\u6216\u8005\u6269\u5c55\uff08\u4ee3\u7801\u91cd\u7528\uff09\uff1b > \u2461\u58f0\u660e\u67d0\u4e2a\u5b50\u7c7b\u517c\u5bb9\u4e8e\u67d0\u57fa\u7c7b\uff0c\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u7c7bInterface\uff0c\u63a5\u53e3\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u63a5\u53e3\u540d\uff08\u5c31\u662f\u51fd\u6570\u540d\uff09\u4e14\u5e76\u672a\u5b9e\u73b0\u63a5\u53e3\u7684\u529f\u80fd\uff0c\u5b50\u7c7b\u7ee7\u627f\u63a5\u53e3\u7c7b\uff0c\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u529f\u80fd\uff1b class Interface:#\u5b9a\u4e49\u63a5\u53e3Interface\u7c7b\u6765\u6a21\u4eff\u63a5\u53e3\u7684\u6982\u5ff5\uff0cpython\u4e2d\u538b\u6839\u5c31\u6ca1\u6709interface\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u63a5\u53e3\u3002 def read(self): pass def write(self): pass class Txt(Interface): def read(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Sata(Interface): def read(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Process(Interface): def read(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') ``` \u5b9e\u8df5\u4e2d\uff0c \u7ee7\u627f\u7684\u7b2c\u4e00\u79cd\u542b\u4e49\u610f\u4e49\u5e76\u4e0d\u5f88\u5927\uff0c\u751a\u81f3\u5e38\u5e38\u662f\u6709\u5bb3\u7684\u3002\u56e0\u4e3a\u5b83\u4f7f\u5f97\u5b50\u7c7b\u4e0e\u57fa\u7c7b\u51fa\u73b0\u5f3a\u8026\u5408\u3002 \u7ee7\u627f\u7684\u7b2c\u4e8c\u79cd\u542b\u4e49\u53eb\u201c\u63a5\u53e3\u7ee7\u627f\u201d\u3002\u63a5\u53e3\u7ee7\u627f\u5b9e\u8d28\u4e0a\u662f\u8981\u6c42\u201c\u505a\u51fa\u4e00\u4e2a\u826f\u597d\u7684\u62bd\u8c61\uff0c\u8fd9\u4e2a\u62bd\u8c61\u89c4\u5b9a\u4e86\u4e00\u4e2a\u517c\u5bb9\u63a5\u53e3\uff0c\u4f7f\u5f97\u5916\u90e8\u8c03\u7528\u8005\u65e0\u9700\u5173\u5fc3\u5177\u4f53\u7ec6\u8282\uff0c\u53ef\u4e00\u89c6\u540c\u4ec1\u7684\u5904\u7406\u5b9e\u73b0\u4e86\u7279\u5b9a\u63a5\u53e3\u7684\u6240\u6709\u5bf9\u8c61\u201d\u2014\u2014\u8fd9\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e0a\uff0c\u53eb\u505a\u5f52\u4e00\u5316\u3002 \u5f52\u4e00\u5316\u4f7f\u5f97\u9ad8\u5c42\u7684\u5916\u90e8\u4f7f\u7528\u8005\u53ef\u4ee5\u4e0d\u52a0\u533a\u5206\u7684\u5904\u7406\u6240\u6709\u63a5\u53e3\u517c\u5bb9\u7684\u5bf9\u8c61\u96c6\u5408\u2014\u2014\u5c31\u597d\u8c61linux\u7684\u6cdb\u6587\u4ef6\u6982\u5ff5\u4e00\u6837\uff0c\u6240\u6709\u4e1c\u897f\u90fd\u53ef\u4ee5\u5f53\u6587\u4ef6\u5904\u7406\uff0c\u4e0d\u5fc5\u5173\u5fc3\u5b83\u662f\u5185\u5b58\u3001\u78c1\u76d8\u3001\u7f51\u7edc\u8fd8\u662f\u5c4f\u5e55\uff08\u5f53\u7136\uff0c\u5bf9\u5e95\u5c42\u8bbe\u8ba1\u8005\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u533a\u5206\u51fa\u201c\u5b57\u7b26\u8bbe\u5907\u201d\u548c\u201c\u5757\u8bbe\u5907\u201d\uff0c\u7136\u540e\u505a\u51fa\u9488\u5bf9\u6027\u7684\u8bbe\u8ba1\uff1a\u7ec6\u81f4\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff0c\u89c6\u9700\u6c42\u800c\u5b9a\uff09\u3002 * \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u63a5\u53e3\uff1f \u63a5\u53e3\u63d0\u53d6\u4e86\u4e00\u7fa4\u7c7b\u5171\u540c\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u628a\u63a5\u53e3\u5f53\u505a\u4e00\u4e2a\u51fd\u6570\u7684\u96c6\u5408\uff0c\u7136\u540e\u8ba9\u5b50\u7c7b\u53bb\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u51fd\u6570\u3002 \u8fd9\u4e48\u505a\u7684\u610f\u4e49\u5728\u4e8e\u5f52\u4e00\u5316\uff0c\u4ec0\u4e48\u53eb\u5f52\u4e00\u5316\uff0c\u5c31\u662f\u53ea\u8981\u662f\u57fa\u4e8e\u540c\u4e00\u4e2a\u63a5\u53e3\u5b9e\u73b0\u7684\u7c7b\uff0c\u90a3\u4e48\u6240\u6709\u7684\u8fd9\u4e9b\u7c7b\u4ea7\u751f\u7684\u5bf9\u8c61\u5728\u4f7f\u7528\u65f6\uff0c\u4ece\u7528\u6cd5\u4e0a\u6765\u8bf4\u90fd\u4e00\u6837\u3002 \u5f52\u4e00\u5316\uff0c\u8ba9\u4f7f\u7528\u8005\u65e0\u9700\u5173\u5fc3\u5bf9\u8c61\u7684\u7c7b\u662f\u4ec0\u4e48\uff0c\u53ea\u9700\u8981\u7684\u77e5\u9053\u8fd9\u4e9b\u5bf9\u8c61\u90fd\u5177\u5907\u67d0\u4e9b\u529f\u80fd\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u6781\u5927\u5730\u964d\u4f4e\u4e86\u4f7f\u7528\u8005\u7684\u4f7f\u7528\u96be\u5ea6\u3002 \u6bd4\u5982\uff1a\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u52a8\u7269\u63a5\u53e3\uff0c\u63a5\u53e3\u91cc\u5b9a\u4e49\u4e86\u6709\u8dd1\u3001\u5403\u3001\u547c\u5438\u7b49\u63a5\u53e3\u51fd\u6570\uff0c\u8fd9\u6837\u8001\u9f20\u7684\u7c7b\u53bb\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\uff0c\u677e\u9f20\u7684\u7c7b\u4e5f\u53bb\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\uff0c\u7531\u4e8c\u8005\u5206\u522b\u4ea7\u751f\u4e00\u53ea\u8001\u9f20\u548c\u4e00\u53ea\u677e\u9f20\u9001\u5230\u4f60\u9762\u524d\uff0c\u5373\u4fbf\u662f\u4f60\u5206\u522b\u4e0d\u5230\u5e95\u54ea\u53ea\u662f\u4ec0\u4e48\u9f20\u4f60\u80af\u5b9a\u77e5\u9053\u4ed6\u4fe9\u90fd\u4f1a\u8dd1\uff0c\u90fd\u4f1a\u5403\uff0c\u90fd\u80fd\u547c\u5438\u3002 \u518d\u6bd4\u5982\uff1a\u6211\u4eec\u6709\u4e00\u4e2a\u6c7d\u8f66\u63a5\u53e3\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u6c7d\u8f66\u6240\u6709\u7684\u529f\u80fd\uff0c\u7136\u540e\u7531\u672c\u7530\u6c7d\u8f66\u7684\u7c7b\uff0c\u5965\u8fea\u6c7d\u8f66\u7684\u7c7b\uff0c\u5927\u4f17\u6c7d\u8f66\u7684\u7c7b\uff0c\u4ed6\u4eec\u90fd\u5b9e\u73b0\u4e86\u6c7d\u8f66\u63a5\u53e3\uff0c\u8fd9\u6837\u5c31\u597d\u529e\u4e86\uff0c\u5927\u5bb6\u53ea\u9700\u8981\u5b66\u4f1a\u4e86\u600e\u4e48\u5f00\u6c7d\u8f66\uff0c\u90a3\u4e48\u65e0\u8bba\u662f\u672c\u7530\uff0c\u8fd8\u662f\u5965\u8fea\uff0c\u8fd8\u662f\u5927\u4f17\u6211\u4eec\u90fd\u4f1a\u5f00\u4e86\uff0c\u5f00\u7684\u65f6\u5019\u6839\u672c\u65e0\u9700\u5173\u5fc3\u6211\u5f00\u7684\u662f\u54ea\u4e00\u7c7b\u8f66\uff0c\u64cd\u4f5c\u624b\u6cd5\uff08\u51fd\u6570\u8c03\u7528\uff09\u90fd\u4e00\u6837\u3002","title":"4.\u5bf9\u8c61\u7684\u4ea7\u751f\u548c\u5f15\u7528"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#6","text":"\u62bd\u8c61\u7c7b \u62bd\u8c61\u7c7b\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u7c7b\uff0c\u5b83\u7684\u7279\u6b8a\u4e4b\u5904\u5728\u4e8e\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316 \u4e3a\u4ec0\u4e48\u8981\u6709\u62bd\u8c61\u7c7b \u5982\u679c\u8bf4\u7c7b\u662f\u4ece\u4e00\u5806\u5bf9\u8c61\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\u7684\uff0c\u90a3\u4e48\u62bd\u8c61\u7c7b\u5c31\u662f\u4ece\u4e00\u5806\u7c7b\u4e2d\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u800c\u6765\u7684\uff0c\u5185\u5bb9\u5305\u62ec\u6570\u636e\u5c5e\u6027\u548c\u51fd\u6570\u5c5e\u6027\u3002\u3000 \u6bd4\u5982\u6211\u4eec\u6709\u9999\u8549\u7684\u7c7b\uff0c\u6709\u82f9\u679c\u7684\u7c7b\uff0c\u6709\u6843\u5b50\u7684\u7c7b\uff0c\u4ece\u8fd9\u4e9b\u7c7b\u62bd\u53d6\u76f8\u540c\u7684\u5185\u5bb9\u5c31\u662f\u6c34\u679c\u8fd9\u4e2a\u62bd\u8c61\u7684\u7c7b\uff0c\u4f60\u5403\u6c34\u679c\u65f6\uff0c\u8981\u4e48\u662f\u5403\u4e00\u4e2a\u5177\u4f53\u7684\u9999\u8549\uff0c\u8981\u4e48\u662f\u5403\u4e00\u4e2a\u5177\u4f53\u7684\u6843\u5b50\u3002\u4f60\u6c38\u8fdc\u65e0\u6cd5\u5403\u5230\u4e00\u4e2a\u53eb\u505a\u6c34\u679c\u7684\u4e1c\u897f\u3002 \u4ece\u8bbe\u8ba1\u89d2\u5ea6\u53bb\u770b\uff0c\u5982\u679c\u7c7b\u662f\u4ece\u73b0\u5b9e\u5bf9\u8c61\u62bd\u8c61\u800c\u6765\u7684\uff0c\u90a3\u4e48\u62bd\u8c61\u7c7b\u5c31\u662f\u57fa\u4e8e\u7c7b\u62bd\u8c61\u800c\u6765\u7684\u3002\u3000 \u4ece\u5b9e\u73b0\u89d2\u5ea6\u6765\u770b\uff0c\u62bd\u8c61\u7c7b\u4e0e\u666e\u901a\u7c7b\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1a\u62bd\u8c61\u7c7b\u4e2d\u53ea\u80fd\u6709\u62bd\u8c61\u65b9\u6cd5\uff08\u6ca1\u6709\u5b9e\u73b0\u529f\u80fd\uff09\uff0c\u8be5\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff0c\u53ea\u80fd\u88ab\u7ee7\u627f\uff0c\u4e14\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5\u3002\u8fd9\u4e00\u70b9\u4e0e\u63a5\u53e3\u6709\u70b9\u7c7b\u4f3c\uff0c\u4f46\u5176\u5b9e\u662f\u4e0d\u540c\u7684 \u5728python\u4e2d\u5b9e\u73b0\u62bd\u8c61\u7c7b ``` import abc class All_file(metaclass=abc.ABCMeta): all_type='file' @abc.abstractmethod def read(self): '\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u8bfb\u529f\u80fd' pass @abc . abstractmethod def write ( self ) : '\u5b50\u7c7b\u5fc5\u987b\u5b9a\u4e49\u5199\u529f\u80fd' pass","title":"6.\u62bd\u8c61\u7c7b"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#class-txtall_file","text":"","title":"class Txt(All_file):"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#pass","text":"","title":"pass"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#_4","text":"","title":""},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#t1txt","text":"class Txt(All_file): def read(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Sata(All_file): def read(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') class Process(All_file): def read(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') def write(self): print('\u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5') wenbenwenjian=Txt() yingpanwenjian=Sata() jinchengwenjian=Process() ,\u4e5f\u5c31\u662f\u4e00\u5207\u7686\u6587\u4ef6\u7684\u601d\u60f3 wenbenwenjian.read() yingpanwenjian.write() jinchengwenjian.read() print(wenbenwenjian.all_type) print(yingpanwenjian.all_type) print(jinchengwenjian.all_type) **\u8f93\u51fa** \u6587\u672c\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 \u786c\u76d8\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 \u8fdb\u7a0b\u6570\u636e\u7684\u8bfb\u53d6\u65b9\u6cd5 file file file * **\u8865\u5145\uff1a**Python\u7684abc\u6a21\u5757 abc\u6a21\u5757\u4f5c\u7528\uff1aPython\u672c\u8eab\u4e0d\u63d0\u4f9b\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u673a\u5236\uff0c\u8981\u60f3\u5b9e\u73b0\u62bd\u8c61\u7c7b\uff0c\u53ef\u4ee5\u501f\u52a9abc\u6a21\u5757\u3002ABC\u662fAbstract Base Class\u7684\u7f29\u5199\u3002 \u6a21\u5757\u4e2d\u7684\u7c7b\u548c\u51fd\u6570\uff1a abc.ABCMeta\u3000\u3000\u8fd9\u662f\u7528\u6765\u751f\u6210\u62bd\u8c61\u57fa\u7840\u7c7b\u7684\u5143\u7c7b\u3002\u7531\u5b83\u751f\u6210\u7684\u7c7b\u53ef\u4ee5\u88ab\u76f4\u63a5\u7ee7\u627f\u3002 abc.abstractmethod(function)\u3000\u3000\u8868\u660e\u62bd\u8c61\u65b9\u6cd5\u7684\u751f\u6210\u5668 abc.abstractproperty([fget[,fset[,fdel[,doc]]]])\u3000\u3000\u8868\u660e\u4e00\u4e2a\u62bd\u8c61\u5c5e\u6027 * \u62bd\u8c61\u7c7b\u4e0e\u63a5\u53e3 \u62bd\u8c61\u7c7b\u7684\u672c\u8d28\u8fd8\u662f\u7c7b\uff0c\u6307\u7684\u662f\u4e00\u7ec4\u7c7b\u7684\u76f8\u4f3c\u6027\uff0c\u5305\u62ec\u6570\u636e\u5c5e\u6027\uff08\u5982all_type\uff09\u548c\u51fd\u6570\u5c5e\u6027\uff08\u5982read\u3001write\uff09\uff0c\u800c\u63a5\u53e3\u53ea\u5f3a\u8c03\u51fd\u6570\u5c5e\u6027\u7684\u76f8\u4f3c\u6027\u3002 \u62bd\u8c61\u7c7b\u662f\u4e00\u4e2a\u4ecb\u4e8e\u7c7b\u548c\u63a5\u53e3\u76f4\u63a5\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u540c\u65f6\u5177\u5907\u7c7b\u548c\u63a5\u53e3\u7684\u90e8\u5206\u7279\u6027\uff0c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5f52\u4e00\u5316\u8bbe\u8ba1 \u3002 ### 7.\u7ee7\u627f\u7684\u987a\u5e8f * \u7ee7\u627f\u987a\u5e8f class A(object): def test(self): print('from A') class B(A): def test(self): print('from B') class C(A): def test(self): print('from C') class D(B): def test(self): print('from D') class E(C): def test(self): print('from E') class F(D,E): # def test(self): # print('from F') pass f1=F() f1.test() print(F. mro ) :F->D->B->E->C->A :F->D->B->A->E->C **\u8f93\u51fa** from D ( , , , , , , ) * \u7ee7\u627f\u539f\u7406 * \u5bf9\u4e8e\u4f60\u5b9a\u4e49\u7684\u6bcf\u4e00\u4e2a\u7c7b\uff0cpython\u4f1a\u8ba1\u7b97\u51fa\u4e00\u4e2a\u65b9\u6cd5\u89e3\u6790\u987a\u5e8f(MRO)\u5217\u8868\uff0c\u8fd9\u4e2aMRO\u5217\u8868\u5c31\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6240\u6709\u57fa\u7c7b\u7684\u7ebf\u6027\u987a\u5e8f\u5217\u8868\uff0c\u4f8b\u5982 F.mro() . mro [ , , , , , , ] \u4e3a\u4e86\u5b9e\u73b0\u7ee7\u627f,python\u4f1a\u5728MRO\u5217\u8868\u4e0a\u4ece\u5de6\u5230\u53f3\u5f00\u59cb\u67e5\u627e\u57fa\u7c7b,\u76f4\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u8fd9\u4e2a\u5c5e\u6027\u7684\u7c7b\u4e3a\u6b62\u3002 \u800c\u8fd9\u4e2aMRO\u5217\u8868\u7684\u6784\u9020\u662f\u901a\u8fc7\u4e00\u4e2aC3\u7ebf\u6027\u5316\u7b97\u6cd5\u6765\u5b9e\u73b0\u7684\u3002\u6211\u4eec\u4e0d\u53bb\u6df1\u7a76\u8fd9\u4e2a\u7b97\u6cd5\u7684\u6570\u5b66\u539f\u7406,\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u5408\u5e76\u6240\u6709\u7236\u7c7b\u7684MRO\u5217\u8868\u5e76\u9075\u5faa\u5982\u4e0b\u4e09\u6761\u51c6\u5219: > 1.\u5b50\u7c7b\u4f1a\u5148\u4e8e\u7236\u7c7b\u88ab\u68c0\u67e5 > 2.\u591a\u4e2a\u7236\u7c7b\u4f1a\u6839\u636e\u5b83\u4eec\u5728\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u88ab\u68c0\u67e5 > 3.\u5982\u679c\u5bf9\u4e0b\u4e00\u4e2a\u7c7b\u5b58\u5728\u4e24\u4e2a\u5408\u6cd5\u7684\u9009\u62e9,\u9009\u62e9\u7b2c\u4e00\u4e2a\u7236\u7c7b ### 8.\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 \u5b50\u7c7b\u7ee7\u627f\u4e86\u7236\u7c7b\u7684\u65b9\u6cd5\uff0c\u7136\u540e\u60f3\u8fdb\u884c\u4fee\u6539\uff0c\u6ce8\u610f\u4e86\u662f\u57fa\u4e8e\u539f\u6709\u7684\u57fa\u7840\u4e0a\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u5b50\u7c7b\u4e2d\u8c03\u7528\u7236\u7c7b\u7684\u65b9\u6cd5 * \u65b9\u6cd5\u4e00\uff1a\u7236\u7c7b\u540d.\u7236\u7c7b\u65b9\u6cd5() class Vehicle: Country='China' def init (self,name,speed,load,power): self.name=name self.speed=speed self.load=load self.power=power def run(self): print('\u5f00\u52a8\u5566...') class Subway(Vehicle): def init (self,name,speed,load,power,line): Vehicle. init (self,name,speed,load,power) self.line=line def run(self): print('\u5730\u94c1%s\u53f7\u7ebf\u6b22\u8fce\u60a8' %self.line) Vehicle.run(self) line13=Subway('\u4e2d\u56fd\u5730\u94c1','180m/s','1000\u4eba/\u7bb1','\u7535',13) line13.run() **\u8f93\u51fa** \u5730\u94c113\u53f7\u7ebf\u6b22\u8fce\u60a8 \u5f00\u52a8\u5566... * \u65b9\u6cd5\u4e8c\uff1asuper() class Vehicle: Country='China' def init (self,name,speed,load,power): self.name=name self.speed=speed self.load=load self.power=power def run(self): print('\u5f00\u52a8\u5566...') class Subway(Vehicle): def init (self,name,speed,load,power,line): ,self) \u5c31\u76f8\u5f53\u4e8e\u5b9e\u4f8b\u672c\u8eab \u5728python3\u4e2dsuper()\u7b49\u540c\u4e8esuper(Subway,self) super(). init (name,speed,load,power) self.line=line def run(self): print('\u5730\u94c1%s\u53f7\u7ebf\u6b22\u8fce\u60a8' %self.line) super(Subway,self).run() class Mobike(Vehicle):#\u6469\u62dc\u5355\u8f66 pass line13=Subway('\u4e2d\u56fd\u5730\u94c1','180m/s','1000\u4eba/\u7bb1','\u7535',13) line13.run() **\u6ce8\u610f\uff1a** \u5f53\u4f60\u4f7f\u7528super()\u51fd\u6570\u65f6,Python\u4f1a\u5728MRO\u5217\u8868\u4e0a\u7ee7\u7eed\u641c\u7d22\u4e0b\u4e00\u4e2a\u7c7b\u3002\u53ea\u8981\u6bcf\u4e2a\u91cd\u5b9a\u4e49\u7684\u65b9\u6cd5\u7edf\u4e00\u4f7f\u7528super()\u5e76\u53ea\u8c03\u7528\u5b83\u4e00\u6b21,\u90a3\u4e48\u63a7\u5236\u6d41\u6700\u7ec8\u4f1a\u904d\u5386\u5b8c\u6574\u4e2aMRO\u5217\u8868,\u6bcf\u4e2a\u65b9\u6cd5\u4e5f\u53ea\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21 \u4f7f\u7528super\u8c03\u7528\u7684\u6240\u6709\u5c5e\u6027\uff0c\u90fd\u662f\u4eceMRO\u5217\u8868\u5f53\u524d\u7684\u4f4d\u7f6e\u5f80\u540e\u627e\uff0c\u5343\u4e07\u4e0d\u8981\u901a\u8fc7\u770b\u4ee3\u7801\u53bb\u627e\u7ee7\u627f\u5173\u7cfb\uff0c\u4e00\u5b9a\u8981\u770bMRO\u5217\u8868 ## \u4e94\u3001\u591a\u6001\u4e0e\u591a\u6001\u6027 ### 1.\u591a\u6001 \u591a\u6001\u6307\u7684\u662f\u4e00\u7c7b\u4e8b\u7269\u6709\u591a\u79cd\u5f62\u6001\uff0c\uff08\u4e00\u4e2a\u62bd\u8c61\u7c7b\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u56e0\u800c\u591a\u6001\u7684\u6982\u5ff5\u4f9d\u8d56\u4e8e\u7ee7\u627f\uff09\u3002 * \u5e8f\u5217\u7c7b\u578b\u6709\u591a\u79cd\u5f62\u6001\uff1a\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\u3002 * \u52a8\u7269\u6709\u591a\u79cd\u5f62\u6001\uff1a\u4eba\uff0c\u72d7\uff0c\u732a import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class People(Animal): :\u4eba def talk(self): print('say hello') class Dog(Animal): :\u72d7 def talk(self): print('say wangwang') class Pig(Animal): :\u732a def talk(self): print('say aoao') * \u6587\u4ef6\u6709\u591a\u79cd\u5f62\u6001\uff1a\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u6267\u884c\u6587\u4ef6 import abc class File(metaclass=abc.ABCMeta): :\u6587\u4ef6 @abc.abstractmethod def click(self): pass class Text(File): :\u6587\u672c\u6587\u4ef6 def click(self): print('open file') class ExeFile(File): :\u53ef\u6267\u884c\u6587\u4ef6 def click(self): print('execute file') ### 2.\u591a\u6001\u6027 \u591a\u6001\u6027\u662f\u6307\u5177\u6709\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u4e00\u4e2a\u51fd\u6570\u540d\u8c03\u7528\u4e0d\u540c\u529f\u80fd\u7684\u51fd\u6570\u3002 \u6bd4\u5982\uff1a\u8001\u5e08.\u4e0b\u8bfe\u94c3\u54cd\u4e86\uff08\uff09\uff0c\u5b66\u751f.\u4e0b\u8bfe\u94c3\u54cd\u4e86()\uff0c\u8001\u5e08\u6267\u884c\u7684\u662f\u4e0b\u73ed\u64cd\u4f5c\uff0c\u5b66\u751f\u6267\u884c\u7684\u662f\u653e\u5b66\u64cd\u4f5c\uff0c\u867d\u7136\u4e8c\u8005\u6d88\u606f\u4e00\u6837\uff0c\u4f46\u662f\u6267\u884c\u7684\u6548\u679c\u4e0d\u540c\u3002 * \u9759\u6001\u591a\u6001\u6027\uff1a\u5982\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u7528\u8fd0\u7b97\u7b26+\u8fdb\u884c\u8fd0\u7b97 * \u52a8\u6001\u591a\u6001\u6027\uff1a import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class People(Animal): :\u4eba def talk(self): print('say hello') class Dog(Animal): :\u72d7 def talk(self): print('say wangwang') class Pig(Animal): :\u732a def talk(self): print('say aoao') def func(animal): animal.talk() people1=People() pig1=Pig() dog1=Dog() func(people1) func(pig1) func(dog1) \u591a\u6001\u6027\u662f\u2018\u4e00\u4e2a\u63a5\u53e3\uff08\u51fd\u6570func\uff09\uff0c\u591a\u79cd\u5b9e\u73b0\uff08\u5982f.click()\uff09\u2019 ### 3.\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u591a\u6001\u6027\uff1f * \u589e\u52a0\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027 \u4ee5\u4e0d\u53d8\u5e94\u4e07\u53d8\uff0c\u4e0d\u8bba\u5bf9\u8c61\u5343\u53d8\u4e07\u5316\uff0c\u4f7f\u7528\u8005\u90fd\u662f\u540c\u4e00\u79cd\u5f62\u5f0f\u53bb\u8c03\u7528\uff0c\u5982func(animal) * \u589e\u52a0\u4e86\u7a0b\u5e8f\u53ef\u6269\u5c55\u6027 \u901a\u8fc7\u7ee7\u627fanimal\u7c7b\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0c\u4f7f\u7528\u8005\u65e0\u9700\u66f4\u6539\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u8fd8\u662f\u7528 func(animal)\u53bb\u8c03\u7528 \u3000 import abc class Animal(metaclass=abc.ABCMeta): :\u52a8\u7269 @abc.abstractmethod def talk(self): pass class Cat(Animal): def talk(self): print('say miao') def func(animal): animal.talk() cat1=Cat() func(cat1) **\u8f93\u51fa** say miao \u8fd9\u6837\u6211\u4eec\u65b0\u589e\u4e86\u4e00\u4e2a\u5f62\u6001Cat\uff0c\u7531Cat\u7c7b\u4ea7\u751f\u7684\u5b9e\u4f8bcat1\uff0c\u4f7f\u7528\u8005\u53ef\u4ee5\u5728\u5b8c\u5168\u4e0d\u9700\u8981\u4fee\u6539\u81ea\u5df1\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u3002\u4f7f\u7528\u548c\u4eba\u3001\u72d7\u3001\u732a\u4e00\u6837\u7684\u65b9\u5f0f\u8c03\u7528cat1\u7684talk\u65b9\u6cd5\uff0c\u5373func(cat1) ## \u516d\u3001\u5c01\u88c5 ### 1.\u5c01\u88c5\u7684\u5b9a\u4e49 \u201c\u5c01\u88c5\u201d\u5c31\u662f\u5c06\u62bd\u8c61\u5f97\u5230\u7684\u6570\u636e\u548c\u884c\u4e3a\uff08\u6216\u529f\u80fd\uff09\u76f8\u7ed3\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u6709\u673a\u7684\u6574\u4f53\uff08\u5373\u7c7b\uff09\u3002 \u5c01\u88c5\u7684\u76ee\u7684\u662f\u589e\u5f3a\u5b89\u5168\u6027\u548c\u7b80\u5316\u7f16\u7a0b\uff0c\u4f7f\u7528\u8005\u4e0d\u5fc5\u4e86\u89e3\u5177\u4f53\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u53ea\u662f\u8981\u901a\u8fc7\u5916\u90e8\u63a5\u53e3\uff0c\u4e00\u7279\u5b9a\u7684\u8bbf\u95ee\u6743\u9650\u6765\u4f7f\u7528\u7c7b\u7684\u6210\u5458\u3002 \u4fdd\u62a4\u9690\u79c1\u548c\u9694\u79bb\u590d\u6742\u5ea6\u3002 ### 2.\u5c01\u88c5\u7684\u5c42\u9762 \u7b2c\u4e00\u4e2a\u5c42\u9762\u7684\u5c01\u88c5\uff08\u4ec0\u4e48\u90fd\u4e0d\u7528\u505a\uff09\uff1a\u521b\u5efa\u7c7b\u548c\u5bf9\u8c61\u4f1a\u5206\u522b\u521b\u5efa\u4e8c\u8005\u7684\u540d\u79f0\u7a7a\u95f4\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u7c7b\u540d.\u6216\u8005obj.\u7684\u65b9\u5f0f\u53bb\u8bbf\u95ee\u91cc\u9762\u7684\u540d\u5b57\uff0c\u8fd9\u672c\u8eab\u5c31\u662f\u4e00\u79cd\u5c01\u88c5\u3002 r1.nickname '\u8349\u4e1b\u4f26' Riven.camp 'Noxus' * **\u6ce8\u610f\uff1a** \u5bf9\u4e8e\u8fd9\u4e00\u5c42\u9762\u7684\u5c01\u88c5\uff08\u9690\u85cf\uff09\uff0c\u7c7b\u540d.\u548c\u5b9e\u4f8b\u540d.\u5c31\u662f\u8bbf\u95ee\u9690\u85cf\u5c5e\u6027\u7684\u63a5\u53e3 \u7b2c\u4e8c\u4e2a\u5c42\u9762\u7684\u5c01\u88c5\uff1a\u7c7b\u4e2d\u628a\u67d0\u4e9b\u5c5e\u6027\u548c\u65b9\u6cd5\u9690\u85cf\u8d77\u6765(\u6216\u8005\u8bf4\u5b9a\u4e49\u6210\u79c1\u6709\u7684)\uff0c\u53ea\u5728\u7c7b\u7684\u5185\u90e8\u4f7f\u7528\u3001\u5916\u90e8\u65e0\u6cd5\u8bbf\u95ee\uff0c\u6216\u8005\u7559\u4e0b\u5c11\u91cf\u63a5\u53e3\uff08\u51fd\u6570\uff09\u4f9b\u5916\u90e8\u8bbf\u95ee\u3002 **\u5728python\u4e2d\u7528\u53cc\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f\u5b9e\u73b0\u9690\u85cf\u5c5e\u6027\uff08\u8bbe\u7f6e\u6210\u79c1\u6709\u7684\uff09**\uff0c\u7c7b\u4e2d\u6240\u6709\u53cc\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u540d\u79f0\u5982__x\u90fd\u4f1a\u81ea\u52a8\u53d8\u5f62\u6210\uff1a_\u7c7b\u540d__x\u7684\u5f62\u5f0f\uff1a class Foo: __x=1 def __test(self): print('from test') print(Foo. dict ) print(Foo. Foo__x) **\u8f93\u51fa** {'_Foo__test': , '__module_ ': ' main ', ' dict ': , ' weakref ': , ' doc ': None, '_Foo__x': 1} 1 class Teacher: def init (self,name,age): self.__name=name self.__age=age def tell_info ( self ) : print ( ' \u59d3\u540d:%s,\u5e74\u9f84:%s ' % ( self . __name , self . __age )) def set_info ( self , name , age ) : if not isinstance ( name , str ) : raise TypeError ( ' \u59d3\u540d\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b ' ) if not isinstance ( age , int ) : raise TypeError ( ' \u5e74\u9f84\u5fc5\u987b\u662f\u6574\u578b ' ) self . __name = name self . __age = age t=Teacher('hexin',18) t.tell_info() **\u8f93\u51fa** \u59d3\u540d:hexin,\u5e74\u9f84:18 \u8fd9\u79cd\u81ea\u52a8\u53d8\u5f62\u7684\u7279\u70b9\uff1a > 1.\u7c7b\u4e2d\u5b9a\u4e49\u7684__x\u53ea\u80fd\u5728\u5185\u90e8\u4f7f\u7528\uff0c\u5982self.__x\uff0c\u5f15\u7528\u7684\u5c31\u662f\u53d8\u5f62\u7684\u7ed3\u679c\u3002 > 2.\u8fd9\u79cd\u53d8\u5f62\u5176\u5b9e\u6b63\u662f\u9488\u5bf9\u5916\u90e8\u7684\u53d8\u5f62\uff0c\u5728\u5916\u90e8\u662f\u65e0\u6cd5\u901a\u8fc7__x\u8fd9\u4e2a\u540d\u5b57\u8bbf\u95ee\u5230\u7684\u3002 > 3.\u5728\u5b50\u7c7b\u5b9a\u4e49\u7684__x\u4e0d\u4f1a\u8986\u76d6\u5728\u7236\u7c7b\u5b9a\u4e49\u7684__x\uff0c\u56e0\u4e3a\u5b50\u7c7b\u4e2d\u53d8\u5f62\u6210\u4e86\uff1a_\u5b50\u7c7b\u540d__x,\u800c\u7236\u7c7b\u4e2d\u53d8\u5f62\u6210\u4e86\uff1a_\u7236\u7c7b\u540d__x\uff0c\u5373\u53cc\u4e0b\u6ed1\u7ebf\u5f00\u5934\u7684\u5c5e\u6027\u5728\u7ee7\u627f\u7ed9\u5b50\u7c7b\u65f6\uff0c\u5b50\u7c7b\u662f\u65e0\u6cd5\u8986\u76d6\u7684\u3002 **\u6ce8\u610f\uff1a**\u5bf9\u4e8e\u8fd9\u4e00\u5c42\u9762\u7684\u5c01\u88c5\uff08\u9690\u85cf\uff09\uff0c\u6211\u4eec\u9700\u8981\u5728\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff08\u63a5\u53e3\u51fd\u6570\uff09\u5728\u5b83\u5185\u90e8\u8bbf\u95ee\u88ab\u9690\u85cf\u7684\u5c5e\u6027\uff0c\u7136\u540e\u5916\u90e8\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86. \u8fd9\u79cd\u53d8\u5f62\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\uff1a > 1.\u8fd9\u79cd\u673a\u5236\u4e5f\u5e76\u6ca1\u6709\u771f\u6b63\u610f\u4e49\u4e0a\u9650\u5236\u6211\u4eec\u4ece\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u5c5e\u6027\uff0c\u77e5\u9053\u4e86\u7c7b\u540d\u548c\u5c5e\u6027\u540d\u5c31\u53ef\u4ee5\u62fc\u51fa\u540d\u5b57\uff1a_\u7c7b\u540d__\u5c5e\u6027\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8bbf\u95ee\u4e86\uff0c\u5982a._A__N > 2.\u53d8\u5f62\u7684\u8fc7\u7a0b\u53ea\u5728\u7c7b\u7684\u5b9a\u4e49\u662f\u53d1\u751f\u4e00\u6b21,\u5728\u5b9a\u4e49\u540e\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u4e0d\u4f1a\u53d8\u5f62 > 3.\u5728\u7ee7\u627f\u4e2d\uff0c\u7236\u7c7b\u5982\u679c\u4e0d\u60f3\u8ba9\u5b50\u7c7b\u8986\u76d6\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5c06\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u79c1\u6709\u7684 ### 3. \u7279\u6027\uff08property\uff09 property\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u8bbf\u95ee\u5b83\u65f6\u4f1a\u6267\u884c\u4e00\u6bb5\u529f\u80fd\uff08\u51fd\u6570\uff09\u7136\u540e\u8fd4\u56de\u503c import math class Circle: def init (self,radius): self.radius=radius @property def area ( self ) : return math . pi * self . radius ** 2 @property def perimeter ( self ) : return 2 * math . pi * self . radius c=Circle(10) print(c.radius) print(c.area) ,\u4f1a\u89e6\u53d1\u4e00\u4e2a\u51fd\u6570\u7684\u6267\u884c,\u52a8\u6001\u8ba1\u7b97\u51fa\u4e00\u4e2a\u503c print(c.perimeter) **\u8f93\u51fa** 10 314.1592653589793 62.83185307179586 **\u6ce8\u610f\uff1a**\u6b64\u65f6\u7684\u7279\u6027arear\u548cperimeter\u4e0d\u80fd\u88ab\u8d4b\u503c c.area=3 ''' \u629b\u51fa\u5f02\u5e38: AttributeError: can't set attribute ''' \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u7279\u6027\uff1f \u5c06\u4e00\u4e2a\u7c7b\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u7279\u6027\u4ee5\u540e\uff0c\u5bf9\u8c61\u518d\u53bb\u4f7f\u7528\u7684\u65f6\u5019obj.name,\u6839\u672c\u65e0\u6cd5\u5bdf\u89c9\u81ea\u5df1\u7684name\u662f\u6267\u884c\u4e86\u4e00\u4e2a\u51fd\u6570\u7136\u540e\u8ba1\u7b97\u51fa\u6765\u7684\uff0c\u8fd9\u79cd\u7279\u6027\u7684\u4f7f\u7528\u65b9\u5f0f\u9075\u5faa\u4e86\u7edf\u4e00\u8bbf\u95ee\u7684\u539f\u5219 **\u8865\u5145\uff1a**\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u6709\u4e09\u79cd\u65b9\u5f0f: * \u3010public\u3011 \u8fd9\u79cd\u5176\u5b9e\u5c31\u662f\u4e0d\u5c01\u88c5,\u662f\u5bf9\u5916\u516c\u5f00\u7684 * \u3010protected\u3011 \u8fd9\u79cd\u5c01\u88c5\u65b9\u5f0f\u5bf9\u5916\u4e0d\u516c\u5f00,\u4f46\u5bf9\u670b\u53cb(friend)\u6216\u8005\u5b50\u7c7b\u516c\u5f00 * \u3010private\u3011 \u8fd9\u79cd\u5c01\u88c5\u5bf9\u8c01\u90fd\u4e0d\u516c\u5f00 python\u5e76\u6ca1\u6709\u5728\u8bed\u6cd5\u4e0a\u628a\u5b83\u4eec\u4e09\u4e2a\u5185\u5efa\u5230\u81ea\u5df1\u7684class\u673a\u5236\u4e2d\uff0c\u5728C++\u91cc\u4e00\u822c\u4f1a\u5c06\u6240\u6709\u7684\u6240\u6709\u7684\u6570\u636e\u90fd\u8bbe\u7f6e\u4e3a\u79c1\u6709\u7684\uff0c\u7136\u540e\u63d0\u4f9bset\u548cget\u65b9\u6cd5\uff08\u63a5\u53e3\uff09\u53bb\u8bbe\u7f6e\u548c\u83b7\u53d6\uff0c\u5728python\u4e2d\u901a\u8fc7property\u65b9\u6cd5\u53ef\u4ee5\u5b9e\u73b0 class Foo: def init (self,val): self.__NAME=val @property def name ( self ) : return self . __NAME . name\u8bbf\u95ee\u7684\u662fself . __NAME ( \u8fd9\u4e5f\u662f\u771f\u5b9e\u503c\u7684\u5b58\u653e\u4f4d\u7f6e ) @name . setter def name ( self , value ) : if not isinstance ( value , str ) : raise TypeError ( '%s must be str' % value ) self . __NAME = value , \u5c06\u503cvalue\u5b58\u653e\u5230\u771f\u5b9e\u7684\u4f4d\u7f6eself . __NAME @name . deleter def name ( self ) : raise TypeError ( 'Can not delete' ) f=Foo('egon') print(f.name)","title":"t1=Txt() ,\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u62bd\u8c61\u65b9\u6cd5"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#fname10-typeerror-10-must-be-str","text":"del f.name 'TypeError: Can not delete' \u4e00\u79cdproperty\u7684\u53e4\u8001\u7528\u6cd5 class Foo: def init (self,val): self.__NAME=val def getname ( self ) : return self . __NAME . name \u8bbf\u95ee\u7684\u662f self . __NAME ( \u8fd9\u4e5f\u662f\u771f\u5b9e\u503c\u7684\u5b58\u653e\u4f4d\u7f6e ) def setname ( self , value ) : if not isinstance ( value , str ) : raise TypeError ( ' %s must be str ' % value ) self . __NAME = value ,\u5c06\u503c value \u5b58\u653e\u5230\u771f\u5b9e\u7684\u4f4d\u7f6e self . __NAME def delname ( self ) : raise TypeError ( ' Can not delete ' ) name = property ( getname , setname , delname ) ```","title":"f.name=10 'TypeError: 10 must be str'"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#4_2","text":"\u5c01\u88c5\u5728\u4e8e\u660e\u786e\u533a\u5206\u5185\u5916\uff0c\u4f7f\u5f97\u7c7b\u5b9e\u73b0\u8005\u53ef\u4ee5\u4fee\u6539\u5c01\u88c5\u5185\u7684\u4e1c\u897f\u800c\u4e0d\u5f71\u54cd\u5916\u90e8\u8c03\u7528\u8005\u7684\u4ee3\u7801\uff1b\u800c\u5916\u90e8\u4f7f\u7528\u7528\u8005\u53ea\u77e5\u9053\u4e00\u4e2a\u63a5\u53e3(\u51fd\u6570)\uff0c\u53ea\u8981\u63a5\u53e3\uff08\u51fd\u6570\uff09\u540d\u3001\u53c2\u6570\u4e0d\u53d8\uff0c\u4f7f\u7528\u8005\u7684\u4ee3\u7801\u6c38\u8fdc\u65e0\u9700\u6539\u53d8\u3002 ``` class Room: def init (self,name,owner,width,length,high): self.name=name self.owner=owner self.__width=width self.__length=length self.__high=high def tell_area(self): return self.__width * self.__length r1=Room('\u5367\u5ba4','hexin',20,20,20) r1.tell_area() 400 \u8981\u8ba1\u7b97\u4f53\u79ef class Room: def init (self,name,owner,width,length,high): self.name=name self.owner=owner self.__width=width self.__length=length self.__high=high def tell_area(self): ,\u5185\u90e8\u903b\u8f91\u53d8\u4e86,\u53ea\u9700\u6c42\u4fee\u8be5\u4e0b\u5217\u4e00\u884c\u5c31\u53ef\u4ee5\u5f88\u7b80\u7b54\u7684\u5b9e\u73b0,\u800c\u4e14\u5916\u90e8\u8c03\u7528\u611f\u77e5\u4e0d\u5230,\u4ecd\u7136\u4f7f\u7528\u8be5\u65b9\u6cd5\uff0c\u4f46\u662f\u529f\u80fd\u5df2\u7ecf\u53d8\u4e86 return self.__width * self.__length * self.__high \u5bf9\u4e8e\u4ecd\u7136\u5728\u4f7f\u7528tell_area\u63a5\u53e3\u7684\u4eba\u6765\u8bf4\uff0c\u6839\u672c\u65e0\u9700\u6539\u52a8\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u7528\u4e0a\u65b0\u529f\u80fd r1.tell_area() 8000 ## \u4e03\u3001\u7ed1\u5b9a\u65b9\u6cd5\u4e0e\u975e\u7ed1\u5b9a\u65b9\u6cd5 ### 1.\u5b9a\u4e49 \u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u5206\u6210\u4e24\u5927\u7c7b\uff1a * \u7ed1\u5b9a\u65b9\u6cd5\uff08\u7ed1\u5b9a\u7ed9\u8c01\uff0c\u8c01\u6765\u8c03\u7528\u5c31\u81ea\u52a8\u5c06\u5b83\u672c\u8eab\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09\uff1a \u3000 1.\u7ed1\u5b9a\u5230\u7c7b\u7684\u65b9\u6cd5\uff1a\u7528classmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3002\u4e3a\u7c7b\u91cf\u8eab\u5b9a\u5236 \u7c7b.boud_method(),\u81ea\u52a8\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165 \uff08\u5176\u5b9e\u5bf9\u8c61\u4e5f\u53ef\u8c03\u7528\uff0c\u4f46\u4ecd\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09 \u3000\u3000 2.\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u65b9\u6cd5\uff1a\u6ca1\u6709\u88ab\u4efb\u4f55\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3002 \u4e3a\u5bf9\u8c61\u91cf\u8eab\u5b9a\u5236 \u5bf9\u8c61.boud_method(),\u81ea\u52a8\u5c06\u5bf9\u8c61\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165 \uff08\u5c5e\u4e8e\u7c7b\u7684\u51fd\u6570\uff0c\u7c7b\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u5fc5\u987b\u6309\u7167\u51fd\u6570\u7684\u89c4\u5219\u6765\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u90a3\u4e48\u4e00\u8bf4\uff09\u3000\u3000 * \u975e\u7ed1\u5b9a\u65b9\u6cd5\uff1a\u7528staticmethod\u88c5\u9970\u5668\u88c5\u9970\u7684\u65b9\u6cd5\u3000 \u3000 1.\u4e0e\u7c7b\u6216\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u7c7b\u548c\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u4f46\u662f\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u90a3\u4e48\u4e00\u8bf4\u3002\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u5de5\u5177\u800c\u5df2\u3000\u3000\u3000\u3000 **\u6ce8\u610f\uff1a**\u4e0e\u7ed1\u5b9a\u5230\u5bf9\u8c61\u65b9\u6cd5\u533a\u5206\u5f00\uff0c\u5728\u7c7b\u4e2d\u76f4\u63a5\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u6ca1\u6709\u88ab\u4efb\u4f55\u88c5\u9970\u5668\u88c5\u9970\u7684\uff0c\u90fd\u662f\u7ed1\u5b9a\u5230\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u53ef\u4e0d\u662f\u666e\u901a\u51fd\u6570\uff0c\u5bf9\u8c61\u8c03\u7528\u8be5\u65b9\u6cd5\u4f1a\u81ea\u52a8\u4f20\u503c\uff0c\u800cstaticmethod\u88c5\u9970\u7684\u65b9\u6cd5\uff0c\u4e0d\u7ba1\u8c01\u6765\u8c03\u7528\uff0c\u90fd\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u4e00\u8bf4 ### 2.staticmethod statimethod\u4e0d\u4e0e\u7c7b\u6216\u5bf9\u8c61\u7ed1\u5b9a\uff0c\u8c01\u90fd\u53ef\u4ee5\u8c03\u7528\uff0c\u6ca1\u6709\u81ea\u52a8\u4f20\u503c\u6548\u679c\uff0cpython\u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u51fd\u6570staticmethod\u6765\u628a\u7c7b\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u9759\u6001\u65b9\u6cd5\u3002 import hashlib import time class MySQL: def init (self,host,port): self.id=self.create_id() self.host=host self.port=port @staticmethod def create_id(): m=hashlib.md5(str(time.clock()).encode('utf-8')) return m.hexdigest() print(MySQL.create_id) MySQL.create_id at 0x0000000001E6B9D8> conn=MySQL('127.0.0.1',3306) print(conn.create_id) MySQL.create_id at 0x00000000026FB9D8> ### 3.classmethod classmehtod\u662f\u7ed9\u7c7b\u7528\u7684\uff0c\u5373\u7ed1\u5b9a\u5230\u7c7b\uff0c\u7c7b\u5728\u4f7f\u7528\u65f6\u4f1a\u5c06\u7c7b\u672c\u8eab\u5f53\u505a\u53c2\u6570\u4f20\u7ed9\u7c7b\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\uff08\u5373\u4fbf\u662f\u5bf9\u8c61\u6765\u8c03\u7528\u4e5f\u4f1a\u5c06\u7c7b\u5f53\u4f5c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\uff09\uff0cpython\u4e3a\u6211\u4eec\u5185\u7f6e\u4e86\u51fd\u6570classmethod\u6765\u628a\u7c7b\u4e2d\u7684\u51fd\u6570\u5b9a\u4e49\u6210\u7c7b\u65b9\u6cd5 settings.py HOST='127.0.0.1' PORT=3306 DB_PATH=r'C:\\Users\\Administrator\\PycharmProjects\\test\\\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\\test1\\db' import settings import hashlib import time class MySQL: def init (self,host,port): self.host=host self.port=port @classmethod def from_conf ( cls ) : print ( cls ) return cls ( settings . HOST , settings . PORT ) print(MySQL.from_conf) method MySQL.from_conf of > conn=MySQL.from_conf() print(conn.host,conn.port) conn.from_conf() \u6bd4\u8f83staticmethod\u548cclassmethod\u7684\u533a\u522b import settings class MySQL: def init (self,host,port): self.host=host self.port=port @staticmethod def from_conf(): return MySQL(settings.HOST,settings.PORT) # @classmethod # def from_conf ( cls ) : # return cls ( settings . HOST , settings . PORT ) def __str__ ( self ) : return '\u5c31\u4e0d\u544a\u8bc9\u4f60' class Mariadb(MySQL): def str (self): return '\u4e3b\u673a:%s \u7aef\u53e3:%s' %(self.host,self.port) m=Mariadb.from_conf() print(m) . str ,\u4f46\u662f\u7ed3\u679c\u89e6\u53d1\u4e86MySQL. str__\u7684\u6267\u884c\uff0c\u6253\u5370\u5c31\u4e0d\u544a\u8bc9\u4f60 \u5b9a\u4e49MySQL\u7c7b 1.\u5bf9\u8c61\u6709id\u3001host\u3001port\u4e09\u4e2a\u5c5e\u6027 2.\u5b9a\u4e49\u5de5\u5177create_id\uff0c\u5728\u5b9e\u4f8b\u5316\u65f6\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u968f\u673a\u751f\u6210id\uff0c\u4fdd\u8bc1id\u552f\u4e00 3.\u63d0\u4f9b\u4e24\u79cd\u5b9e\u4f8b\u5316\u65b9\u5f0f\uff0c\u65b9\u5f0f\u4e00\uff1a\u7528\u6237\u4f20\u5165host\u548cport \u65b9\u5f0f\u4e8c\uff1a\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6host\u548cport\u8fdb\u884c\u5b9e\u4f8b\u5316 4.\u4e3a\u5bf9\u8c61\u5b9a\u5236\u65b9\u6cd5\uff0csave\u548cget\uff0csave\u80fd\u81ea\u52a8\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u6587\u4ef6\u4e2d\uff0c\u6587\u4ef6\u540d\u4e3aid\u53f7\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2dDB_PATH;get\u65b9\u6cd5\u7528\u6765\u4ece\u6587\u4ef6\u4e2d\u53cd\u5e8f\u5217\u5316\u51fa\u5bf9\u8c61 .py\u5185\u5bb9 ''' HOST='127.0.0.1' PORT=3306 DB_PATH=r'C:\\Users\\Administrator\\PycharmProjects\\test\\\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\\test1\\db' ''' import settings import hashlib import time import random import pickle import os class MySQL: def __init (self,host,port): self.id=self.create_id() self.host=host self.port=port def save(self): file_path=r'%s%s%s' %(settings.DB_PATH,os.sep,self.id) pickle.dump(self,open(file_path,'wb')) def get ( self ): file_path = r ' %s%s%s ' % ( settings . DB_PATH , os . sep , self . id ) return pickle . load ( open ( file_path , 'rb' )) @ staticmethod def create_id (): m = hashlib . md5 ( str ( time . clock ()) . encode ( 'utf-8' )) . time () \uff0c\u5426\u5219\u4f1a\u51fa\u73b0 id\u91cd\u590d return m . hexdigest () @ classmethod def from_conf ( cls ): print ( cls ) return cls ( settings . HOST , settings . PORT )","title":"4.\u5c01\u88c5\u4e0e\u6269\u5c55\u6027"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#printmysqlfrom_conf-method-mysqlfrom_conf-of","text":"conn=MySQL.from_conf()","title":"print(MySQL.from_conf) method MySQL.from_conf of &gt;"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#printconnid","text":"print(conn.create_id()) print(MySQL.create_id())","title":"print(conn.id)"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#printconnid_1","text":"","title":"print(conn.id)"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#connsave","text":"","title":"conn.save()"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#objconnget","text":"","title":"obj=conn.get()"},{"location":"DevOps/12%20Python/10%20Object%20oriented%20programming%20in%20Python/#printobjid","text":"\u5c0f\u7ec3\u4e60 import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day @staticmethod def now(): .now()\u7684\u5f62\u5f0f\u53bb\u4ea7\u751f\u5b9e\u4f8b,\u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u5f53\u524d\u65f6\u95f4 t=time.localtime() return Date(t.tm_year,t.tm_mon,t.tm_mday) @staticmethod def tomorrow():#\u7528Date.tomorrow()\u7684\u5f62\u5f0f\u53bb\u4ea7\u751f\u5b9e\u4f8b,\u8be5\u5b9e\u4f8b\u7528\u7684\u662f\u660e\u5929\u7684\u65f6\u95f4 t=time.localtime(time.time()+86400) return Date(t.tm_year,t.tm_mon,t.tm_mday) a=Date('1987',11,27) b=Date.now() c=Date.tomorrow() print(a.year,a.month,a.day) print(b.year,b.month,b.day) print(c.year,c.month,c.day) **\u8f93\u51fa** 1987 11 27 2017 6 15 2017 6 16 import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day @staticmethod def now(): t=time.localtime() return Date(t.tm_year,t.tm_mon,t.tm_mday) class EuroDate(Date): def str (self): return 'year:%s month:%s day:%s' %(self.year,self.month,self.day) e=EuroDate.now() print(e) . str ,\u4f46\u662f\u7ed3\u679c\u4e3a ''' \u8f93\u51fa\u7ed3\u679c: < main .Date object at 0x1013f9d68> ''' \u56e0\u4e3ae\u5c31\u662f\u7528Date\u7c7b\u4ea7\u751f\u7684,\u6240\u4ee5\u6839\u672c\u4e0d\u4f1a\u89e6\u53d1EuroDate. str ,\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u7528classmethod import time class Date: def init (self,year,month,day): self.year=year self.month=month self.day=day # @staticmethod # def now(): # t=time.localtime() # return Date(t.tm_year,t.tm_mon,t.tm_mday) @classmethod def now ( cls ) : t = time . localtime () return cls ( t . tm_year , t . tm_mon , t . tm_mday ) , \u5373\u7528\u54ea\u4e2a\u7c7bcls\u6765\u5b9e\u4f8b\u5316 class EuroDate(Date): def str (self): return 'year:%s month:%s day:%s' %(self.year,self.month,self.day) e=EuroDate.now() print(e) . str ,\u6b64\u65f6e\u5c31\u662f\u7531EuroDate\u4ea7\u751f\u7684,\u6240\u4ee5\u4f1a\u5982\u6211\u4eec\u6240\u613f ''' \u8f93\u51fa\u7ed3\u679c: year:2017 month:3 day:3 ''' ```","title":"print(obj.id)"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/","text":"\u4e00\u3001\u6a21\u5757\u5bfc\u5165 \u00b6 1. \u5b9a\u4e49 \u00b6 Python \u6a21\u5757(Module)\uff0c\u662f\u4e00\u4e2a Python \u6587\u4ef6\uff0c\u4ee5 .py \u7ed3\u5c3e\uff0c\u5305\u542b\u4e86 Python \u5bf9\u8c61\u5b9a\u4e49\u548cPython\u8bed\u53e5\u3002 \u6a21\u5757\u8ba9\u4f60\u80fd\u591f\u6709\u903b\u8f91\u5730\u7ec4\u7ec7\u4f60\u7684 Python \u4ee3\u7801\u6bb5\u3002 \u628a\u76f8\u5173\u7684\u4ee3\u7801\u5206\u914d\u5230\u4e00\u4e2a\u6a21\u5757\u91cc\u80fd\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u597d\u7528\uff0c\u66f4\u6613\u61c2\u3002 \u6a21\u5757\u80fd\u5b9a\u4e49\u51fd\u6570\uff0c\u7c7b\u548c\u53d8\u91cf\uff0c\u6a21\u5757\u91cc\u4e5f\u80fd\u5305\u542b\u53ef\u6267\u884c\u7684\u4ee3\u7801\u3002 \u5305\u62ec\uff1a\u5185\u7f6e\u6a21\u5757\uff0c\u81ea\u5b9a\u4e49\u6a21\u5757\uff0c\u7b2c\u4e09\u65b9\u6a21\u5757\uff1b 2. \u4f5c\u7528 \u00b6 \u6700\u5927\u7684\u597d\u5904\u662f\u5927\u5927\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002\u5176\u6b21\uff0c\u7f16\u5199\u4ee3\u7801\u4e0d\u5fc5\u4ece\u96f6\u5f00\u59cb\u3002\u5f53\u4e00\u4e2a\u6a21\u5757\u7f16\u5199\u5b8c\u6bd5\uff0c\u5c31\u53ef\u4ee5\u88ab\u5176\u4ed6\u5730\u65b9\u5f15\u7528\u3002\u6211\u4eec\u5728\u7f16\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e5f\u7ecf\u5e38\u5f15\u7528\u5176\u4ed6\u6a21\u5757\uff0c\u5305\u62ecPython\u5185\u7f6e\u7684\u6a21\u5757\u548c\u6765\u81ea\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\u3002 \u4f7f\u7528\u6a21\u5757\u8fd8\u53ef\u4ee5\u907f\u514d\u51fd\u6570\u540d\u548c\u53d8\u91cf\u540d\u51b2\u7a81\u3002\u76f8\u540c\u540d\u5b57\u7684\u51fd\u6570\u548c\u53d8\u91cf\u5b8c\u5168\u53ef\u4ee5\u5206\u522b\u5b58\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u81ea\u5df1\u5728\u7f16\u5199\u6a21\u5757\u65f6\uff0c\u4e0d\u5fc5\u8003\u8651\u540d\u5b57\u4f1a\u4e0e\u5176\u4ed6\u6a21\u5757\u51b2\u7a81\u3002\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\uff0c\u5c3d\u91cf\u4e0d\u8981\u4e0e\u5185\u7f6e\u51fd\u6570\u540d\u5b57\u51b2\u7a81\u3002 3. import \u00b6 \u6a21\u5757\u5b9a\u4e49\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 import \u8bed\u53e5\u6765\u5f15\u5165\u6a21\u5757\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a import module1[, module2[,... moduleN] \u4f8b\uff1a #spam.py print('from the spam.py') money=1000 def read1(): print('spam->read1->money',money) def read2(): print('spam->read2 calling read') read1() def change(): global money money=0 \u5bfc\u5165\u6a21\u5757 import spam #\u53ea\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u65f6\u624d\u6267\u884cspam.py\u5185\u4ee3\u7801,\u6b64\u5904\u7684\u663e\u5f0f\u6548\u679c\u662f\u53ea\u6253\u5370\u4e00\u6b21'from the spam.py',\u5f53\u7136\u5176\u4ed6\u7684\u9876\u7ea7\u4ee3\u7801\u4e5f\u90fd\u88ab\u6267\u884c\u4e86,\u53ea\u4e0d\u8fc7\u6ca1\u6709\u663e\u793a\u6548\u679c. \u6267\u884c\u7ed3\u679c\uff1a from the spam.py **\u6ce8\uff1a**\u6a21\u5757\u53ef\u4ee5\u5305\u542b\u53ef\u6267\u884c\u7684\u8bed\u53e5\u548c\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8bed\u53e5\u7684\u76ee\u7684\u662f\u521d\u59cb\u5316\u6a21\u5757\uff0c\u5b83\u4eec\u53ea\u5728\u6a21\u5757\u540d\u7b2c\u4e00\u6b21\u9047\u5230\u5bfc\u5165import\u8bed\u53e5\u65f6\u624d\u6267\u884c\uff08import\u8bed\u53e5\u662f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u4f7f\u7528\u7684,\u4e14\u9488\u5bf9\u540c\u4e00\u4e2a\u6a21\u5757\u5f88import\u591a\u6b21,\u4e3a\u4e86\u9632\u6b62\u4f60\u91cd\u590d\u5bfc\u5165\uff0cpython\u7684\u4f18\u5316\u624b\u6bb5\u662f\uff1a\u7b2c\u4e00\u6b21\u5bfc\u5165\u540e\u5c31\u5c06\u6a21\u5757\u540d\u52a0\u8f7d\u5230\u5185\u5b58\u4e86\uff0c\u540e\u7eed\u7684import\u8bed\u53e5\u4ec5\u662f\u5bf9\u5df2\u7ecf\u52a0\u8f7d\u5927\u5185\u5b58\u4e2d\u7684\u6a21\u5757\u5bf9\u8c61\u589e\u52a0\u4e86\u4e00\u6b21\u5f15\u7528\uff0c\u4e0d\u4f1a\u91cd\u65b0\u6267\u884c\u6a21\u5757\u5185\u7684\u8bed\u53e5\uff09 import\u5bfc\u5165\u6a21\u5757\u5e72\u7684\u4e8b\uff1a 1.\u4ea7\u751f\u65b0\u7684\u540d\u79f0\u7a7a\u95f4 2.\u4ee5\u65b0\u5efa\u7684\u540d\u79f0\u7a7a\u95f4\u4e3a\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801 3.\u62ff\u5230\u4e00\u4e2a\u6a21\u5757\u540dspam\uff0c\u6307\u5411spam.py\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4 \u6d4b\u8bd5\u4e00:money\u4e0espam.money\u4e0d\u51b2\u7a81 #\u6d4b\u8bd5\u4e00:money\u4e0espam.money\u4e0d\u51b2\u7a81 #test.py import spam money=10 print(spam.money) ''' \u6267\u884c\u7ed3\u679c\uff1a from the spam.py 1000 ''' \u6d4b\u8bd5\u4e8c\uff1aread1\u4e0espam.read1\u4e0d\u51b2\u7a81 #\u6d4b\u8bd5\u4e8c\uff1aread1\u4e0espam.read1\u4e0d\u51b2\u7a81 #test.py import spam def read1(): print('========') spam.read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read1->money 1000 ''' \u6d4b\u8bd5\u4e09\uff1a\u6267\u884cspam.change()\u64cd\u4f5c\u7684\u5168\u5c40\u53d8\u91cfmoney\u4ecd\u7136\u662fspam\u4e2d\u7684money #\u6d4b\u8bd5\u4e09\uff1a\u6267\u884cspam.change()\u64cd\u4f5c\u7684\u5168\u5c40\u53d8\u91cfmoney\u4ecd\u7136\u662fspam\u4e2d\u7684 #test.py import spam money=1 spam.change() print(money) ''' \u6267\u884c\u7ed3\u679c\uff1a from the spam.py 1 ''' as\uff0c\u4e3a\u6a21\u5757\u540d\u8d77\u522b\u540d import spam as sm #sm\u4e3aspam\u7684\u522b\u540d print(sm.money) \u4f8b\uff1a \u4e3a\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\u8d77\u522b\u540d\u7684\u65b9\u5f0f\u5bf9\u7f16\u5199\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u5f88\u6709\u7528\uff0c\u5047\u8bbe\u6709\u4e24\u4e2a\u6a21\u5757xmlreader.py\u548ccsvreader.py\uff0c\u5b83\u4eec\u90fd\u5b9a\u4e49\u4e86\u51fd\u6570read_data(filename):\u7528\u6765\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e9b\u6570\u636e\uff0c\u4f46\u91c7\u7528\u4e0d\u540c\u7684\u8f93\u5165\u683c\u5f0f\u3002\u53ef\u4ee5\u7f16\u5199\u4ee3\u7801\u6765\u9009\u62e9\u6027\u5730\u6311\u9009\u8bfb\u53d6\u6a21\u5757\uff0c\u4f8b\u5982 if file_format == 'xml': import xmlreader as reader elif file_format == 'csv': import csvreader as reader data=reader.read_date(filename) \u5728\u4e00\u884c\u5bfc\u5165\u591a\u4e2a\u6a21\u5757 import sys,os,re 4. From\u2026import \u00b6 from modname import name1[, name2[, ... nameN]] \u8981\u5bfc\u5165\u6a21\u5757 fib \u7684 fibonacci \u51fd\u6570\uff0c\u4f7f\u7528\u5982\u4e0b\u8bed\u53e5\uff1a from fib import fibonacci \u8fd9\u4e2a\u58f0\u660e\u4e0d\u4f1a\u628a\u6574\u4e2a fib \u6a21\u5757\u5bfc\u5165\u5230\u5f53\u524d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5b83\u53ea\u4f1a\u5c06 fib \u91cc\u7684 fibonacci \u5355\u4e2a\u5f15\u5165\u5230\u6267\u884c\u8fd9\u4e2a\u58f0\u660e\u7684\u6a21\u5757\u7684\u5168\u5c40\u7b26\u53f7\u8868\u3002 from... import..\u5bfc\u5165\u6a21\u5757\u5e72\u7684\u4e8b\uff1a 1.\u4ea7\u751f\u65b0\u7684\u540d\u79f0\u7a7a\u95f4 2.\u4ee5\u65b0\u5efa\u7684\u540d\u79f0\u7a7a\u95f4\u4e3a\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801 3.\u76f4\u63a5\u62ff\u5230\u5c31\u662fspam.py\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4\u4e2d\u540d\u5b57 #\u6d4b\u8bd5\u4e00\uff1a\u5bfc\u5165\u7684\u51fd\u6570read1\uff0c\u6267\u884c\u65f6\u4ecd\u7136\u56de\u5230spam.py\u4e2d\u5bfb\u627e\u5168\u5c40\u53d8\u91cfmoney #test.py from spam import read1 money=1000 read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read1->money 1000 ''' #\u6d4b\u8bd5\u4e8c:\u5bfc\u5165\u7684\u51fd\u6570read2\uff0c\u6267\u884c\u65f6\u9700\u8981\u8c03\u7528read1(),\u4ecd\u7136\u56de\u5230spam.py\u4e2d\u627eread1() #test.py from spam import read2 def read1(): print('==========') read2() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read2 calling read spam->read1->money 1000 ''' \u4f46\u5982\u679c\u5f53\u524d\u6709\u91cd\u540dread1\u6216\u8005read2\uff0c\u90a3\u4e48\u4f1a\u6709\u8986\u76d6\u6548\u679c\u3002 #\u6d4b\u8bd5\u4e09:\u5bfc\u5165\u7684\u51fd\u6570read1\uff0c\u88ab\u5f53\u524d\u4f4d\u7f6e\u5b9a\u4e49\u7684read1\u8986\u76d6\u6389\u4e86 #test.py from spam import read1 def read1(): print('==========') read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py ========== ''' \u9700\u8981\u7279\u522b\u5f3a\u8c03\u7684\u4e00\u70b9\u662f\uff1apython\u4e2d\u7684\u53d8\u91cf\u8d4b\u503c\u4e0d\u662f\u4e00\u79cd\u5b58\u50a8\u64cd\u4f5c\uff0c\u800c\u53ea\u662f\u4e00\u79cd\u7ed1\u5b9a\u5173\u7cfb\uff0c\u5982\u4e0b\uff1a from spam import money,read1 money=100 #\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u540d\u5b57money\u7ed1\u5b9a\u5230\u4e86100 print(money) #\u6253\u5370\u5f53\u524d\u7684\u540d\u5b57 read1() #\u8bfb\u53d6spam.py\u4e2d\u7684\u540d\u5b57money,\u4ecd\u7136\u4e3a1000 ''' from the spam.py 100 spam->read1->money 1000 ''' from ... import ... \u4f18\u70b9:\u65b9\u4fbf\uff0c\u4e0d\u7528\u52a0\u524d\u7f00 \u7f3a\u70b9\uff1a\u5bb9\u6613\u8ddf\u5f53\u524d\u6587\u4ef6\u7684\u540d\u79f0\u7a7a\u95f4\u51b2\u7a81 from ... import...\u4e5f\u652f\u6301as\u548c\u5bfc\u5165\u591a\u6a21\u5757 from spam import read1 as read from spam import (read1, read2, money) ``` * from spam import * \u628aspam\u4e2d\u6240\u6709\u7684\u4e0d\u662f\u4ee5\u4e0b\u5212\u7ebf(_)\u5f00\u5934\u7684\u540d\u5b57\u90fd\u5bfc\u5165\u5230\u5f53\u524d\u4f4d\u7f6e\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6211\u4eec\u7684python\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u4f7f\u7528\u8fd9\u79cd\u5bfc\u5165\u65b9\u5f0f\uff0c\u56e0\u4e3a*\u4f60\u4e0d\u77e5\u9053\u4f60\u5bfc\u5165\u4ec0\u4e48\u540d\u5b57\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u4f60\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u7684\u540d\u5b57\u3002\u800c\u4e14\u53ef\u8bfb\u6027\u6781\u5176\u7684\u5dee\uff0c\u5728\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u5bfc\u5165\u65f6\u6ca1\u6709\u95ee\u9898\u3002 from spam import * ## \u5c06\u6a21\u5757spam\u4e2d\u6240\u6709\u7684\u540d\u5b57\u90fd\u5bfc\u5165\u5230\u5f53\u524d\u540d\u79f0\u7a7a\u95f4 print(money) print(read1) print(read2) print(change) ''' \u6267\u884c\u7ed3\u679c: from the spam.py 1000 ''' * __all__\u6765\u63a7\u5236*\uff08\u7528\u6765\u53d1\u5e03\u65b0\u7248\u672c\uff09 \u5728spam.py\u4e2d\u65b0\u589e\u4e00\u884c all =['money','read1'] spam import *\u5c31\u8fd9\u80fd\u5bfc\u5165\u5217\u8868\u4e2d\u89c4\u5b9a\u7684\u4e24\u4e2a\u540d\u5b57 * __name__ spam.py\u5f53\u505a\u811a\u672c\u6267\u884c\uff0c__name__='__main__' spam.py\u5f53\u505a\u6a21\u5757\u5bfc\u5165\uff0c__name__=\u6a21\u5757\u540d \u4f5c\u7528\uff1a\u7528\u6765\u63a7\u5236.py\u6587\u4ef6\u5728\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u4e0b\u6267\u884c\u4e0d\u540c\u7684\u903b\u8f91 .py def fib(n): # write Fibonacci series up to n a, b = 0, 1 while b < n: print(b, end=' ') a, b = b, a+b print() def fib2(n): # return Fibonacci series up to n result = [] a, b = 0, 1 while b < n: result.append(b) a, b = b, a+b return result if name == \" main \": import sys fib(int(sys.argv[1])) \u6267\u884c fib.py python fib.py 50 ### 5.\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84 \u6a21\u5757\u7684\u67e5\u627e\u987a\u5e8f\u662f\uff1a\u5185\u5b58\u4e2d\u5df2\u7ecf\u52a0\u8f7d\u7684\u6a21\u5757->\u5185\u7f6e\u6a21\u5757->sys.path\u8def\u5f84\u4e2d\u5305\u542b\u7684\u6a21\u5757 python\u89e3\u91ca\u5668\u5728\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4e00\u4e9b\u6a21\u5757\uff0c\u53ef\u4ee5\u4f7f\u7528sys.modules\u67e5\u770b\uff0c\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u67d0\u4e2a\u6a21\u5757\u65f6\uff08\u6bd4\u5982spam\uff09\uff0c\u4f1a\u5148\u68c0\u67e5\u8be5\u6a21\u5757\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff08\u5f53\u524d\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u7a7a\u95f4\u5bf9\u5e94\u7684\u5185\u5b58\uff09\uff0c\u5982\u679c\u6709\u5219\u76f4\u63a5\u5f15\u7528 \u5982\u679c\u6ca1\u6709\uff0c\u89e3\u91ca\u5668\u5219\u4f1a\u67e5\u627e\u540c\u540d\u7684\u5185\u5efa\u6a21\u5757\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\u5c31\u4ecesys.path\u7ed9\u51fa\u7684\u76ee\u5f55\u5217\u8868\u4e2d\u4f9d\u6b21\u5bfb\u627espam.py\u6587\u4ef6\u3002 \u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u540d\u4e0d\u5e94\u8be5\u4e0e\u7cfb\u7edf\u5185\u7f6e\u6a21\u5757\u91cd\u540d\u3002 \u5728\u521d\u59cb\u5316\u540e\uff0cpython\u7a0b\u5e8f\u53ef\u4ee5\u4fee\u6539sys.path,\u8def\u5f84\u653e\u5230\u524d\u9762\u7684\u4f18\u5148\u4e8e\u6807\u51c6\u5e93\u88ab\u52a0\u8f7d\u3002 **\u6ce8\u610f\uff1a**\u641c\u7d22\u65f6\u6309\u7167sys.path\u4e2d\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u67e5\u627e\uff0c\u4f4d\u4e8e\u524d\u7684\u4f18\u5148\u88ab\u67e5\u627e\uff0csys.path\u4e2d\u8fd8\u53ef\u80fd\u5305\u542b.zip\u5f52\u6863\u6587\u4ef6\u548c.egg\u6587\u4ef6\uff0cpython\u4f1a\u628a.zip\u5f52\u6863\u6587\u4ef6\u5f53\u6210\u4e00\u4e2a\u76ee\u5f55\u53bb\u5904\u7406\uff0c module.zip foo.py bar.py import sys sys.path.append('module.zip') import foo,bar sys.path.append('module.zip/lib/python') **\u6ce8\u610f\uff1a**windows\u4e0b\u7684\u8def\u5f84\u4e0d\u52a0r\u5f00\u5934\uff0c\u4f1a\u8bed\u6cd5\u9519\u8bef windows\u4e0b\u7684\u8def\u5f84\u4e0d\u52a0r\u5f00\u5934\uff0c\u4f1a\u8bed\u6cd5\u9519\u8bef sys.path.insert(0,r'C:\\Users\\Administrator\\PycharmProjects\\a') ## \u4e8c\u3001\u5305\u7684\u5bfc\u5165 ### 1. \u5b9a\u4e49 \u5305\u662f\u4e00\u79cd\u901a\u8fc7\u4f7f\u7528\u2018.\u6a21\u5757\u540d\u2019\u6765\u7ec4\u7ec7python\u6a21\u5757\u540d\u79f0\u7a7a\u95f4\u7684\u65b9\u5f0f\u3002 \u65e0\u8bba\u662fimport\u5f62\u5f0f\u8fd8\u662ffrom...import\u5f62\u5f0f\uff0c\u51e1\u662f\u5728\u5bfc\u5165\u8bed\u53e5\u4e2d\uff08\u800c\u4e0d\u662f\u5728\u4f7f\u7528\u65f6\uff09\u9047\u5230\u5e26\u70b9\u7684\uff0c\u90fd\u8981\u7b2c\u4e00\u65f6\u95f4\u63d0\u9ad8\u8b66\u89c9\uff1a\u8fd9\u662f\u5173\u4e8e\u5305\u624d\u6709\u7684\u5bfc\u5165\u8bed\u6cd5\u3002.\u7684\u5de6\u8fb9\u5fc5\u987b\u662f\u5305\uff1b \u5305\u662f\u4e00\u4e2a\u5206\u5c42\u6b21\u7684\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7531\u6a21\u5757\u53ca\u5b50\u5305\uff0c\u548c\u5b50\u5305\u4e0b\u7684\u5b50\u5305\u7b49\u7ec4\u6210\u7684 Python \u7684\u5e94\u7528\u73af\u5883\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5305\u5c31\u662f\u6587\u4ef6\u5939\uff0c\u4f46\u8be5\u6587\u4ef6\u5939\u4e0b\u5fc5\u987b\u5b58\u5728 __init__.py \u6587\u4ef6, \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a\u3002__int__.py\u7528\u4e8e\u6807\u8bc6\u5f53\u524d\u6587\u4ef6\u5939\u662f\u4e00\u4e2a\u5305\u3002 \u5305\u662f\u7531\u4e00\u7cfb\u5217\u6a21\u5757\u7ec4\u6210\u7684\u96c6\u5408\u3002\u6a21\u5757\u662f\u5904\u7406\u67d0\u4e00\u7c7b\u95ee\u9898\u7684\u51fd\u6570\u548c\u7c7b\u7684\u96c6\u5408\u3002 **\u4f8b\uff1a** glance/ package \u251c\u2500\u2500 init .py the glance package \u251c\u2500\u2500 api for api \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 policy.py \u2502 \u2514\u2500\u2500 versions.py \u251c\u2500\u2500 cmd for cmd \u2502 \u251c\u2500\u2500 init .py \u2502 \u2514\u2500\u2500 manage.py \u2514\u2500\u2500 db for db \u251c\u2500\u2500 __init__.py \u2514\u2500\u2500 models.py \u6587\u4ef6\u5185\u5bb9 .py def get(): print('from policy.py') .py def create_resource(conf): print('from version.py: ',conf) .py def main(): print('from manage.py') .py def register_models(engine): print('from models.py: ',engine) ### 2. import \u5728\u4f7f\u7528\u4e00\u4e2a\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6216\u7c7b\u4e4b\u524d\uff0c\u9996\u5148\u8981\u5bfc\u5165\u8be5\u6a21\u5757\u3002\u6a21\u5757\u7684\u5bfc\u5165\u4f7f\u7528import\u8bed\u53e5\u3002 \u8c03\u7528\u6a21\u5757\u7684\u51fd\u6570\u6216\u7c7b\u65f6\uff0c\u9700\u8981\u4ee5\u6a21\u5757\u540d\u4f5c\u4e3a\u524d\u7f00\u3002 import\u5bfc\u5165\u6587\u4ef6\u65f6\uff0c\u4ea7\u751f\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u6765\u6e90\u4e8e\u6587\u4ef6\uff0cimport \u5305\uff0c\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4\u7684\u540d\u5b57\u540c\u6837\u6765\u6e90\u4e8e\u6587\u4ef6\uff0c\u5373\u5305\u4e0b\u7684__init__.py\uff0c\u5bfc\u5165\u5305\u672c\u8d28\u5c31\u662f\u5728\u5bfc\u5165\u8be5\u6587\u4ef6 **\u4f8b\uff1a** \u5728\u4e0e\u5305glance\u540c\u7ea7\u522b\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 import glance.db.models glance.db.models.register_models('mysql') \u51e1\u662f\u5728\u5bfc\u5165\u65f6\u5e26\u70b9\u7684\uff0c\u70b9\u7684\u5de6\u8fb9\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5305\u3002 ### 3.from ... import ... \u5982\u679c\u4e0d\u60f3\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u524d\u7f00\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528from\u2026import\u2026\u8bed\u53e5\u5c06\u6a21\u5757\u5bfc\u5165\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662ffrom\u540eimport\u5bfc\u5165\u7684\u6a21\u5757\uff0c\u5fc5\u987b\u662f\u660e\u786e\u7684\u4e00\u4e2a\u4e0d\u80fd\u5e26\u70b9\uff0c\u5426\u5219\u4f1a\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5982\uff1afrom a import b.c\u662f\u9519\u8bef\u8bed\u6cd5 **\u4f8b\uff1a** \u5728\u4e0e\u5305glance\u540c\u7ea7\u522b\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 from glance.db import models models.register_models('mysql') from glance.db.models import register_models register_models('mysql') \u6267\u884c\u7684\u6587\u4ef6\u7684\u5f53\u524d\u8def\u5f84\u5c31\u662fsys.path import sys print(sys.path) **\u6ce8\u610f\uff1a** 1.\u5173\u4e8e\u5305\u76f8\u5173\u7684\u5bfc\u5165\u8bed\u53e5\u4e5f\u5206\u4e3aimport\u548cfrom ... import ...\u4e24\u79cd\uff0c\u4f46\u662f\u65e0\u8bba\u54ea\u79cd\uff0c\u65e0\u8bba\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u5728\u5bfc\u5165\u65f6\u90fd\u5fc5\u987b\u9075\u5faa\u4e00\u4e2a\u539f\u5219\uff1a\u51e1\u662f\u5728\u5bfc\u5165\u65f6\u5e26\u70b9\u7684\uff0c\u70b9\u7684\u5de6\u8fb9\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5305\uff0c\u5426\u5219\u975e\u6cd5\u3002\u53ef\u4ee5\u5e26\u6709\u4e00\u8fde\u4e32\u7684\u70b9\uff0c\u5982item.subitem.subsubitem,\u4f46\u90fd\u5fc5\u987b\u9075\u5faa\u8fd9\u4e2a\u539f\u5219\u3002 2.\u5bf9\u4e8e\u5bfc\u5165\u540e\uff0c\u5728\u4f7f\u7528\u65f6\u5c31\u6ca1\u6709\u8fd9\u79cd\u9650\u5236\u4e86\uff0c\u70b9\u7684\u5de6\u8fb9\u53ef\u4ee5\u662f\u5305,\u6a21\u5757\uff0c\u51fd\u6570\uff0c\u7c7b(\u5b83\u4eec\u90fd\u53ef\u4ee5\u7528\u70b9\u7684\u65b9\u5f0f\u8c03\u7528\u81ea\u5df1\u7684\u5c5e\u6027)\u3002 3.\u5bf9\u6bd4import item \u548cfrom item import name\u7684\u5e94\u7528\u573a\u666f\uff1a \u5982\u679c\u6211\u4eec\u60f3\u76f4\u63a5\u4f7f\u7528name\u90a3\u5fc5\u987b\u4f7f\u7528\u540e\u8005\u3002 ### 4. __init\\__.py\u6587\u4ef6 \u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\uff0c\u53ea\u8981\u662f\u7b2c\u4e00\u6b21\u5bfc\u5165\u5305\u6216\u8005\u662f\u5305\u7684\u4efb\u4f55\u5176\u4ed6\u90e8\u5206\uff0c\u90fd\u4f1a\u4f9d\u6b21\u6267\u884c\u5305\u4e0b\u7684__init__.py\u6587\u4ef6(\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5305\u7684\u6587\u4ef6\u5185\u90fd\u6253\u5370\u4e00\u884c\u5185\u5bb9\u6765\u9a8c\u8bc1\u4e00\u4e0b)\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u5b58\u653e\u4e00\u4e9b\u521d\u59cb\u5316\u5305\u7684\u4ee3\u7801\u3002 ### 5.from glance.api import * \u4ece\u5305api\u4e2d\u5bfc\u5165\u6240\u6709\uff0c\u5b9e\u9645\u4e0a\u8be5\u8bed\u53e5\u53ea\u4f1a\u5bfc\u5165\u5305api\u4e0b__init__.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49__all___: .py\u4e2d\u5b9a\u4e49 x=10 def func(): print('from api.__init.py') all =['x','func','policy'] \u6b64\u65f6\u6211\u4eec\u5728\u4e8eglance\u540c\u7ea7\u7684\u6587\u4ef6\u4e2d\u6267\u884cfrom glance.api import *\u5c31\u5bfc\u5165__all__\u4e2d\u7684\u5185\u5bb9\uff08versions\u4ecd\u7136\u4e0d\u80fd\u5bfc\u5165\uff09\u3002 ### 6.\u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165 \u6700\u9876\u7ea7\u5305glance\u662f\u5199\u7ed9\u522b\u4eba\u7528\u7684\uff0c\u7136\u540e\u5728glance\u5305\u5185\u90e8\u4e5f\u4f1a\u6709\u5f7c\u6b64\u4e4b\u95f4\u4e92\u76f8\u5bfc\u5165\u7684\u9700\u6c42\uff0c\u8fd9\u65f6\u5019\u5c31\u6709\u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165\u4e24\u79cd\u65b9\u5f0f\uff1a \u7edd\u5bf9\u5bfc\u5165\uff1a\u4ee5glance\u4f5c\u4e3a\u8d77\u59cb \u76f8\u5bf9\u5bfc\u5165\uff1a\u7528.\u6216\u8005..\u7684\u65b9\u5f0f\u6700\u4e3a\u8d77\u59cb\uff08\u53ea\u80fd\u5728\u4e00\u4e2a\u5305\u4e2d\u4f7f\u7528\uff0c\u4e0d\u80fd\u7528\u4e8e\u4e0d\u540c\u76ee\u5f55\u5185\uff09 \u4f8b\uff1a\u6211\u4eec\u5728glance/api/version.py\u4e2d\u60f3\u8981\u5bfc\u5165glance/cmd/manage.py \u5728glance/api/version.py from glance.cmd import manage manage.main() from ..cmd import manage manage.main() \u6d4b\u8bd5\u7ed3\u679c\uff1a\u6ce8\u610f\u4e00\u5b9a\u8981\u5728\u4e8eglance\u540c\u7ea7\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 from glance.api import versions \u6ce8\u610f\uff1a\u53ef\u4ee5\u7528import\u5bfc\u5165\u5185\u7f6e\u6216\u8005\u7b2c\u4e09\u65b9\u6a21\u5757\uff08\u5df2\u7ecf\u5728sys.path\u4e2d\uff09\uff0c\u4f46\u662f\u8981\u7edd\u5bf9\u907f\u514d\u4f7f\u7528import\u6765\u5bfc\u5165\u81ea\u5b9a\u4e49\u5305\u7684\u5b50\u6a21\u5757(\u6ca1\u6709\u5728sys.path\u4e2d)\uff0c\u5e94\u8be5\u4f7f\u7528from... import ...\u7684\u7edd\u5bf9\u6216\u8005\u76f8\u5bf9\u5bfc\u5165,\u4e14\u5305\u7684\u76f8\u5bf9\u5bfc\u5165\u53ea\u80fd\u7528from\u7684\u5f62\u5f0f\u3002 ### 7.\u5355\u72ec\u5bfc\u5165\u5305 \u5355\u72ec\u5bfc\u5165\u5305\u540d\u79f0\u65f6\u4e0d\u4f1a\u5bfc\u5165\u5305\u4e2d\u6240\u6709\u5305\u542b\u7684\u6240\u6709\u5b50\u6a21\u5757\uff0c\u5982 .py\u4e2d import glance glance.cmd.manage.main() ''' \u6267\u884c\u7ed3\u679c\uff1a AttributeError: module 'glance' has no attribute 'cmd' ''' \u89e3\u51b3\u65b9\u6cd5\uff1a .py from . import cmd .py from . import manage \u6267\u884c\uff1a .py\u4e2d import glance glance.cmd.manage.main() ``` \u5343\u4e07\u522b\u95ee\uff1a__all__\u4e0d\u80fd\u89e3\u51b3\u5417\uff0c__all__\u662f\u7528\u4e8e\u63a7\u5236from...import *","title":"11 Python\u6a21\u5757\u4e0e\u5305\u7684\u5bfc\u5165"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/#_1","text":"","title":"\u4e00\u3001\u6a21\u5757\u5bfc\u5165"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/#1","text":"Python \u6a21\u5757(Module)\uff0c\u662f\u4e00\u4e2a Python \u6587\u4ef6\uff0c\u4ee5 .py \u7ed3\u5c3e\uff0c\u5305\u542b\u4e86 Python \u5bf9\u8c61\u5b9a\u4e49\u548cPython\u8bed\u53e5\u3002 \u6a21\u5757\u8ba9\u4f60\u80fd\u591f\u6709\u903b\u8f91\u5730\u7ec4\u7ec7\u4f60\u7684 Python \u4ee3\u7801\u6bb5\u3002 \u628a\u76f8\u5173\u7684\u4ee3\u7801\u5206\u914d\u5230\u4e00\u4e2a\u6a21\u5757\u91cc\u80fd\u8ba9\u4f60\u7684\u4ee3\u7801\u66f4\u597d\u7528\uff0c\u66f4\u6613\u61c2\u3002 \u6a21\u5757\u80fd\u5b9a\u4e49\u51fd\u6570\uff0c\u7c7b\u548c\u53d8\u91cf\uff0c\u6a21\u5757\u91cc\u4e5f\u80fd\u5305\u542b\u53ef\u6267\u884c\u7684\u4ee3\u7801\u3002 \u5305\u62ec\uff1a\u5185\u7f6e\u6a21\u5757\uff0c\u81ea\u5b9a\u4e49\u6a21\u5757\uff0c\u7b2c\u4e09\u65b9\u6a21\u5757\uff1b","title":"1. \u5b9a\u4e49"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/#2","text":"\u6700\u5927\u7684\u597d\u5904\u662f\u5927\u5927\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u3002\u5176\u6b21\uff0c\u7f16\u5199\u4ee3\u7801\u4e0d\u5fc5\u4ece\u96f6\u5f00\u59cb\u3002\u5f53\u4e00\u4e2a\u6a21\u5757\u7f16\u5199\u5b8c\u6bd5\uff0c\u5c31\u53ef\u4ee5\u88ab\u5176\u4ed6\u5730\u65b9\u5f15\u7528\u3002\u6211\u4eec\u5728\u7f16\u5199\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e5f\u7ecf\u5e38\u5f15\u7528\u5176\u4ed6\u6a21\u5757\uff0c\u5305\u62ecPython\u5185\u7f6e\u7684\u6a21\u5757\u548c\u6765\u81ea\u7b2c\u4e09\u65b9\u7684\u6a21\u5757\u3002 \u4f7f\u7528\u6a21\u5757\u8fd8\u53ef\u4ee5\u907f\u514d\u51fd\u6570\u540d\u548c\u53d8\u91cf\u540d\u51b2\u7a81\u3002\u76f8\u540c\u540d\u5b57\u7684\u51fd\u6570\u548c\u53d8\u91cf\u5b8c\u5168\u53ef\u4ee5\u5206\u522b\u5b58\u5728\u4e0d\u540c\u7684\u6a21\u5757\u4e2d\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u81ea\u5df1\u5728\u7f16\u5199\u6a21\u5757\u65f6\uff0c\u4e0d\u5fc5\u8003\u8651\u540d\u5b57\u4f1a\u4e0e\u5176\u4ed6\u6a21\u5757\u51b2\u7a81\u3002\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\uff0c\u5c3d\u91cf\u4e0d\u8981\u4e0e\u5185\u7f6e\u51fd\u6570\u540d\u5b57\u51b2\u7a81\u3002","title":"2. \u4f5c\u7528"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/#3-import","text":"\u6a21\u5757\u5b9a\u4e49\u597d\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 import \u8bed\u53e5\u6765\u5f15\u5165\u6a21\u5757\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a import module1[, module2[,... moduleN] \u4f8b\uff1a #spam.py print('from the spam.py') money=1000 def read1(): print('spam->read1->money',money) def read2(): print('spam->read2 calling read') read1() def change(): global money money=0 \u5bfc\u5165\u6a21\u5757 import spam #\u53ea\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u65f6\u624d\u6267\u884cspam.py\u5185\u4ee3\u7801,\u6b64\u5904\u7684\u663e\u5f0f\u6548\u679c\u662f\u53ea\u6253\u5370\u4e00\u6b21'from the spam.py',\u5f53\u7136\u5176\u4ed6\u7684\u9876\u7ea7\u4ee3\u7801\u4e5f\u90fd\u88ab\u6267\u884c\u4e86,\u53ea\u4e0d\u8fc7\u6ca1\u6709\u663e\u793a\u6548\u679c. \u6267\u884c\u7ed3\u679c\uff1a from the spam.py **\u6ce8\uff1a**\u6a21\u5757\u53ef\u4ee5\u5305\u542b\u53ef\u6267\u884c\u7684\u8bed\u53e5\u548c\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u8bed\u53e5\u7684\u76ee\u7684\u662f\u521d\u59cb\u5316\u6a21\u5757\uff0c\u5b83\u4eec\u53ea\u5728\u6a21\u5757\u540d\u7b2c\u4e00\u6b21\u9047\u5230\u5bfc\u5165import\u8bed\u53e5\u65f6\u624d\u6267\u884c\uff08import\u8bed\u53e5\u662f\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u4f7f\u7528\u7684,\u4e14\u9488\u5bf9\u540c\u4e00\u4e2a\u6a21\u5757\u5f88import\u591a\u6b21,\u4e3a\u4e86\u9632\u6b62\u4f60\u91cd\u590d\u5bfc\u5165\uff0cpython\u7684\u4f18\u5316\u624b\u6bb5\u662f\uff1a\u7b2c\u4e00\u6b21\u5bfc\u5165\u540e\u5c31\u5c06\u6a21\u5757\u540d\u52a0\u8f7d\u5230\u5185\u5b58\u4e86\uff0c\u540e\u7eed\u7684import\u8bed\u53e5\u4ec5\u662f\u5bf9\u5df2\u7ecf\u52a0\u8f7d\u5927\u5185\u5b58\u4e2d\u7684\u6a21\u5757\u5bf9\u8c61\u589e\u52a0\u4e86\u4e00\u6b21\u5f15\u7528\uff0c\u4e0d\u4f1a\u91cd\u65b0\u6267\u884c\u6a21\u5757\u5185\u7684\u8bed\u53e5\uff09 import\u5bfc\u5165\u6a21\u5757\u5e72\u7684\u4e8b\uff1a 1.\u4ea7\u751f\u65b0\u7684\u540d\u79f0\u7a7a\u95f4 2.\u4ee5\u65b0\u5efa\u7684\u540d\u79f0\u7a7a\u95f4\u4e3a\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801 3.\u62ff\u5230\u4e00\u4e2a\u6a21\u5757\u540dspam\uff0c\u6307\u5411spam.py\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4 \u6d4b\u8bd5\u4e00:money\u4e0espam.money\u4e0d\u51b2\u7a81 #\u6d4b\u8bd5\u4e00:money\u4e0espam.money\u4e0d\u51b2\u7a81 #test.py import spam money=10 print(spam.money) ''' \u6267\u884c\u7ed3\u679c\uff1a from the spam.py 1000 ''' \u6d4b\u8bd5\u4e8c\uff1aread1\u4e0espam.read1\u4e0d\u51b2\u7a81 #\u6d4b\u8bd5\u4e8c\uff1aread1\u4e0espam.read1\u4e0d\u51b2\u7a81 #test.py import spam def read1(): print('========') spam.read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read1->money 1000 ''' \u6d4b\u8bd5\u4e09\uff1a\u6267\u884cspam.change()\u64cd\u4f5c\u7684\u5168\u5c40\u53d8\u91cfmoney\u4ecd\u7136\u662fspam\u4e2d\u7684money #\u6d4b\u8bd5\u4e09\uff1a\u6267\u884cspam.change()\u64cd\u4f5c\u7684\u5168\u5c40\u53d8\u91cfmoney\u4ecd\u7136\u662fspam\u4e2d\u7684 #test.py import spam money=1 spam.change() print(money) ''' \u6267\u884c\u7ed3\u679c\uff1a from the spam.py 1 ''' as\uff0c\u4e3a\u6a21\u5757\u540d\u8d77\u522b\u540d import spam as sm #sm\u4e3aspam\u7684\u522b\u540d print(sm.money) \u4f8b\uff1a \u4e3a\u5df2\u7ecf\u5bfc\u5165\u7684\u6a21\u5757\u8d77\u522b\u540d\u7684\u65b9\u5f0f\u5bf9\u7f16\u5199\u53ef\u6269\u5c55\u7684\u4ee3\u7801\u5f88\u6709\u7528\uff0c\u5047\u8bbe\u6709\u4e24\u4e2a\u6a21\u5757xmlreader.py\u548ccsvreader.py\uff0c\u5b83\u4eec\u90fd\u5b9a\u4e49\u4e86\u51fd\u6570read_data(filename):\u7528\u6765\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u4e9b\u6570\u636e\uff0c\u4f46\u91c7\u7528\u4e0d\u540c\u7684\u8f93\u5165\u683c\u5f0f\u3002\u53ef\u4ee5\u7f16\u5199\u4ee3\u7801\u6765\u9009\u62e9\u6027\u5730\u6311\u9009\u8bfb\u53d6\u6a21\u5757\uff0c\u4f8b\u5982 if file_format == 'xml': import xmlreader as reader elif file_format == 'csv': import csvreader as reader data=reader.read_date(filename) \u5728\u4e00\u884c\u5bfc\u5165\u591a\u4e2a\u6a21\u5757 import sys,os,re","title":"3. import"},{"location":"DevOps/12%20Python/11%20Python%20module%20and%20package%20import/#4-fromimport","text":"from modname import name1[, name2[, ... nameN]] \u8981\u5bfc\u5165\u6a21\u5757 fib \u7684 fibonacci \u51fd\u6570\uff0c\u4f7f\u7528\u5982\u4e0b\u8bed\u53e5\uff1a from fib import fibonacci \u8fd9\u4e2a\u58f0\u660e\u4e0d\u4f1a\u628a\u6574\u4e2a fib \u6a21\u5757\u5bfc\u5165\u5230\u5f53\u524d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u5b83\u53ea\u4f1a\u5c06 fib \u91cc\u7684 fibonacci \u5355\u4e2a\u5f15\u5165\u5230\u6267\u884c\u8fd9\u4e2a\u58f0\u660e\u7684\u6a21\u5757\u7684\u5168\u5c40\u7b26\u53f7\u8868\u3002 from... import..\u5bfc\u5165\u6a21\u5757\u5e72\u7684\u4e8b\uff1a 1.\u4ea7\u751f\u65b0\u7684\u540d\u79f0\u7a7a\u95f4 2.\u4ee5\u65b0\u5efa\u7684\u540d\u79f0\u7a7a\u95f4\u4e3a\u5168\u5c40\u540d\u79f0\u7a7a\u95f4\uff0c\u6267\u884c\u6587\u4ef6\u7684\u4ee3\u7801 3.\u76f4\u63a5\u62ff\u5230\u5c31\u662fspam.py\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4\u4e2d\u540d\u5b57 #\u6d4b\u8bd5\u4e00\uff1a\u5bfc\u5165\u7684\u51fd\u6570read1\uff0c\u6267\u884c\u65f6\u4ecd\u7136\u56de\u5230spam.py\u4e2d\u5bfb\u627e\u5168\u5c40\u53d8\u91cfmoney #test.py from spam import read1 money=1000 read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read1->money 1000 ''' #\u6d4b\u8bd5\u4e8c:\u5bfc\u5165\u7684\u51fd\u6570read2\uff0c\u6267\u884c\u65f6\u9700\u8981\u8c03\u7528read1(),\u4ecd\u7136\u56de\u5230spam.py\u4e2d\u627eread1() #test.py from spam import read2 def read1(): print('==========') read2() ''' \u6267\u884c\u7ed3\u679c: from the spam.py spam->read2 calling read spam->read1->money 1000 ''' \u4f46\u5982\u679c\u5f53\u524d\u6709\u91cd\u540dread1\u6216\u8005read2\uff0c\u90a3\u4e48\u4f1a\u6709\u8986\u76d6\u6548\u679c\u3002 #\u6d4b\u8bd5\u4e09:\u5bfc\u5165\u7684\u51fd\u6570read1\uff0c\u88ab\u5f53\u524d\u4f4d\u7f6e\u5b9a\u4e49\u7684read1\u8986\u76d6\u6389\u4e86 #test.py from spam import read1 def read1(): print('==========') read1() ''' \u6267\u884c\u7ed3\u679c: from the spam.py ========== ''' \u9700\u8981\u7279\u522b\u5f3a\u8c03\u7684\u4e00\u70b9\u662f\uff1apython\u4e2d\u7684\u53d8\u91cf\u8d4b\u503c\u4e0d\u662f\u4e00\u79cd\u5b58\u50a8\u64cd\u4f5c\uff0c\u800c\u53ea\u662f\u4e00\u79cd\u7ed1\u5b9a\u5173\u7cfb\uff0c\u5982\u4e0b\uff1a from spam import money,read1 money=100 #\u5c06\u5f53\u524d\u4f4d\u7f6e\u7684\u540d\u5b57money\u7ed1\u5b9a\u5230\u4e86100 print(money) #\u6253\u5370\u5f53\u524d\u7684\u540d\u5b57 read1() #\u8bfb\u53d6spam.py\u4e2d\u7684\u540d\u5b57money,\u4ecd\u7136\u4e3a1000 ''' from the spam.py 100 spam->read1->money 1000 ''' from ... import ... \u4f18\u70b9:\u65b9\u4fbf\uff0c\u4e0d\u7528\u52a0\u524d\u7f00 \u7f3a\u70b9\uff1a\u5bb9\u6613\u8ddf\u5f53\u524d\u6587\u4ef6\u7684\u540d\u79f0\u7a7a\u95f4\u51b2\u7a81 from ... import...\u4e5f\u652f\u6301as\u548c\u5bfc\u5165\u591a\u6a21\u5757 from spam import read1 as read from spam import (read1, read2, money) ``` * from spam import * \u628aspam\u4e2d\u6240\u6709\u7684\u4e0d\u662f\u4ee5\u4e0b\u5212\u7ebf(_)\u5f00\u5934\u7684\u540d\u5b57\u90fd\u5bfc\u5165\u5230\u5f53\u524d\u4f4d\u7f6e\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6211\u4eec\u7684python\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u4f7f\u7528\u8fd9\u79cd\u5bfc\u5165\u65b9\u5f0f\uff0c\u56e0\u4e3a*\u4f60\u4e0d\u77e5\u9053\u4f60\u5bfc\u5165\u4ec0\u4e48\u540d\u5b57\uff0c\u5f88\u6709\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u4f60\u4e4b\u524d\u5df2\u7ecf\u5b9a\u4e49\u7684\u540d\u5b57\u3002\u800c\u4e14\u53ef\u8bfb\u6027\u6781\u5176\u7684\u5dee\uff0c\u5728\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d\u5bfc\u5165\u65f6\u6ca1\u6709\u95ee\u9898\u3002 from spam import * ## \u5c06\u6a21\u5757spam\u4e2d\u6240\u6709\u7684\u540d\u5b57\u90fd\u5bfc\u5165\u5230\u5f53\u524d\u540d\u79f0\u7a7a\u95f4 print(money) print(read1) print(read2) print(change) ''' \u6267\u884c\u7ed3\u679c: from the spam.py 1000 ''' * __all__\u6765\u63a7\u5236*\uff08\u7528\u6765\u53d1\u5e03\u65b0\u7248\u672c\uff09 \u5728spam.py\u4e2d\u65b0\u589e\u4e00\u884c all =['money','read1'] spam import *\u5c31\u8fd9\u80fd\u5bfc\u5165\u5217\u8868\u4e2d\u89c4\u5b9a\u7684\u4e24\u4e2a\u540d\u5b57 * __name__ spam.py\u5f53\u505a\u811a\u672c\u6267\u884c\uff0c__name__='__main__' spam.py\u5f53\u505a\u6a21\u5757\u5bfc\u5165\uff0c__name__=\u6a21\u5757\u540d \u4f5c\u7528\uff1a\u7528\u6765\u63a7\u5236.py\u6587\u4ef6\u5728\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u4e0b\u6267\u884c\u4e0d\u540c\u7684\u903b\u8f91 .py def fib(n): # write Fibonacci series up to n a, b = 0, 1 while b < n: print(b, end=' ') a, b = b, a+b print() def fib2(n): # return Fibonacci series up to n result = [] a, b = 0, 1 while b < n: result.append(b) a, b = b, a+b return result if name == \" main \": import sys fib(int(sys.argv[1])) \u6267\u884c fib.py python fib.py 50 ### 5.\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84 \u6a21\u5757\u7684\u67e5\u627e\u987a\u5e8f\u662f\uff1a\u5185\u5b58\u4e2d\u5df2\u7ecf\u52a0\u8f7d\u7684\u6a21\u5757->\u5185\u7f6e\u6a21\u5757->sys.path\u8def\u5f84\u4e2d\u5305\u542b\u7684\u6a21\u5757 python\u89e3\u91ca\u5668\u5728\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4e00\u4e9b\u6a21\u5757\uff0c\u53ef\u4ee5\u4f7f\u7528sys.modules\u67e5\u770b\uff0c\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u67d0\u4e2a\u6a21\u5757\u65f6\uff08\u6bd4\u5982spam\uff09\uff0c\u4f1a\u5148\u68c0\u67e5\u8be5\u6a21\u5757\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff08\u5f53\u524d\u6267\u884c\u6587\u4ef6\u7684\u540d\u79f0\u7a7a\u95f4\u5bf9\u5e94\u7684\u5185\u5b58\uff09\uff0c\u5982\u679c\u6709\u5219\u76f4\u63a5\u5f15\u7528 \u5982\u679c\u6ca1\u6709\uff0c\u89e3\u91ca\u5668\u5219\u4f1a\u67e5\u627e\u540c\u540d\u7684\u5185\u5efa\u6a21\u5757\uff0c\u5982\u679c\u8fd8\u6ca1\u6709\u627e\u5230\u5c31\u4ecesys.path\u7ed9\u51fa\u7684\u76ee\u5f55\u5217\u8868\u4e2d\u4f9d\u6b21\u5bfb\u627espam.py\u6587\u4ef6\u3002 \u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u540d\u4e0d\u5e94\u8be5\u4e0e\u7cfb\u7edf\u5185\u7f6e\u6a21\u5757\u91cd\u540d\u3002 \u5728\u521d\u59cb\u5316\u540e\uff0cpython\u7a0b\u5e8f\u53ef\u4ee5\u4fee\u6539sys.path,\u8def\u5f84\u653e\u5230\u524d\u9762\u7684\u4f18\u5148\u4e8e\u6807\u51c6\u5e93\u88ab\u52a0\u8f7d\u3002 **\u6ce8\u610f\uff1a**\u641c\u7d22\u65f6\u6309\u7167sys.path\u4e2d\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u67e5\u627e\uff0c\u4f4d\u4e8e\u524d\u7684\u4f18\u5148\u88ab\u67e5\u627e\uff0csys.path\u4e2d\u8fd8\u53ef\u80fd\u5305\u542b.zip\u5f52\u6863\u6587\u4ef6\u548c.egg\u6587\u4ef6\uff0cpython\u4f1a\u628a.zip\u5f52\u6863\u6587\u4ef6\u5f53\u6210\u4e00\u4e2a\u76ee\u5f55\u53bb\u5904\u7406\uff0c module.zip foo.py bar.py import sys sys.path.append('module.zip') import foo,bar sys.path.append('module.zip/lib/python') **\u6ce8\u610f\uff1a**windows\u4e0b\u7684\u8def\u5f84\u4e0d\u52a0r\u5f00\u5934\uff0c\u4f1a\u8bed\u6cd5\u9519\u8bef windows\u4e0b\u7684\u8def\u5f84\u4e0d\u52a0r\u5f00\u5934\uff0c\u4f1a\u8bed\u6cd5\u9519\u8bef sys.path.insert(0,r'C:\\Users\\Administrator\\PycharmProjects\\a') ## \u4e8c\u3001\u5305\u7684\u5bfc\u5165 ### 1. \u5b9a\u4e49 \u5305\u662f\u4e00\u79cd\u901a\u8fc7\u4f7f\u7528\u2018.\u6a21\u5757\u540d\u2019\u6765\u7ec4\u7ec7python\u6a21\u5757\u540d\u79f0\u7a7a\u95f4\u7684\u65b9\u5f0f\u3002 \u65e0\u8bba\u662fimport\u5f62\u5f0f\u8fd8\u662ffrom...import\u5f62\u5f0f\uff0c\u51e1\u662f\u5728\u5bfc\u5165\u8bed\u53e5\u4e2d\uff08\u800c\u4e0d\u662f\u5728\u4f7f\u7528\u65f6\uff09\u9047\u5230\u5e26\u70b9\u7684\uff0c\u90fd\u8981\u7b2c\u4e00\u65f6\u95f4\u63d0\u9ad8\u8b66\u89c9\uff1a\u8fd9\u662f\u5173\u4e8e\u5305\u624d\u6709\u7684\u5bfc\u5165\u8bed\u6cd5\u3002.\u7684\u5de6\u8fb9\u5fc5\u987b\u662f\u5305\uff1b \u5305\u662f\u4e00\u4e2a\u5206\u5c42\u6b21\u7684\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7531\u6a21\u5757\u53ca\u5b50\u5305\uff0c\u548c\u5b50\u5305\u4e0b\u7684\u5b50\u5305\u7b49\u7ec4\u6210\u7684 Python \u7684\u5e94\u7528\u73af\u5883\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5305\u5c31\u662f\u6587\u4ef6\u5939\uff0c\u4f46\u8be5\u6587\u4ef6\u5939\u4e0b\u5fc5\u987b\u5b58\u5728 __init__.py \u6587\u4ef6, \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u53ef\u4ee5\u4e3a\u7a7a\u3002__int__.py\u7528\u4e8e\u6807\u8bc6\u5f53\u524d\u6587\u4ef6\u5939\u662f\u4e00\u4e2a\u5305\u3002 \u5305\u662f\u7531\u4e00\u7cfb\u5217\u6a21\u5757\u7ec4\u6210\u7684\u96c6\u5408\u3002\u6a21\u5757\u662f\u5904\u7406\u67d0\u4e00\u7c7b\u95ee\u9898\u7684\u51fd\u6570\u548c\u7c7b\u7684\u96c6\u5408\u3002 **\u4f8b\uff1a** glance/ package \u251c\u2500\u2500 init .py the glance package \u251c\u2500\u2500 api for api \u2502 \u251c\u2500\u2500 init .py \u2502 \u251c\u2500\u2500 policy.py \u2502 \u2514\u2500\u2500 versions.py \u251c\u2500\u2500 cmd for cmd \u2502 \u251c\u2500\u2500 init .py \u2502 \u2514\u2500\u2500 manage.py \u2514\u2500\u2500 db for db \u251c\u2500\u2500 __init__.py \u2514\u2500\u2500 models.py \u6587\u4ef6\u5185\u5bb9 .py def get(): print('from policy.py') .py def create_resource(conf): print('from version.py: ',conf) .py def main(): print('from manage.py') .py def register_models(engine): print('from models.py: ',engine) ### 2. import \u5728\u4f7f\u7528\u4e00\u4e2a\u6a21\u5757\u4e2d\u7684\u51fd\u6570\u6216\u7c7b\u4e4b\u524d\uff0c\u9996\u5148\u8981\u5bfc\u5165\u8be5\u6a21\u5757\u3002\u6a21\u5757\u7684\u5bfc\u5165\u4f7f\u7528import\u8bed\u53e5\u3002 \u8c03\u7528\u6a21\u5757\u7684\u51fd\u6570\u6216\u7c7b\u65f6\uff0c\u9700\u8981\u4ee5\u6a21\u5757\u540d\u4f5c\u4e3a\u524d\u7f00\u3002 import\u5bfc\u5165\u6587\u4ef6\u65f6\uff0c\u4ea7\u751f\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u6765\u6e90\u4e8e\u6587\u4ef6\uff0cimport \u5305\uff0c\u4ea7\u751f\u7684\u540d\u79f0\u7a7a\u95f4\u7684\u540d\u5b57\u540c\u6837\u6765\u6e90\u4e8e\u6587\u4ef6\uff0c\u5373\u5305\u4e0b\u7684__init__.py\uff0c\u5bfc\u5165\u5305\u672c\u8d28\u5c31\u662f\u5728\u5bfc\u5165\u8be5\u6587\u4ef6 **\u4f8b\uff1a** \u5728\u4e0e\u5305glance\u540c\u7ea7\u522b\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 import glance.db.models glance.db.models.register_models('mysql') \u51e1\u662f\u5728\u5bfc\u5165\u65f6\u5e26\u70b9\u7684\uff0c\u70b9\u7684\u5de6\u8fb9\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5305\u3002 ### 3.from ... import ... \u5982\u679c\u4e0d\u60f3\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u524d\u7f00\u7b26\uff0c\u53ef\u4ee5\u4f7f\u7528from\u2026import\u2026\u8bed\u53e5\u5c06\u6a21\u5757\u5bfc\u5165\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662ffrom\u540eimport\u5bfc\u5165\u7684\u6a21\u5757\uff0c\u5fc5\u987b\u662f\u660e\u786e\u7684\u4e00\u4e2a\u4e0d\u80fd\u5e26\u70b9\uff0c\u5426\u5219\u4f1a\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u5982\uff1afrom a import b.c\u662f\u9519\u8bef\u8bed\u6cd5 **\u4f8b\uff1a** \u5728\u4e0e\u5305glance\u540c\u7ea7\u522b\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 from glance.db import models models.register_models('mysql') from glance.db.models import register_models register_models('mysql') \u6267\u884c\u7684\u6587\u4ef6\u7684\u5f53\u524d\u8def\u5f84\u5c31\u662fsys.path import sys print(sys.path) **\u6ce8\u610f\uff1a** 1.\u5173\u4e8e\u5305\u76f8\u5173\u7684\u5bfc\u5165\u8bed\u53e5\u4e5f\u5206\u4e3aimport\u548cfrom ... import ...\u4e24\u79cd\uff0c\u4f46\u662f\u65e0\u8bba\u54ea\u79cd\uff0c\u65e0\u8bba\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u5728\u5bfc\u5165\u65f6\u90fd\u5fc5\u987b\u9075\u5faa\u4e00\u4e2a\u539f\u5219\uff1a\u51e1\u662f\u5728\u5bfc\u5165\u65f6\u5e26\u70b9\u7684\uff0c\u70b9\u7684\u5de6\u8fb9\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u5305\uff0c\u5426\u5219\u975e\u6cd5\u3002\u53ef\u4ee5\u5e26\u6709\u4e00\u8fde\u4e32\u7684\u70b9\uff0c\u5982item.subitem.subsubitem,\u4f46\u90fd\u5fc5\u987b\u9075\u5faa\u8fd9\u4e2a\u539f\u5219\u3002 2.\u5bf9\u4e8e\u5bfc\u5165\u540e\uff0c\u5728\u4f7f\u7528\u65f6\u5c31\u6ca1\u6709\u8fd9\u79cd\u9650\u5236\u4e86\uff0c\u70b9\u7684\u5de6\u8fb9\u53ef\u4ee5\u662f\u5305,\u6a21\u5757\uff0c\u51fd\u6570\uff0c\u7c7b(\u5b83\u4eec\u90fd\u53ef\u4ee5\u7528\u70b9\u7684\u65b9\u5f0f\u8c03\u7528\u81ea\u5df1\u7684\u5c5e\u6027)\u3002 3.\u5bf9\u6bd4import item \u548cfrom item import name\u7684\u5e94\u7528\u573a\u666f\uff1a \u5982\u679c\u6211\u4eec\u60f3\u76f4\u63a5\u4f7f\u7528name\u90a3\u5fc5\u987b\u4f7f\u7528\u540e\u8005\u3002 ### 4. __init\\__.py\u6587\u4ef6 \u4e0d\u7ba1\u662f\u54ea\u79cd\u65b9\u5f0f\uff0c\u53ea\u8981\u662f\u7b2c\u4e00\u6b21\u5bfc\u5165\u5305\u6216\u8005\u662f\u5305\u7684\u4efb\u4f55\u5176\u4ed6\u90e8\u5206\uff0c\u90fd\u4f1a\u4f9d\u6b21\u6267\u884c\u5305\u4e0b\u7684__init__.py\u6587\u4ef6(\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u5305\u7684\u6587\u4ef6\u5185\u90fd\u6253\u5370\u4e00\u884c\u5185\u5bb9\u6765\u9a8c\u8bc1\u4e00\u4e0b)\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e3a\u7a7a\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u5b58\u653e\u4e00\u4e9b\u521d\u59cb\u5316\u5305\u7684\u4ee3\u7801\u3002 ### 5.from glance.api import * \u4ece\u5305api\u4e2d\u5bfc\u5165\u6240\u6709\uff0c\u5b9e\u9645\u4e0a\u8be5\u8bed\u53e5\u53ea\u4f1a\u5bfc\u5165\u5305api\u4e0b__init__.py\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49__all___: .py\u4e2d\u5b9a\u4e49 x=10 def func(): print('from api.__init.py') all =['x','func','policy'] \u6b64\u65f6\u6211\u4eec\u5728\u4e8eglance\u540c\u7ea7\u7684\u6587\u4ef6\u4e2d\u6267\u884cfrom glance.api import *\u5c31\u5bfc\u5165__all__\u4e2d\u7684\u5185\u5bb9\uff08versions\u4ecd\u7136\u4e0d\u80fd\u5bfc\u5165\uff09\u3002 ### 6.\u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165 \u6700\u9876\u7ea7\u5305glance\u662f\u5199\u7ed9\u522b\u4eba\u7528\u7684\uff0c\u7136\u540e\u5728glance\u5305\u5185\u90e8\u4e5f\u4f1a\u6709\u5f7c\u6b64\u4e4b\u95f4\u4e92\u76f8\u5bfc\u5165\u7684\u9700\u6c42\uff0c\u8fd9\u65f6\u5019\u5c31\u6709\u7edd\u5bf9\u5bfc\u5165\u548c\u76f8\u5bf9\u5bfc\u5165\u4e24\u79cd\u65b9\u5f0f\uff1a \u7edd\u5bf9\u5bfc\u5165\uff1a\u4ee5glance\u4f5c\u4e3a\u8d77\u59cb \u76f8\u5bf9\u5bfc\u5165\uff1a\u7528.\u6216\u8005..\u7684\u65b9\u5f0f\u6700\u4e3a\u8d77\u59cb\uff08\u53ea\u80fd\u5728\u4e00\u4e2a\u5305\u4e2d\u4f7f\u7528\uff0c\u4e0d\u80fd\u7528\u4e8e\u4e0d\u540c\u76ee\u5f55\u5185\uff09 \u4f8b\uff1a\u6211\u4eec\u5728glance/api/version.py\u4e2d\u60f3\u8981\u5bfc\u5165glance/cmd/manage.py \u5728glance/api/version.py from glance.cmd import manage manage.main() from ..cmd import manage manage.main() \u6d4b\u8bd5\u7ed3\u679c\uff1a\u6ce8\u610f\u4e00\u5b9a\u8981\u5728\u4e8eglance\u540c\u7ea7\u7684\u6587\u4ef6\u4e2d\u6d4b\u8bd5 from glance.api import versions \u6ce8\u610f\uff1a\u53ef\u4ee5\u7528import\u5bfc\u5165\u5185\u7f6e\u6216\u8005\u7b2c\u4e09\u65b9\u6a21\u5757\uff08\u5df2\u7ecf\u5728sys.path\u4e2d\uff09\uff0c\u4f46\u662f\u8981\u7edd\u5bf9\u907f\u514d\u4f7f\u7528import\u6765\u5bfc\u5165\u81ea\u5b9a\u4e49\u5305\u7684\u5b50\u6a21\u5757(\u6ca1\u6709\u5728sys.path\u4e2d)\uff0c\u5e94\u8be5\u4f7f\u7528from... import ...\u7684\u7edd\u5bf9\u6216\u8005\u76f8\u5bf9\u5bfc\u5165,\u4e14\u5305\u7684\u76f8\u5bf9\u5bfc\u5165\u53ea\u80fd\u7528from\u7684\u5f62\u5f0f\u3002 ### 7.\u5355\u72ec\u5bfc\u5165\u5305 \u5355\u72ec\u5bfc\u5165\u5305\u540d\u79f0\u65f6\u4e0d\u4f1a\u5bfc\u5165\u5305\u4e2d\u6240\u6709\u5305\u542b\u7684\u6240\u6709\u5b50\u6a21\u5757\uff0c\u5982 .py\u4e2d import glance glance.cmd.manage.main() ''' \u6267\u884c\u7ed3\u679c\uff1a AttributeError: module 'glance' has no attribute 'cmd' ''' \u89e3\u51b3\u65b9\u6cd5\uff1a .py from . import cmd .py from . import manage \u6267\u884c\uff1a .py\u4e2d import glance glance.cmd.manage.main() ``` \u5343\u4e07\u522b\u95ee\uff1a__all__\u4e0d\u80fd\u89e3\u51b3\u5417\uff0c__all__\u662f\u7528\u4e8e\u63a7\u5236from...import *","title":"4. From\u2026import"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/","text":"\u4e00\u3001\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801 \u00b6 1. \b\u5b9a\u4e49 \u00b6 \u8ba1\u7b97\u673a\u4e2d\u50a8\u5b58\u7684\u4fe1\u606f\u90fd\u662f\u7528\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u7684\uff0c\u800c\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u82f1\u6587\u3001\u6c49\u5b57\u7b49\u5b57\u7b26\u662f\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e4b\u540e\u7684\u7ed3\u679c\u3002\u901a\u4fd7\u7684\u8bf4\uff0c\u6309\u7167\u4f55\u79cd\u89c4\u5219\u5c06\u5b57\u7b26\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5982'a'\u7528\u4ec0\u4e48\u8868\u793a\uff0c\u79f0\u4e3a\"\u7f16\u7801\"\uff1b\u53cd\u4e4b\uff0c\u5c06\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u89e3\u6790\u663e\u793a\u51fa\u6765\uff0c\u79f0\u4e3a\"\u89e3\u7801\"\uff0c\u5982\u540c\u5bc6\u7801\u5b66\u4e2d\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u3002\u5728\u89e3\u7801\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u89e3\u7801\u89c4\u5219\uff0c\u5219\u5bfc\u81f4'a'\u89e3\u6790\u6210'b'\u6216\u8005\u4e71\u7801\u3002 \u5b57\u7b26\uff08Character\uff09\uff1a\u662f\u4e00\u4e2a\u4fe1\u606f\u5355\u4f4d\uff0c\u5728\u8ba1\u7b97\u673a\u91cc\u9762\uff0c\u4e00\u4e2a\u4e2d\u6587\u6c49\u5b57\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u963f\u62c9\u4f2f\u6570\u5b57\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u6807\u70b9\u7b26\u53f7\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\u3002 \u5b57\u7b26\u96c6\uff08Charset\uff09\uff1a\u662f\u4e00\u4e2a\u7cfb\u7edf\u652f\u6301\u7684\u6240\u6709\u62bd\u8c61\u5b57\u7b26\u7684\u96c6\u5408\u3002\u901a\u5e38\u4ee5\u4e8c\u7ef4\u8868\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4e8c\u7ef4\u8868\u7684\u5185\u5bb9\u548c\u5927\u5c0f\u662f\u7531\u4f7f\u7528\u8005\u7684\u8bed\u8a00\u800c\u5b9a\uff0c\u53ef\u4ee5\u662f\u82f1\u8bed\uff0c\u662f\u6c49\u8bed\uff0c\u6216\u8005\u963f\u62c9\u4f2f\u8bed\u3002 \u5b57\u7b26\u7f16\u7801\uff08Character Encoding\uff09\uff1a\u662f\u4e00\u5957\u6cd5\u5219\uff0c\u4f7f\u7528\u8be5\u6cd5\u5219\u80fd\u591f\u5bf9\u81ea\u7136\u8bed\u8a00\u7684\u5b57\u7b26\u7684\u4e00\u4e2a\u96c6\u5408\uff08\u5982\u5b57\u6bcd\u8868\u6216\u97f3\u8282\u8868\uff09\uff0c\u4e0e\u5176\u4ed6\u4e1c\u897f\u7684\u4e00\u4e2a\u96c6\u5408\uff08\u5982\u53f7\u7801\u6216\u7535\u8109\u51b2\uff09\u8fdb\u884c\u914d\u5bf9\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u628a\u5b57\u7b26\u96c6\u4e2d\u7684\u5b57\u7b26\u7f16\u7801\u4e3a\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u4ee5\u4fbf\u5728\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u3002\u7f16\u7801\u65b9\u5f0f\u4e00\u822c\u5c31\u662f\u5bf9\u4e8c\u7ef4\u8868\u7684\u6a2a\u7eb5\u5750\u6807\u8fdb\u884c\u53d8\u6362\u7684\u7b97\u6cd5\u3002\u5373\u5728\u7b26\u53f7\u96c6\u5408\u4e0e\u6570\u5b57\u7cfb\u7edf\u4e4b\u95f4\u5efa\u7acb\u5bf9\u5e94\u5173\u7cfb\uff0c\u5b83\u662f\u4fe1\u606f\u5904\u7406\u7684\u4e00\u9879\u57fa\u672c\u6280\u672f\u3002\u5373\uff1a\u5b57\u7b26--------\uff08\u7ffb\u8bd1\u8fc7\u7a0b\uff09------->\u4e8c\u8fdb\u5236\u6570 2. \u5e38\u7528\u7684\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801 \u00b6 \u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u4e00\u822c\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u5982ASCII\u3001GBK\u3001Unicode\u3001UTF-8\u7b49\uff0c\u90fd\u662f\u5373\u8868\u793a\u4e86\u5b57\u7b26\u96c6\u53c8\u8868\u793a\u4e86\u5bf9\u5e94\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u4ee5\u540e\u7edf\u79f0\u4e3a\u7f16\u7801\u3002 3. \u5b57\u7b26\u7f16\u7801\u7684\u53d1\u5c55\u53f2 \u00b6 \u7b2c\u4e00\u9636\u6bb5\uff1a\u8d77\u6e90\uff0cASCII \u8ba1\u7b97\u673a\u662f\u7f8e\u56fd\u4eba\u53d1\u660e\u7684\uff0c\u4eba\u5bb6\u7528\u7684\u662f\u7f8e\u5f0f\u82f1\u8bed\uff0c\u5b57\u7b26\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5c31\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e0d\u5927\u7684\u4e8c\u7ef4\u8868\uff0c128\u4e2a\u5b57\u7b26\uff0c\u53d6\u540d\u53ebASCII\uff08American Standard Code for Information Interchange\uff09\u3002\u4f46\u662f7\u4f4d\u7f16\u7801\u7684\u5b57\u7b26\u96c6\u53ea\u80fd\u652f\u6301128\u4e2a\u5b57\u7b26\uff0c\u4e3a\u4e86\u8868\u793a\u66f4\u591a\u7684\u6b27\u6d32\u5e38\u7528\u5b57\u7b26\u5bf9ASCII\u8fdb\u884c\u4e86\u6269\u5c55\uff0cASCII\u6269\u5c55\u5b57\u7b26\u96c6\u4f7f\u75288\u4f4d\uff08bits\uff09\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u5171256\u5b57\u7b26\u3002\u5373\u5176\u6700\u591a\u53ea\u80fd\u7528 8 \u4f4d\u6765\u8868\u793a\uff08\u4e00\u4e2a\u5b57\u8282\uff09\u3002 \u7b2c\u4e8c\u9636\u6bb5\uff1aGBK \u5f53\u8ba1\u7b97\u673a\u4f20\u5230\u4e86\u4e9a\u6d32\uff0c\u5c24\u5176\u662f\u4e1c\u4e9a\uff0c\u56fd\u9645\u6807\u51c6\u88ab\u79d2\u6740\u4e86\uff0c\u8def\u8fb9\u5c0f\u5b69\u968f\u4fbf\u8bf4\u53e5\u8bdd\uff0c256\u4e2a\u7801\u4f4d\u5c31\u4e0d\u591f\u7528\u4e86\u3002\u4e8e\u662f\uff0c\u4e2d\u56fd\u5b9a\u5236\u4e86GBK\u3002\u75282\u4e2a\u5b57\u8282\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff08\u6c49\u5b57\uff09\u3002\u5176\u4ed6\u56fd\u5bb6\u4e5f\u7eb7\u7eb7\u5b9a\u5236\u4e86\u81ea\u5df1\u7684\u7f16\u7801\uff0c\u4f8b\u5982\uff1a \u65e5\u672c\u628a\u65e5\u6587\u7f16\u5230Shift_JIS\u91cc\uff0c\u97e9\u56fd\u628a\u97e9\u6587\u7f16\u5230Euc-kr\u91cc\u3002 \u7b2c\u4e09\u9636\u6bb5\uff1aunicode\u3000\u3000 \u5f53\u4e92\u8054\u7f51\u5e2d\u5377\u4e86\u5168\u7403\uff0c\u5730\u57df\u9650\u5236\u88ab\u6253\u7834\u4e86\uff0c\u4e0d\u540c\u56fd\u5bb6\u548c\u5730\u533a\u7684\u8ba1\u7b97\u673a\u5728\u4ea4\u6362\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e71\u7801\u7684\u95ee\u9898\uff0c\u8ddf\u8bed\u8a00\u4e0a\u7684\u5730\u7406\u9694\u79bb\u5dee\u4e0d\u591a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u4f1f\u5927\u7684\u521b\u60f3\u4ea7\u751f\u4e86\u2014\u2014Unicode\uff08\u4e07\u56fd\u7801\uff09\u3002Unicode\u7f16\u7801\u7cfb\u7edf\u4e3a\u8868\u8fbe\u4efb\u610f\u8bed\u8a00\u7684\u4efb\u610f\u5b57\u7b26\u800c\u8bbe\u8ba1\u3002\u3000\u3000 \u89c4\u5b9a\u6240\u6709\u7684\u5b57\u7b26\u548c\u7b26\u53f7\u6700\u5c11\u7531 16 \u4f4d\u6765\u8868\u793a\uff082\u4e2a\u5b57\u8282\uff09\uff0c\u5373\uff1a2 **16 = 65536\uff0c\u6ce8\uff1a\u6b64\u5904\u8bf4\u7684\u7684\u662f\u81f3\u5c112\u4e2a\u5b57\u8282\uff0816\u4f4d\uff09\uff0c\u53ef\u80fd\u66f4\u591a\u3002 \u7b2c\u56db\u9636\u6bb5\uff1aUTF-8 unicode\u7684\u7f16\u7801\u65b9\u5f0f\u867d\u7136\u5305\u5bb9\u4e07\u56fd\uff0c\u4f46\u662f\u5bf9\u4e8e\u82f1\u6587\u7b49\u5b57\u7b26\u5c31\u4f1a\u6d6a\u8d39\u592a\u591a\u5b58\u50a8\u7a7a\u95f4\u3002\u4e8e\u662f\u51fa\u73b0\u4e86UTF-8\uff0c\u662f\u5bf9Unicode\u7f16\u7801\u7684\u538b\u7f29\u548c\u4f18\u5316\uff0c\u9075\u5faa\u80fd\u7528\u6700\u5c11\u7684\u8868\u793a\u5c31\u7528\u6700\u5c11\u7684\u8868\u793a\uff0c\u4ed6\u4e0d\u518d\u4f7f\u7528\u6700\u5c11\u4f7f\u75282\u4e2a\u5b57\u8282\uff0c\u800c\u662f\u5c06\u6240\u6709\u7684\u5b57\u7b26\u548c\u7b26\u53f7\u8fdb\u884c\u5206\u7c7b\uff1aascii\u7801\u4e2d\u7684\u5185\u5bb9\u75281\u4e2a\u5b57\u8282\u4fdd\u5b58\u3001\u6b27\u6d32\u7684\u5b57\u7b26\u75282\u4e2a\u5b57\u8282\u4fdd\u5b58\uff0c\u4e1c\u4e9a\u7684\u5b57\u7b26\u75283\u4e2a\u5b57\u8282\u4fdd\u5b58\u3002 \u8865\u5145\uff1a unicode\uff1a\u5305\u5bb9\u4e07\u56fd\uff0c\u4f18\u70b9\u662f\u5b57\u7b26->\u6570\u5b57\u7684\u8f6c\u6362\u901f\u5ea6\u5feb\uff0c\u7f3a\u70b9\u662f\u5360\u7528\u7a7a\u95f4\u5927 utf-8\uff1a\u7cbe\u51c6\uff0c\u5bf9\u4e0d\u540c\u7684\u5b57\u7b26\u7528\u4e0d\u540c\u7684\u957f\u5ea6\u8868\u793a\uff0c\u4f18\u70b9\u662f\u8282\u7701\u7a7a\u95f4\uff0c\u7f3a\u70b9\u662f\uff1a\u5b57\u7b26->\u6570\u5b57\u7684\u8f6c\u6362\u901f\u5ea6\u6162\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u9700\u8981\u8ba1\u7b97\u51fa\u5b57\u7b26\u9700\u8981\u591a\u957f\u7684Bytes\u624d\u80fd\u591f\u51c6\u786e\u8868\u793a \u5185\u5b58\u4e2d\u4f7f\u7528\u7684\u7f16\u7801\u662funicode\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u4e3a\u4e86\u5feb \u56e0\u4e3a\u7a0b\u5e8f\u90fd\u9700\u8981\u52a0\u8f7d\u5230\u5185\u5b58\u624d\u80fd\u8fd0\u884c\uff0c\u56e0\u800c\u5185\u5b58\u5e94\u8be5\u662f\u5c3d\u53ef\u80fd\u7684\u4fdd\u8bc1\u5feb\u3002 \u786c\u76d8\u4e2d\u6216\u8005\u7f51\u7edc\u4f20\u8f93\u7528utf-8\uff0c\u7f51\u7edcI/O\u5ef6\u8fdf\u6216\u78c1\u76d8I/O\u5ef6\u8fdf\u8981\u8fdc\u5927\u4e0eutf-8\u7684\u8f6c\u6362\u5ef6\u8fdf\uff0c\u800c\u4e14I/O\u5e94\u8be5\u662f\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u5e26\u5bbd\uff0c\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u7a33\u5b9a\u6027\u3002 \u56e0\u4e3a\u6570\u636e\u7684\u4f20\u8f93\uff0c\u8ffd\u6c42\u7684\u662f\u7a33\u5b9a\uff0c\u9ad8\u6548\uff0c\u6570\u636e\u91cf\u8d8a\u5c0f\u6570\u636e\u4f20\u8f93\u5c31\u8d8a\u9760\u8c31\uff0c\u4e8e\u662f\u90fd\u8f6c\u6210utf\uff0d8\u683c\u5f0f\u7684\uff0c\u800c\u4e0d\u662funicode\u3002 \u5982\u4e0b\u56fe\uff1a 4. \u5b57\u7b26\u7f16\u7801\u7684\u4f7f\u7528 \u00b6 1) \u6587\u672c\u7f16\u8f91\u5668\u5b58\u53d6\u6587\u4ef6\u7684\u539f\u7406\uff08nodepad++\uff0cpycharm\uff0cword\uff09 \u6253\u5f00\u7f16\u8f91\u5668\u5c31\u6253\u5f00\u4e86\u542f\u52a8\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u662f\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5668\u7f16\u5199\u7684\u5185\u5bb9\u4e5f\u90fd\u662f\u5b58\u653e\u4e0e\u5185\u5b58\u4e2d\u7684\uff0c\u65ad\u7535\u540e\u6570\u636e\u4e22\u5931\u3002\u56e0\u800c\u9700\u8981\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a\uff0c\u70b9\u51fb\u4fdd\u5b58\u6309\u94ae\uff0c\u5c31\u4ece\u5185\u5b58\u4e2d\u628a\u6570\u636e\u5237\u5230\u4e86\u786c\u76d8\u4e0a\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2apy\u6587\u4ef6\uff08\u6ca1\u6709\u6267\u884c\uff09\uff0c\u8ddf\u7f16\u5199\u5176\u4ed6\u6587\u4ef6\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u90fd\u53ea\u662f\u5728\u7f16\u5199\u4e00\u5806\u5b57\u7b26\u800c\u5df2\u3002 \u65e0\u8bba\u662f\u4f55\u79cd\u7f16\u8f91\u5668\uff0c\u8981\u9632\u6b62\u6587\u4ef6\u51fa\u73b0\u4e71\u7801\uff0c\u6838\u5fc3\u6cd5\u5219\u5c31\u662f\uff0c\u6587\u4ef6\u4ee5\u4ec0\u4e48\u7f16\u7801\u4fdd\u5b58\u7684\uff0c\u5c31\u4ee5\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f\u6253\u5f00\u3002 2) python\u89e3\u91ca\u5668\u6267\u884cpy\u6587\u4ef6\u7684\u539f\u7406 \uff08python test.py\uff09 \u7b2c\u4e00\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u542f\u52a8\uff0c\u6b64\u65f6\u5c31\u76f8\u5f53\u4e8e\u542f\u52a8\u4e86\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668 \u7b2c\u4e8c\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u76f8\u5f53\u4e8e\u6587\u672c\u7f16\u8f91\u5668\uff0c\u53bb\u6253\u5f00test.py\u6587\u4ef6\uff0c\u4ece\u786c\u76d8\u4e0a\u5c06test.py\u7684\u6587\u4ef6\u5185\u5bb9\u8bfb\u5165\u5230\u5185\u5b58\u4e2d \u7b2c\u4e09\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u89e3\u91ca\u6267\u884c\u521a\u521a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2dtest.py\u7684\u4ee3\u7801 \u8865\u5145\uff1a \u6240\u4ee5\uff0c\u5728\u5199\u4ee3\u7801\u65f6\uff0c\u4e3a\u4e86\u4e0d\u51fa\u73b0\u4e71\u7801\uff0c\u63a8\u8350\u4f7f\u7528UTF-8\uff0c\u4f1a\u52a0\u5165 # -*- coding: utf-8 -*- \u5373 #!/usr/bin/env python # -*- coding: utf-8 -*- print \"\u4f60\u597d\uff0c\u4e16\u754c\" python\u89e3\u91ca\u5668\u4f1a\u8bfb\u53d6test.py\u7684\u7b2c\u4e8c\u884c\u5185\u5bb9\uff0c# - - coding: utf-8 - -\uff0c\u6765\u51b3\u5b9a\u4ee5\u4ec0\u4e48\u7f16\u7801\u683c\u5f0f\u6765\u8bfb\u5165\u5185\u5b58\uff0c\u8fd9\u4e00\u884c\u5c31\u662f\u6765\u8bbe\u5b9apython\u89e3\u91ca\u5668\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u7f16\u7801\u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f\u8fd9\u4e2a\u7f16\u7801\u3002 \u5982\u679c\u4e0d\u5728python\u6587\u4ef6\u6307\u5b9a\u5934\u4fe1\u606f\uff03- -coding:utf-8- -,\u90a3\u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684python2\u4e2d\u9ed8\u8ba4\u4f7f\u7528ascii\uff0cpython3\u4e2d\u9ed8\u8ba4\u4f7f\u7528utf-8 \u603b\u7ed3\uff1a 1\uff09python\u89e3\u91ca\u5668\u662f\u89e3\u91ca\u6267\u884c\u6587\u4ef6\u5185\u5bb9\u7684\uff0c\u56e0\u800cpython\u89e3\u91ca\u5668\u5177\u5907\u8bfbpy\u6587\u4ef6\u7684\u529f\u80fd\uff0c\u8fd9\u4e00\u70b9\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u4e00\u6837 2\uff09\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\uff0cpython\u89e3\u91ca\u5668\u4e0d\u4ec5\u53ef\u4ee5\u8bfb\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u6587\u4ef6\u5185\u5bb9 5. python2\u548cpython3\u7684\u4e00\u4e9b\u4e0d\u540c \u00b6 1) python2\u4e2d\u9ed8\u8ba4\u4f7f\u7528ascii\uff0cpython3\u4e2d\u9ed8\u8ba4\u4f7f\u7528utf-8 2) Python2\u4e2d\uff0cstr\u5c31\u662f\u7f16\u7801\u540e\u7684\u7ed3\u679cbytes\uff0cstr=bytes,\u6240\u4ee5s\u53ea\u80fddecode\u3002 3) python3\u4e2d\u7684\u5b57\u7b26\u4e32\u4e0epython2\u4e2d\u7684u'\u5b57\u7b26\u4e32'\uff0c\u90fd\u662funicode\uff0c\u53ea\u80fdencode\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u6253\u5370\u90fd\u4e0d\u4f1a\u4e71\u7801\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u5185\u5b58\u6253\u5370\u5230\u5185\u5b58\uff0c\u5373\u5185\u5b58->\u5185\u5b58\uff0cunicode->unicode 4) python3\u4e2d\uff0cstr\u662funicode\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u65e0\u9700\u52a0u\uff0cstr\u4e5f\u4f1a\u88ab\u4ee5unicode\u5f62\u5f0f\u4fdd\u5b58\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d,str\u53ef\u4ee5\u76f4\u63a5encode\u6210\u4efb\u610f\u7f16\u7801\u683c\u5f0f\uff0cs.encode('utf-8')\uff0cs.encode('gbk') #unicode(str)-----encode---->utf-8(bytes) #utf-8(bytes)-----decode---->unicode 5)\u5728windows\u7ec8\u7aef\u7f16\u7801\u4e3agbk\uff0clinux\u662fUTF-8.","title":"12 Python\u7684\u5b57\u7b26\u7f16\u7801"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#_1","text":"","title":"\u4e00\u3001\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#1","text":"\u8ba1\u7b97\u673a\u4e2d\u50a8\u5b58\u7684\u4fe1\u606f\u90fd\u662f\u7528\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u7684\uff0c\u800c\u6211\u4eec\u5728\u5c4f\u5e55\u4e0a\u770b\u5230\u7684\u82f1\u6587\u3001\u6c49\u5b57\u7b49\u5b57\u7b26\u662f\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e4b\u540e\u7684\u7ed3\u679c\u3002\u901a\u4fd7\u7684\u8bf4\uff0c\u6309\u7167\u4f55\u79cd\u89c4\u5219\u5c06\u5b57\u7b26\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u5982'a'\u7528\u4ec0\u4e48\u8868\u793a\uff0c\u79f0\u4e3a\"\u7f16\u7801\"\uff1b\u53cd\u4e4b\uff0c\u5c06\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u6570\u89e3\u6790\u663e\u793a\u51fa\u6765\uff0c\u79f0\u4e3a\"\u89e3\u7801\"\uff0c\u5982\u540c\u5bc6\u7801\u5b66\u4e2d\u7684\u52a0\u5bc6\u548c\u89e3\u5bc6\u3002\u5728\u89e3\u7801\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u9519\u8bef\u7684\u89e3\u7801\u89c4\u5219\uff0c\u5219\u5bfc\u81f4'a'\u89e3\u6790\u6210'b'\u6216\u8005\u4e71\u7801\u3002 \u5b57\u7b26\uff08Character\uff09\uff1a\u662f\u4e00\u4e2a\u4fe1\u606f\u5355\u4f4d\uff0c\u5728\u8ba1\u7b97\u673a\u91cc\u9762\uff0c\u4e00\u4e2a\u4e2d\u6587\u6c49\u5b57\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u963f\u62c9\u4f2f\u6570\u5b57\u662f\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e00\u4e2a\u6807\u70b9\u7b26\u53f7\u4e5f\u662f\u4e00\u4e2a\u5b57\u7b26\u3002 \u5b57\u7b26\u96c6\uff08Charset\uff09\uff1a\u662f\u4e00\u4e2a\u7cfb\u7edf\u652f\u6301\u7684\u6240\u6709\u62bd\u8c61\u5b57\u7b26\u7684\u96c6\u5408\u3002\u901a\u5e38\u4ee5\u4e8c\u7ef4\u8868\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4e8c\u7ef4\u8868\u7684\u5185\u5bb9\u548c\u5927\u5c0f\u662f\u7531\u4f7f\u7528\u8005\u7684\u8bed\u8a00\u800c\u5b9a\uff0c\u53ef\u4ee5\u662f\u82f1\u8bed\uff0c\u662f\u6c49\u8bed\uff0c\u6216\u8005\u963f\u62c9\u4f2f\u8bed\u3002 \u5b57\u7b26\u7f16\u7801\uff08Character Encoding\uff09\uff1a\u662f\u4e00\u5957\u6cd5\u5219\uff0c\u4f7f\u7528\u8be5\u6cd5\u5219\u80fd\u591f\u5bf9\u81ea\u7136\u8bed\u8a00\u7684\u5b57\u7b26\u7684\u4e00\u4e2a\u96c6\u5408\uff08\u5982\u5b57\u6bcd\u8868\u6216\u97f3\u8282\u8868\uff09\uff0c\u4e0e\u5176\u4ed6\u4e1c\u897f\u7684\u4e00\u4e2a\u96c6\u5408\uff08\u5982\u53f7\u7801\u6216\u7535\u8109\u51b2\uff09\u8fdb\u884c\u914d\u5bf9\u3002\u5728\u8fd9\u91cc\u6211\u4eec\u628a\u5b57\u7b26\u96c6\u4e2d\u7684\u5b57\u7b26\u7f16\u7801\u4e3a\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u4ee5\u4fbf\u5728\u8ba1\u7b97\u673a\u4e2d\u5b58\u50a8\u3002\u7f16\u7801\u65b9\u5f0f\u4e00\u822c\u5c31\u662f\u5bf9\u4e8c\u7ef4\u8868\u7684\u6a2a\u7eb5\u5750\u6807\u8fdb\u884c\u53d8\u6362\u7684\u7b97\u6cd5\u3002\u5373\u5728\u7b26\u53f7\u96c6\u5408\u4e0e\u6570\u5b57\u7cfb\u7edf\u4e4b\u95f4\u5efa\u7acb\u5bf9\u5e94\u5173\u7cfb\uff0c\u5b83\u662f\u4fe1\u606f\u5904\u7406\u7684\u4e00\u9879\u57fa\u672c\u6280\u672f\u3002\u5373\uff1a\u5b57\u7b26--------\uff08\u7ffb\u8bd1\u8fc7\u7a0b\uff09------->\u4e8c\u8fdb\u5236\u6570","title":"1. \b\u5b9a\u4e49"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#2","text":"\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801\u4e00\u822c\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u5982ASCII\u3001GBK\u3001Unicode\u3001UTF-8\u7b49\uff0c\u90fd\u662f\u5373\u8868\u793a\u4e86\u5b57\u7b26\u96c6\u53c8\u8868\u793a\u4e86\u5bf9\u5e94\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u4ee5\u540e\u7edf\u79f0\u4e3a\u7f16\u7801\u3002","title":"2. \u5e38\u7528\u7684\u5b57\u7b26\u96c6\u548c\u5b57\u7b26\u7f16\u7801"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#3","text":"\u7b2c\u4e00\u9636\u6bb5\uff1a\u8d77\u6e90\uff0cASCII \u8ba1\u7b97\u673a\u662f\u7f8e\u56fd\u4eba\u53d1\u660e\u7684\uff0c\u4eba\u5bb6\u7528\u7684\u662f\u7f8e\u5f0f\u82f1\u8bed\uff0c\u5b57\u7b26\u6bd4\u8f83\u5c11\uff0c\u6240\u4ee5\u4e00\u5f00\u59cb\u5c31\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u4e0d\u5927\u7684\u4e8c\u7ef4\u8868\uff0c128\u4e2a\u5b57\u7b26\uff0c\u53d6\u540d\u53ebASCII\uff08American Standard Code for Information Interchange\uff09\u3002\u4f46\u662f7\u4f4d\u7f16\u7801\u7684\u5b57\u7b26\u96c6\u53ea\u80fd\u652f\u6301128\u4e2a\u5b57\u7b26\uff0c\u4e3a\u4e86\u8868\u793a\u66f4\u591a\u7684\u6b27\u6d32\u5e38\u7528\u5b57\u7b26\u5bf9ASCII\u8fdb\u884c\u4e86\u6269\u5c55\uff0cASCII\u6269\u5c55\u5b57\u7b26\u96c6\u4f7f\u75288\u4f4d\uff08bits\uff09\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u5171256\u5b57\u7b26\u3002\u5373\u5176\u6700\u591a\u53ea\u80fd\u7528 8 \u4f4d\u6765\u8868\u793a\uff08\u4e00\u4e2a\u5b57\u8282\uff09\u3002 \u7b2c\u4e8c\u9636\u6bb5\uff1aGBK \u5f53\u8ba1\u7b97\u673a\u4f20\u5230\u4e86\u4e9a\u6d32\uff0c\u5c24\u5176\u662f\u4e1c\u4e9a\uff0c\u56fd\u9645\u6807\u51c6\u88ab\u79d2\u6740\u4e86\uff0c\u8def\u8fb9\u5c0f\u5b69\u968f\u4fbf\u8bf4\u53e5\u8bdd\uff0c256\u4e2a\u7801\u4f4d\u5c31\u4e0d\u591f\u7528\u4e86\u3002\u4e8e\u662f\uff0c\u4e2d\u56fd\u5b9a\u5236\u4e86GBK\u3002\u75282\u4e2a\u5b57\u8282\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\uff08\u6c49\u5b57\uff09\u3002\u5176\u4ed6\u56fd\u5bb6\u4e5f\u7eb7\u7eb7\u5b9a\u5236\u4e86\u81ea\u5df1\u7684\u7f16\u7801\uff0c\u4f8b\u5982\uff1a \u65e5\u672c\u628a\u65e5\u6587\u7f16\u5230Shift_JIS\u91cc\uff0c\u97e9\u56fd\u628a\u97e9\u6587\u7f16\u5230Euc-kr\u91cc\u3002 \u7b2c\u4e09\u9636\u6bb5\uff1aunicode\u3000\u3000 \u5f53\u4e92\u8054\u7f51\u5e2d\u5377\u4e86\u5168\u7403\uff0c\u5730\u57df\u9650\u5236\u88ab\u6253\u7834\u4e86\uff0c\u4e0d\u540c\u56fd\u5bb6\u548c\u5730\u533a\u7684\u8ba1\u7b97\u673a\u5728\u4ea4\u6362\u6570\u636e\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e71\u7801\u7684\u95ee\u9898\uff0c\u8ddf\u8bed\u8a00\u4e0a\u7684\u5730\u7406\u9694\u79bb\u5dee\u4e0d\u591a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u4e2a\u4f1f\u5927\u7684\u521b\u60f3\u4ea7\u751f\u4e86\u2014\u2014Unicode\uff08\u4e07\u56fd\u7801\uff09\u3002Unicode\u7f16\u7801\u7cfb\u7edf\u4e3a\u8868\u8fbe\u4efb\u610f\u8bed\u8a00\u7684\u4efb\u610f\u5b57\u7b26\u800c\u8bbe\u8ba1\u3002\u3000\u3000 \u89c4\u5b9a\u6240\u6709\u7684\u5b57\u7b26\u548c\u7b26\u53f7\u6700\u5c11\u7531 16 \u4f4d\u6765\u8868\u793a\uff082\u4e2a\u5b57\u8282\uff09\uff0c\u5373\uff1a2 **16 = 65536\uff0c\u6ce8\uff1a\u6b64\u5904\u8bf4\u7684\u7684\u662f\u81f3\u5c112\u4e2a\u5b57\u8282\uff0816\u4f4d\uff09\uff0c\u53ef\u80fd\u66f4\u591a\u3002 \u7b2c\u56db\u9636\u6bb5\uff1aUTF-8 unicode\u7684\u7f16\u7801\u65b9\u5f0f\u867d\u7136\u5305\u5bb9\u4e07\u56fd\uff0c\u4f46\u662f\u5bf9\u4e8e\u82f1\u6587\u7b49\u5b57\u7b26\u5c31\u4f1a\u6d6a\u8d39\u592a\u591a\u5b58\u50a8\u7a7a\u95f4\u3002\u4e8e\u662f\u51fa\u73b0\u4e86UTF-8\uff0c\u662f\u5bf9Unicode\u7f16\u7801\u7684\u538b\u7f29\u548c\u4f18\u5316\uff0c\u9075\u5faa\u80fd\u7528\u6700\u5c11\u7684\u8868\u793a\u5c31\u7528\u6700\u5c11\u7684\u8868\u793a\uff0c\u4ed6\u4e0d\u518d\u4f7f\u7528\u6700\u5c11\u4f7f\u75282\u4e2a\u5b57\u8282\uff0c\u800c\u662f\u5c06\u6240\u6709\u7684\u5b57\u7b26\u548c\u7b26\u53f7\u8fdb\u884c\u5206\u7c7b\uff1aascii\u7801\u4e2d\u7684\u5185\u5bb9\u75281\u4e2a\u5b57\u8282\u4fdd\u5b58\u3001\u6b27\u6d32\u7684\u5b57\u7b26\u75282\u4e2a\u5b57\u8282\u4fdd\u5b58\uff0c\u4e1c\u4e9a\u7684\u5b57\u7b26\u75283\u4e2a\u5b57\u8282\u4fdd\u5b58\u3002 \u8865\u5145\uff1a unicode\uff1a\u5305\u5bb9\u4e07\u56fd\uff0c\u4f18\u70b9\u662f\u5b57\u7b26->\u6570\u5b57\u7684\u8f6c\u6362\u901f\u5ea6\u5feb\uff0c\u7f3a\u70b9\u662f\u5360\u7528\u7a7a\u95f4\u5927 utf-8\uff1a\u7cbe\u51c6\uff0c\u5bf9\u4e0d\u540c\u7684\u5b57\u7b26\u7528\u4e0d\u540c\u7684\u957f\u5ea6\u8868\u793a\uff0c\u4f18\u70b9\u662f\u8282\u7701\u7a7a\u95f4\uff0c\u7f3a\u70b9\u662f\uff1a\u5b57\u7b26->\u6570\u5b57\u7684\u8f6c\u6362\u901f\u5ea6\u6162\uff0c\u56e0\u4e3a\u6bcf\u6b21\u90fd\u9700\u8981\u8ba1\u7b97\u51fa\u5b57\u7b26\u9700\u8981\u591a\u957f\u7684Bytes\u624d\u80fd\u591f\u51c6\u786e\u8868\u793a \u5185\u5b58\u4e2d\u4f7f\u7528\u7684\u7f16\u7801\u662funicode\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u4e3a\u4e86\u5feb \u56e0\u4e3a\u7a0b\u5e8f\u90fd\u9700\u8981\u52a0\u8f7d\u5230\u5185\u5b58\u624d\u80fd\u8fd0\u884c\uff0c\u56e0\u800c\u5185\u5b58\u5e94\u8be5\u662f\u5c3d\u53ef\u80fd\u7684\u4fdd\u8bc1\u5feb\u3002 \u786c\u76d8\u4e2d\u6216\u8005\u7f51\u7edc\u4f20\u8f93\u7528utf-8\uff0c\u7f51\u7edcI/O\u5ef6\u8fdf\u6216\u78c1\u76d8I/O\u5ef6\u8fdf\u8981\u8fdc\u5927\u4e0eutf-8\u7684\u8f6c\u6362\u5ef6\u8fdf\uff0c\u800c\u4e14I/O\u5e94\u8be5\u662f\u5c3d\u53ef\u80fd\u5730\u8282\u7701\u5e26\u5bbd\uff0c\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u7a33\u5b9a\u6027\u3002 \u56e0\u4e3a\u6570\u636e\u7684\u4f20\u8f93\uff0c\u8ffd\u6c42\u7684\u662f\u7a33\u5b9a\uff0c\u9ad8\u6548\uff0c\u6570\u636e\u91cf\u8d8a\u5c0f\u6570\u636e\u4f20\u8f93\u5c31\u8d8a\u9760\u8c31\uff0c\u4e8e\u662f\u90fd\u8f6c\u6210utf\uff0d8\u683c\u5f0f\u7684\uff0c\u800c\u4e0d\u662funicode\u3002 \u5982\u4e0b\u56fe\uff1a","title":"3. \u5b57\u7b26\u7f16\u7801\u7684\u53d1\u5c55\u53f2"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#4","text":"1) \u6587\u672c\u7f16\u8f91\u5668\u5b58\u53d6\u6587\u4ef6\u7684\u539f\u7406\uff08nodepad++\uff0cpycharm\uff0cword\uff09 \u6253\u5f00\u7f16\u8f91\u5668\u5c31\u6253\u5f00\u4e86\u542f\u52a8\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u662f\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u6240\u4ee5\u5728\u7f16\u8f91\u5668\u7f16\u5199\u7684\u5185\u5bb9\u4e5f\u90fd\u662f\u5b58\u653e\u4e0e\u5185\u5b58\u4e2d\u7684\uff0c\u65ad\u7535\u540e\u6570\u636e\u4e22\u5931\u3002\u56e0\u800c\u9700\u8981\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a\uff0c\u70b9\u51fb\u4fdd\u5b58\u6309\u94ae\uff0c\u5c31\u4ece\u5185\u5b58\u4e2d\u628a\u6570\u636e\u5237\u5230\u4e86\u786c\u76d8\u4e0a\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2apy\u6587\u4ef6\uff08\u6ca1\u6709\u6267\u884c\uff09\uff0c\u8ddf\u7f16\u5199\u5176\u4ed6\u6587\u4ef6\u6ca1\u6709\u4efb\u4f55\u533a\u522b\uff0c\u90fd\u53ea\u662f\u5728\u7f16\u5199\u4e00\u5806\u5b57\u7b26\u800c\u5df2\u3002 \u65e0\u8bba\u662f\u4f55\u79cd\u7f16\u8f91\u5668\uff0c\u8981\u9632\u6b62\u6587\u4ef6\u51fa\u73b0\u4e71\u7801\uff0c\u6838\u5fc3\u6cd5\u5219\u5c31\u662f\uff0c\u6587\u4ef6\u4ee5\u4ec0\u4e48\u7f16\u7801\u4fdd\u5b58\u7684\uff0c\u5c31\u4ee5\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f\u6253\u5f00\u3002 2) python\u89e3\u91ca\u5668\u6267\u884cpy\u6587\u4ef6\u7684\u539f\u7406 \uff08python test.py\uff09 \u7b2c\u4e00\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u542f\u52a8\uff0c\u6b64\u65f6\u5c31\u76f8\u5f53\u4e8e\u542f\u52a8\u4e86\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668 \u7b2c\u4e8c\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u76f8\u5f53\u4e8e\u6587\u672c\u7f16\u8f91\u5668\uff0c\u53bb\u6253\u5f00test.py\u6587\u4ef6\uff0c\u4ece\u786c\u76d8\u4e0a\u5c06test.py\u7684\u6587\u4ef6\u5185\u5bb9\u8bfb\u5165\u5230\u5185\u5b58\u4e2d \u7b2c\u4e09\u9636\u6bb5\uff1apython\u89e3\u91ca\u5668\u89e3\u91ca\u6267\u884c\u521a\u521a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2dtest.py\u7684\u4ee3\u7801 \u8865\u5145\uff1a \u6240\u4ee5\uff0c\u5728\u5199\u4ee3\u7801\u65f6\uff0c\u4e3a\u4e86\u4e0d\u51fa\u73b0\u4e71\u7801\uff0c\u63a8\u8350\u4f7f\u7528UTF-8\uff0c\u4f1a\u52a0\u5165 # -*- coding: utf-8 -*- \u5373 #!/usr/bin/env python # -*- coding: utf-8 -*- print \"\u4f60\u597d\uff0c\u4e16\u754c\" python\u89e3\u91ca\u5668\u4f1a\u8bfb\u53d6test.py\u7684\u7b2c\u4e8c\u884c\u5185\u5bb9\uff0c# - - coding: utf-8 - -\uff0c\u6765\u51b3\u5b9a\u4ee5\u4ec0\u4e48\u7f16\u7801\u683c\u5f0f\u6765\u8bfb\u5165\u5185\u5b58\uff0c\u8fd9\u4e00\u884c\u5c31\u662f\u6765\u8bbe\u5b9apython\u89e3\u91ca\u5668\u8fd9\u4e2a\u8f6f\u4ef6\u7684\u7f16\u7801\u4f7f\u7528\u7684\u7f16\u7801\u683c\u5f0f\u8fd9\u4e2a\u7f16\u7801\u3002 \u5982\u679c\u4e0d\u5728python\u6587\u4ef6\u6307\u5b9a\u5934\u4fe1\u606f\uff03- -coding:utf-8- -,\u90a3\u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684python2\u4e2d\u9ed8\u8ba4\u4f7f\u7528ascii\uff0cpython3\u4e2d\u9ed8\u8ba4\u4f7f\u7528utf-8 \u603b\u7ed3\uff1a 1\uff09python\u89e3\u91ca\u5668\u662f\u89e3\u91ca\u6267\u884c\u6587\u4ef6\u5185\u5bb9\u7684\uff0c\u56e0\u800cpython\u89e3\u91ca\u5668\u5177\u5907\u8bfbpy\u6587\u4ef6\u7684\u529f\u80fd\uff0c\u8fd9\u4e00\u70b9\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u4e00\u6837 2\uff09\u4e0e\u6587\u672c\u7f16\u8f91\u5668\u4e0d\u4e00\u6837\u7684\u5730\u65b9\u5728\u4e8e\uff0cpython\u89e3\u91ca\u5668\u4e0d\u4ec5\u53ef\u4ee5\u8bfb\u6587\u4ef6\u5185\u5bb9\uff0c\u8fd8\u53ef\u4ee5\u6267\u884c\u6587\u4ef6\u5185\u5bb9","title":"4. \u5b57\u7b26\u7f16\u7801\u7684\u4f7f\u7528"},{"location":"DevOps/12%20Python/12%20character%20encoding%20in%20Python/#5-python2python3","text":"1) python2\u4e2d\u9ed8\u8ba4\u4f7f\u7528ascii\uff0cpython3\u4e2d\u9ed8\u8ba4\u4f7f\u7528utf-8 2) Python2\u4e2d\uff0cstr\u5c31\u662f\u7f16\u7801\u540e\u7684\u7ed3\u679cbytes\uff0cstr=bytes,\u6240\u4ee5s\u53ea\u80fddecode\u3002 3) python3\u4e2d\u7684\u5b57\u7b26\u4e32\u4e0epython2\u4e2d\u7684u'\u5b57\u7b26\u4e32'\uff0c\u90fd\u662funicode\uff0c\u53ea\u80fdencode\uff0c\u6240\u4ee5\u65e0\u8bba\u5982\u4f55\u6253\u5370\u90fd\u4e0d\u4f1a\u4e71\u7801\uff0c\u56e0\u4e3a\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ece\u5185\u5b58\u6253\u5370\u5230\u5185\u5b58\uff0c\u5373\u5185\u5b58->\u5185\u5b58\uff0cunicode->unicode 4) python3\u4e2d\uff0cstr\u662funicode\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u65e0\u9700\u52a0u\uff0cstr\u4e5f\u4f1a\u88ab\u4ee5unicode\u5f62\u5f0f\u4fdd\u5b58\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d,str\u53ef\u4ee5\u76f4\u63a5encode\u6210\u4efb\u610f\u7f16\u7801\u683c\u5f0f\uff0cs.encode('utf-8')\uff0cs.encode('gbk') #unicode(str)-----encode---->utf-8(bytes) #utf-8(bytes)-----decode---->unicode 5)\u5728windows\u7ec8\u7aef\u7f16\u7801\u4e3agbk\uff0clinux\u662fUTF-8.","title":"5. python2\u548cpython3\u7684\u4e00\u4e9b\u4e0d\u540c"},{"location":"DevOps/12%20Python/13%20pymysql%20module/","text":"1. \u4ec0\u4e48\u662f PyMySQL\uff1f \u00b6 PyMySQL \u662f\u5728 Python3.x \u7248\u672c\u4e2d\u7528\u4e8e\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u7684\u4e00\u4e2a\u5e93\uff0cPython2\u4e2d\u5219\u4f7f\u7528mysqldb\u3002 PyMySQL \u9075\u5faa Python \u6570\u636e\u5e93 API v2.0 \u89c4\u8303\uff0c\u5e76\u5305\u542b\u4e86 pure-Python MySQL \u5ba2\u6237\u7aef\u5e93\u3002 2. PyMySQL \u5b89\u88c5 \u00b6 pip3 install PyMySQL 3. \u4f7f\u7528\u64cd\u4f5c \u00b6 #!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql # \u521b\u5efa\u8fde\u63a5 conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') # \u521b\u5efa\u6e38\u6807 cursor = conn.cursor() # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u6536\u5f71\u54cd\u884c\u6570 effect_row = cursor.execute(\"update hosts set host = '1.1.1.2'\") # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u53d7\u5f71\u54cd\u884c\u6570 #effect_row = cursor.execute(\"update hosts set host = '1.1.1.2' where nid > %s\", (1,)) # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u53d7\u5f71\u54cd\u884c\u6570 #effect_row = cursor.executemany(\"insert into hosts(host,color_id)values(%s,%s)\", [(\"1.1.1.11\",1),(\"1.1.1.11\",2)]) # \u63d0\u4ea4\uff0c\u4e0d\u7136\u65e0\u6cd5\u4fdd\u5b58\u65b0\u5efa\u6216\u8005\u4fee\u6539\u7684\u6570\u636e conn.commit() # \u5173\u95ed\u6e38\u6807 cursor.close() # \u5173\u95ed\u8fde\u63a5 conn.close() **\u6ce8\uff1a**\u5f53\u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u65f6\u5bb9\u6613\u5f15\u8d77sql\u6ce8\u5165 sql = 'select * from userinfo where username=\"%s\" and password=\"%s\" ' %(user,pwd,) #\u4e0d\u63a8\u8350\u4f7f\u7528 sql = 'select * from userinfo where username=%s and password=%s',[user,pwd] #\u63a8\u8350\u4f7f\u7528\uff0cmysql\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\uff0c\u907f\u514dSQL\u6ce8\u5165 import pymysql user = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d:') pwd = input('\u8bf7\u8f93\u5165\u5bc6\u7801:') # \u83b7\u53d6\u6570\u636e conn = pymysql.Connect(host='192.168.12.89',port=3306,user='root',password=\"123\",database=\"s17day11db\",charset='utf8') cursor = conn.cursor() v = cursor.execute('select * from userinfo where username=%s and password=%s',[user,pwd]) result = cursor.fetchone() cursor.close() conn.close() print(result) \u83b7\u53d6\u65b0\u521b\u5efa\u6570\u636e\u81ea\u589eID new_class_id = cursor.lastrowid # \u83b7\u53d6\u65b0\u589e\u6570\u636e\u81ea\u589eID \u590d\u5236\u4ee3\u7801 import pymysql # \u83b7\u53d6\u6570\u636e conn = pymysql.Connect(host='192.168.12.89',port=3306,user='root',password=\"123\",database=\"s17day11db\",charset='utf8') cursor = conn.cursor() cursor.execute('insert into class(caption) values(%s)',['\u65b0\u73ed\u7ea7']) conn.commit() new_class_id = cursor.lastrowid # \u83b7\u53d6\u65b0\u589e\u6570\u636e\u81ea\u589eID cursor.execute('insert into student(sname,gender,class_id) values(%s,%s,%s)',['\u674e\u6770','\u7537',new_class_id]) conn.commit() cursor.close() conn.close() \u67e5\u8be2\u8bed\u53e5 #!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') cursor = conn.cursor() cursor.execute(\"select * from hosts\") # \u83b7\u53d6\u7b2c\u4e00\u884c\u6570\u636e row_1 = cursor.fetchone() # \u83b7\u53d6\u524dn\u884c\u6570\u636e # row_2 = cursor.fetchmany(3) # \u83b7\u53d6\u6240\u6709\u6570\u636e # row_3 = cursor.fetchall() conn.commit() cursor.close() conn.close() \u6ce8\uff1a \u5728fetch\u6570\u636e\u65f6\u6309\u7167\u987a\u5e8f\u8fdb\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528cursor.scroll(num,mode)\u6765\u79fb\u52a8\u6e38\u6807\u4f4d\u7f6e\uff0c\u5982\uff1a cursor.scroll(1,mode='relative') # \u76f8\u5bf9\u5f53\u524d\u4f4d\u7f6e\u79fb\u52a8 cursor.scroll(2,mode='absolute') # \u76f8\u5bf9\u7edd\u5bf9\u4f4d\u7f6e\u79fb\u52a8 \u66f4\u6539fetch\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u83b7\u53d6\u7684\u6570\u636e\u662f\u5143\u7956\u7c7b\u578b\uff0c\u5982\u679c\u60f3\u8981\u6216\u8005\u5b57\u5178\u7c7b\u578b\u7684\u6570\u636e cursor = conn.cursor(cursor=pymysql.cursors.DictCursor) #!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') # \u6e38\u6807\u8bbe\u7f6e\u4e3a\u5b57\u5178\u7c7b\u578b cursor = conn.cursor(cursor=pymysql.cursors.DictCursor) v = cursor.execute('SELECT * FROM score') result = cursor.fetchall() # result = cursor.fetchone() # result = cursor.fetchmany() print(result) cursor.close() conn.close()","title":"13 pymysql\u6a21\u5757"},{"location":"DevOps/12%20Python/13%20pymysql%20module/#1-pymysql","text":"PyMySQL \u662f\u5728 Python3.x \u7248\u672c\u4e2d\u7528\u4e8e\u8fde\u63a5 MySQL \u670d\u52a1\u5668\u7684\u4e00\u4e2a\u5e93\uff0cPython2\u4e2d\u5219\u4f7f\u7528mysqldb\u3002 PyMySQL \u9075\u5faa Python \u6570\u636e\u5e93 API v2.0 \u89c4\u8303\uff0c\u5e76\u5305\u542b\u4e86 pure-Python MySQL \u5ba2\u6237\u7aef\u5e93\u3002","title":"1. \u4ec0\u4e48\u662f PyMySQL\uff1f"},{"location":"DevOps/12%20Python/13%20pymysql%20module/#2-pymysql","text":"pip3 install PyMySQL","title":"2. PyMySQL \u5b89\u88c5"},{"location":"DevOps/12%20Python/13%20pymysql%20module/#3","text":"#!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql # \u521b\u5efa\u8fde\u63a5 conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') # \u521b\u5efa\u6e38\u6807 cursor = conn.cursor() # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u6536\u5f71\u54cd\u884c\u6570 effect_row = cursor.execute(\"update hosts set host = '1.1.1.2'\") # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u53d7\u5f71\u54cd\u884c\u6570 #effect_row = cursor.execute(\"update hosts set host = '1.1.1.2' where nid > %s\", (1,)) # \u6267\u884cSQL\uff0c\u5e76\u8fd4\u56de\u53d7\u5f71\u54cd\u884c\u6570 #effect_row = cursor.executemany(\"insert into hosts(host,color_id)values(%s,%s)\", [(\"1.1.1.11\",1),(\"1.1.1.11\",2)]) # \u63d0\u4ea4\uff0c\u4e0d\u7136\u65e0\u6cd5\u4fdd\u5b58\u65b0\u5efa\u6216\u8005\u4fee\u6539\u7684\u6570\u636e conn.commit() # \u5173\u95ed\u6e38\u6807 cursor.close() # \u5173\u95ed\u8fde\u63a5 conn.close() **\u6ce8\uff1a**\u5f53\u4f7f\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u65f6\u5bb9\u6613\u5f15\u8d77sql\u6ce8\u5165 sql = 'select * from userinfo where username=\"%s\" and password=\"%s\" ' %(user,pwd,) #\u4e0d\u63a8\u8350\u4f7f\u7528 sql = 'select * from userinfo where username=%s and password=%s',[user,pwd] #\u63a8\u8350\u4f7f\u7528\uff0cmysql\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\uff0c\u907f\u514dSQL\u6ce8\u5165 import pymysql user = input('\u8bf7\u8f93\u5165\u7528\u6237\u540d:') pwd = input('\u8bf7\u8f93\u5165\u5bc6\u7801:') # \u83b7\u53d6\u6570\u636e conn = pymysql.Connect(host='192.168.12.89',port=3306,user='root',password=\"123\",database=\"s17day11db\",charset='utf8') cursor = conn.cursor() v = cursor.execute('select * from userinfo where username=%s and password=%s',[user,pwd]) result = cursor.fetchone() cursor.close() conn.close() print(result) \u83b7\u53d6\u65b0\u521b\u5efa\u6570\u636e\u81ea\u589eID new_class_id = cursor.lastrowid # \u83b7\u53d6\u65b0\u589e\u6570\u636e\u81ea\u589eID \u590d\u5236\u4ee3\u7801 import pymysql # \u83b7\u53d6\u6570\u636e conn = pymysql.Connect(host='192.168.12.89',port=3306,user='root',password=\"123\",database=\"s17day11db\",charset='utf8') cursor = conn.cursor() cursor.execute('insert into class(caption) values(%s)',['\u65b0\u73ed\u7ea7']) conn.commit() new_class_id = cursor.lastrowid # \u83b7\u53d6\u65b0\u589e\u6570\u636e\u81ea\u589eID cursor.execute('insert into student(sname,gender,class_id) values(%s,%s,%s)',['\u674e\u6770','\u7537',new_class_id]) conn.commit() cursor.close() conn.close() \u67e5\u8be2\u8bed\u53e5 #!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') cursor = conn.cursor() cursor.execute(\"select * from hosts\") # \u83b7\u53d6\u7b2c\u4e00\u884c\u6570\u636e row_1 = cursor.fetchone() # \u83b7\u53d6\u524dn\u884c\u6570\u636e # row_2 = cursor.fetchmany(3) # \u83b7\u53d6\u6240\u6709\u6570\u636e # row_3 = cursor.fetchall() conn.commit() cursor.close() conn.close() \u6ce8\uff1a \u5728fetch\u6570\u636e\u65f6\u6309\u7167\u987a\u5e8f\u8fdb\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528cursor.scroll(num,mode)\u6765\u79fb\u52a8\u6e38\u6807\u4f4d\u7f6e\uff0c\u5982\uff1a cursor.scroll(1,mode='relative') # \u76f8\u5bf9\u5f53\u524d\u4f4d\u7f6e\u79fb\u52a8 cursor.scroll(2,mode='absolute') # \u76f8\u5bf9\u7edd\u5bf9\u4f4d\u7f6e\u79fb\u52a8 \u66f4\u6539fetch\u6570\u636e\u7c7b\u578b \u9ed8\u8ba4\u83b7\u53d6\u7684\u6570\u636e\u662f\u5143\u7956\u7c7b\u578b\uff0c\u5982\u679c\u60f3\u8981\u6216\u8005\u5b57\u5178\u7c7b\u578b\u7684\u6570\u636e cursor = conn.cursor(cursor=pymysql.cursors.DictCursor) #!/usr/bin/env python # -*- coding:utf-8 -*- import pymysql conn = pymysql.connect(host='127.0.0.1', port=3306, user='root', passwd='123', db='t1') # \u6e38\u6807\u8bbe\u7f6e\u4e3a\u5b57\u5178\u7c7b\u578b cursor = conn.cursor(cursor=pymysql.cursors.DictCursor) v = cursor.execute('SELECT * FROM score') result = cursor.fetchall() # result = cursor.fetchone() # result = cursor.fetchmany() print(result) cursor.close() conn.close()","title":"3. \u4f7f\u7528\u64cd\u4f5c"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/","text":"1. \u521b\u5efa\u4e00\u4e2aDjango \u9879\u76ee \u00b6 django-admin.py startproject <\u9879\u76ee\u540d\u79f0> \u4f8b\uff1a django-admin.py startproject myproject \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210myproject\u7684\u5de5\u7a0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myproject |----manage.py |____myproject |----__init__.py |----settings.py |----urls.py |----wsgi.py manage.py\uff1aDjango\u9879\u76ee\u91cc\u9762\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8c03\u7528django shell\u548c\u6570\u636e\u5e93\u7b49; settings.py\uff1a\u5305\u542b\u4e86\u9879\u76ee\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5305\u62ec\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8c03\u8bd5\u6807\u5fd7\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\u7684\u53d8\u91cf; urls.py\uff1a\u8d1f\u8d23\u628aURL\u6a21\u5f0f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f. 2. \u5728myproject\u9879\u76ee\u4e2d\u521b\u5efa\u4e00\u4e2a\u5e94\u7528 \u00b6 python manage.py startapp <\u5e94\u7528\u540d\u79f0> \u4f8b\uff1a python manage.py startapp myblog \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210myblog\u76ee\u5f55\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myblog |----__init__.py |----admin.py |----apps.py |----migrations | |---__init__.py |----models.py |----tests.py |----views.py 3. \u542f\u52a8Django\u9879\u76ee \u00b6 python manage.py runserver <web\u7aef\u53e3\u53f7> \u4f8b\uff1a python manage.py runserver 8080 \u542f\u52a8\u540eweb\u8bbf\u95ee\u5730\u5740+\u7aef\u53e3\u5c31\u53ef\u4ee5\u4e86 ~ 4. \u6570\u636e\u5e93\u64cd\u4f5c \u00b6 \u540c\u6b65\u66f4\u6539\u6570\u636e\u5e93\u8868\u6216\u5b57\u6bb5 python manage.py syncdb \u6ce8\u610f\uff1aDjango 1.7.1 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u9700\u8981\u7528\u4ee5\u4e0b\u547d\u4ee4 python manage.py makemigrations python manage.py migrate \u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8868\uff0c\u5f53\u4f60\u5728models.py\u4e2d\u65b0\u589e\u4e86\u7c7b\u65f6\uff0c\u8fd0\u884c\u5b83\u5c31\u53ef\u4ee5\u81ea\u52a8\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868\u4e86\uff0c\u4e0d\u7528\u624b\u52a8\u521b\u5efa \u6e05\u7a7a\u6570\u636e\u5e93 python manage.py flush \u6b64\u547d\u4ee4\u4f1a\u8be2\u95ee\u662f yes \u8fd8\u662f no, \u9009\u62e9 yes \u4f1a\u628a\u6570\u636e\u5168\u90e8\u6e05\u7a7a\u6389\uff0c\u53ea\u7559\u4e0b\u7a7a\u8868\u3002 \u521b\u5efa\u8d85\u7ea7\u7ba1\u7406\u5458 python manage.py createsuperuser # \u6309\u7167\u63d0\u793a\u8f93\u5165\u7528\u6237\u540d\u548c\u5bf9\u5e94\u7684\u5bc6\u7801\u5c31\u597d\u4e86\u90ae\u7bb1\u53ef\u4ee5\u7559\u7a7a\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u5fc5\u586b # \u4fee\u6539 \u7528\u6237\u5bc6\u7801\u53ef\u4ee5\u7528\uff1a python manage.py changepassword username Django \u57fa\u7840\u547d\u4ee4\u6c47\u603b \u00b6 # 1. \u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff1adjango-admin.py startproject <\u9879\u76ee\u540d\u79f0> django-admin.py startproject myproject # 2. \u521b\u5efa\u4e00\u4e2a\u5e94\u7528\uff1apython manage.py startapp <\u5e94\u7528\u540d\u79f0> python manage.py startapp myblog # 3. \u542f\u52a8\u9879\u76ee\uff1apython manage.py runserver <web\u7aef\u53e3\u53f7> python manage.py runserver 8080 # 4. \u540c\u6b65\u66f4\u6539\u6570\u636e\u5e93\u8868\u6216\u5b57\u6bb5 python manage.py syncdb \u6ce8\u610f\uff1aDjango 1.7.1 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u9700\u8981\u7528\u4ee5\u4e0b\u547d\u4ee4 python manage.py makemigrations python manage.py migrate # 5. \u6e05\u7a7a\u6570\u636e\u5e93 python manage.py flush # 6. \u521b\u5efa\u8d85\u7ea7\u7ba1\u7406\u5458 python manage.py createsuperuser # 7. \u4fee\u6539\u7528\u6237\u5bc6\u7801 python manage.py changepassword username","title":"14 Django\u57fa\u672c\u547d\u4ee4"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/#1-django","text":"django-admin.py startproject <\u9879\u76ee\u540d\u79f0> \u4f8b\uff1a django-admin.py startproject myproject \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210myproject\u7684\u5de5\u7a0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myproject |----manage.py |____myproject |----__init__.py |----settings.py |----urls.py |----wsgi.py manage.py\uff1aDjango\u9879\u76ee\u91cc\u9762\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8c03\u7528django shell\u548c\u6570\u636e\u5e93\u7b49; settings.py\uff1a\u5305\u542b\u4e86\u9879\u76ee\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5305\u62ec\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8c03\u8bd5\u6807\u5fd7\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\u7684\u53d8\u91cf; urls.py\uff1a\u8d1f\u8d23\u628aURL\u6a21\u5f0f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f.","title":"1. \u521b\u5efa\u4e00\u4e2aDjango \u9879\u76ee"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/#2-myproject","text":"python manage.py startapp <\u5e94\u7528\u540d\u79f0> \u4f8b\uff1a python manage.py startapp myblog \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210myblog\u76ee\u5f55\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myblog |----__init__.py |----admin.py |----apps.py |----migrations | |---__init__.py |----models.py |----tests.py |----views.py","title":"2. \u5728myproject\u9879\u76ee\u4e2d\u521b\u5efa\u4e00\u4e2a\u5e94\u7528"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/#3-django","text":"python manage.py runserver <web\u7aef\u53e3\u53f7> \u4f8b\uff1a python manage.py runserver 8080 \u542f\u52a8\u540eweb\u8bbf\u95ee\u5730\u5740+\u7aef\u53e3\u5c31\u53ef\u4ee5\u4e86 ~","title":"3. \u542f\u52a8Django\u9879\u76ee"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/#4","text":"\u540c\u6b65\u66f4\u6539\u6570\u636e\u5e93\u8868\u6216\u5b57\u6bb5 python manage.py syncdb \u6ce8\u610f\uff1aDjango 1.7.1 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u9700\u8981\u7528\u4ee5\u4e0b\u547d\u4ee4 python manage.py makemigrations python manage.py migrate \u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u8868\uff0c\u5f53\u4f60\u5728models.py\u4e2d\u65b0\u589e\u4e86\u7c7b\u65f6\uff0c\u8fd0\u884c\u5b83\u5c31\u53ef\u4ee5\u81ea\u52a8\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868\u4e86\uff0c\u4e0d\u7528\u624b\u52a8\u521b\u5efa \u6e05\u7a7a\u6570\u636e\u5e93 python manage.py flush \u6b64\u547d\u4ee4\u4f1a\u8be2\u95ee\u662f yes \u8fd8\u662f no, \u9009\u62e9 yes \u4f1a\u628a\u6570\u636e\u5168\u90e8\u6e05\u7a7a\u6389\uff0c\u53ea\u7559\u4e0b\u7a7a\u8868\u3002 \u521b\u5efa\u8d85\u7ea7\u7ba1\u7406\u5458 python manage.py createsuperuser # \u6309\u7167\u63d0\u793a\u8f93\u5165\u7528\u6237\u540d\u548c\u5bf9\u5e94\u7684\u5bc6\u7801\u5c31\u597d\u4e86\u90ae\u7bb1\u53ef\u4ee5\u7559\u7a7a\uff0c\u7528\u6237\u540d\u548c\u5bc6\u7801\u5fc5\u586b # \u4fee\u6539 \u7528\u6237\u5bc6\u7801\u53ef\u4ee5\u7528\uff1a python manage.py changepassword username","title":"4. \u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"DevOps/12%20Python/14%20Django%20basic%20command/#django","text":"# 1. \u521b\u5efa\u4e00\u4e2a\u9879\u76ee\uff1adjango-admin.py startproject <\u9879\u76ee\u540d\u79f0> django-admin.py startproject myproject # 2. \u521b\u5efa\u4e00\u4e2a\u5e94\u7528\uff1apython manage.py startapp <\u5e94\u7528\u540d\u79f0> python manage.py startapp myblog # 3. \u542f\u52a8\u9879\u76ee\uff1apython manage.py runserver <web\u7aef\u53e3\u53f7> python manage.py runserver 8080 # 4. \u540c\u6b65\u66f4\u6539\u6570\u636e\u5e93\u8868\u6216\u5b57\u6bb5 python manage.py syncdb \u6ce8\u610f\uff1aDjango 1.7.1 \u53ca\u4ee5\u4e0a\u7684\u7248\u672c\u9700\u8981\u7528\u4ee5\u4e0b\u547d\u4ee4 python manage.py makemigrations python manage.py migrate # 5. \u6e05\u7a7a\u6570\u636e\u5e93 python manage.py flush # 6. \u521b\u5efa\u8d85\u7ea7\u7ba1\u7406\u5458 python manage.py createsuperuser # 7. \u4fee\u6539\u7528\u6237\u5bc6\u7801 python manage.py changepassword username","title":"Django \u57fa\u7840\u547d\u4ee4\u6c47\u603b"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/","text":"Pipeline \u914d\u7f6e \u00b6 \u5fc5\u9009\u53c2\u6570 \u00b6 pipeline/node \u4ee3\u8868\u6574\u6761\u6d41\u6c34\u7ebf\uff0c\u610f\u601d\u4e3a\uff1a\u663e\u793a\u548c\u9690\u5f0f\u811a\u672c stages\uff1astage\u7684\u5bb9\u5668\uff0c\u6700\u5c11\u5305\u542b\u4e00\u4e2astage\u3002 stage\uff1a\u9636\u6bb5\u6bcf\u4e2a\u9636\u6bb5\u5fc5\u6709\u540d\u79f0\u3002 steps\uff1a\u4ee3\u8868stage\u4e2d\u4e00\u4e2a\u5177\u4f53\u7684\u6b65\u9aa4\uff0c\u6bcf\u4e2astage\u53ea\u80fd\u5305\u542b\u4e00\u4e2asteps agent\uff1aJenkins\u6267\u884c\u5ba2\u6237\u7aef\u3002 \u6307\u4ee4 \u00b6 environment\uff1a\u73af\u5883\u53d8\u91cf\u3002stage\u6216\u8005\u662fpipeline\u90e8\u5206 tools\uff1a\u81ea\u52a8\u4e0b\u8f7d\u6216\u8005\u6307\u5b9a\u81ea\u5b9a\u4e49\u5de5\u5177\u3002stage\u6216\u8005\u662fpipeline\u90e8\u5206 input\uff1a\u5b9a\u4e49\u5728stage\u90e8\u5206\uff0c\u4f1a\u6682\u505cpipeline\uff0c\u63d0\u793a\u8f93\u5165\u5185\u5bb9 options\uff1a\u914d\u7f6ejenkins\u672c\u8eab\u9009\u9879\u3002\u53ef\u5b9a\u4e49\u5728stage\u548cpipeline\u90e8\u5206 buildDiscarder\uff1a\u4fdd\u5b58\u6700\u8fd1\u5386\u53f2\u6784\u5efa\u7684\u6570\u91cf\u3002 checkoutToSubdirectory\uff1a\u91cd\u5b9a\u5411\u5de5\u4f5c\u76ee\u5f55 disableConcurrentBuilds\uff1a\u9ed8\u8ba4\u6784\u5efa\u65f6\u53ef\u4ee5\u5e76\u53d1\u7684\uff0c\u5173\u95ed\u9009\u9879 newContainerPerStage\uff1aagent\u4e3adocker\u6216\u8005\u662fdockerfile\u65f6stage\u90fd\u5206\u522b\u8fd0\u884c\u5728\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u800c\u4e0d\u662f\u6240\u6709stage\u90fd\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u3002 retry\uff1a\u6307\u5b9a\u6784\u5efa\u5931\u8d25\u8bd5\u91cd\u8bd5\u6b21\u6570\u3002 timeout\uff1a\u5f53pipeline\u6267\u884c\u65f6\u95f4\u957f\uff0cjenkins\u7ec8\u6b62pipeline\u6267\u884c\u3002 \u5355\u4f4d\u4e3a\uff1aSENCONDS\uff08\u79d2\uff09\u3001MIUNTES\uff08\u5206\u79d2\uff09 parallel\uff1a\u5e76\u884c\u6267\u884c\u591a\u4e2astep\u3002 parameters\uff1a\u4e0einput\u4e0d\u540c\uff0cparameters\u662f\u6267\u884cpipeline\u524d\u4f20\u5165\u53c2\u6570 triggers\u7528\u4e8e\u5b9a\u4e49\u4e4b\u884cpipeline\u7684\u89e6\u53d1\u5668 when\uff1a\u5f53\u6ee1\u8db3\u5b9a\u4e49\u6761\u4ef6\u65f6\uff0c\u9636\u6bb5\u624d\u6267\u884c script: \u6267\u884cgroovy\u811a\u672c\u3002\u653e\u7f6e\u5728steps\u4e2d\u3002 \u5185\u7f6e\u57fa\u7840\u6b65\u9aa4 \u00b6 deleteDir\uff1a\u5220\u9664\u5f53\u524d\u76ee\u5f55\uff0c\u901a\u5e38\u4e0edir\u4e00\u540c\u4f7f\u7528\u3002 dir\uff1a\u5207\u6362\u5230\u5de5\u4f5c\u76ee\u5f55 fileExists\uff1a\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 isUnix\uff1a\u5224\u65ad\u662f\u5426\u4e3aUnix\u7cfb\u7edf pwd\uff1a\u8fd4\u56de\u5f53\u524d\u76ee\u5f55\u3002 writeFile\uff1a\u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6 file\uff1a\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84 text\uff1a\u8981\u5199\u5165\u6587\u4ef6\u5185\u5bb9 encoding\uff08\u53ef\u9009\uff09\uff1a\u76ee\u6807\u6587\u4ef6\u7684\u7f16\u7801\u3002 readFile\uff1a\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 file\uff1a\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84 \u5236\u54c1\u76f8\u5173\u6b65\u9aa4 \u00b6 stash\uff1a\u4fdd\u5b58\u4e34\u65f6\u6587\u4ef6\u3002\u8de8jenkins node\u4f7f\u7528\uff0c\u6784\u5efa\u7684\u5236\u54c1\u4e34\u65f6\u4fdd\u5b58\u4f9b\u5176\u4ed6\u9636\u6bb5\u4f7f\u7528\u3002 name\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4fdd\u5b58\u6587\u4ef6\u96c6\u5408\u7684\u552f\u4e00\u6807\u8bc6\u3002 allowEmpty\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5141\u8bb8stash\u5185\u5bb9\u4e3a\u7a7a\u3002 excludes\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6392\u9664\u6587\u4ef6\uff0c\u591a\u4e2a\u6587\u4ef6\u9017\u53f7\u5206\u9694\u3002 includes\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0cstash\u54ea\u4e9b\u6587\u4ef6\uff0c\u7559\u7a7a\u4ee3\u8868\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6587\u4ef6\u3002 useDefaultExcludes\uff1a\u5e03\u5c14\u7c7b\u578b\u3002\u5982\u679c\u4e3atrue\u4ee3\u8868\u4f7f\u7528Ant\u98ce\u683c\u8def\u5f84\u9ed8\u8ba4\u6392\u9664\u6587\u4ef6\u5217\u8868\u3002 unstash\uff1a\u53d6\u51fa\u4e4b\u524dstash\u6587\u4ef6 name\uff1a\u53d6\u51fa\u6587\u4ef6\u552f\u4e00\u6807\u8bc6\u3002 \u547d\u4ee4\u76f8\u5173\u6b65\u9aa4 \u00b6 \u547d\u4ee4\u76f8\u5173\u6b65\u9aa4\u7ec4\u4ef6\uff1aNode and Processes\u63d2\u4ef6\uff08jenkins\u81ea\u5e26\u7ec4\u4ef6\uff09 * sh \u6267\u884cshell\u547d\u4ee4 * script: \u5c06\u8981\u6267\u884c\u7684shell\u811a\u672c * encoding\uff1a\u811a\u672c\u6267\u884c\u540e\u8f93\u51fa\u65e5\u5fd7\u7684\u7f16\u7801 * returnStatus\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u9ed8\u8ba4\u811a\u672c\u8fd4\u56de\u7684\u662f\u72b6\u6001\u7801\u3002 * returnStdout\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u4efb\u52a1\u7684\u6807\u51c6\u8f93\u51fa\u5c06\u4f5c\u4e3a\u6b65\u9aa4\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e0d\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\uff08\u5982\u6709\u62a5\u9519\uff0c\u5219\u4f1a\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\uff09\u3002 * \u9664\u4e86script\u53c2\u6570\u5176\u4ed6\u90fd\u662f\u53ef\u9009\u7684 * bat\u3001powershell \u5176\u4ed6\u6b65\u9aa4 \u00b6 error\u4e3b\u52a8\u62a5\u9519\uff0c\u7ec8\u6b62\u5f53\u524dpipeline\u3002 tool\uff1a\u4f7f\u7528\u9884\u5b9a\u5de5\u5177 name\uff1a\u5de5\u5177\u540d\u79f0 type\uff08\u53ef\u9009\uff09\uff1a\u5de5\u5177\u7c7b\u578b timeout\uff1a time\uff1a\u6574\u578b\uff0c\u8d85\u65f6\u65f6\u95f4 unit\uff08\u53ef\u9009\uff09\uff1a\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709NANOSECONDS\u3001MICROSECONDS\u3001MILLISECONDS\u3001SECONDS\u3001MINUTES\uff08\u9ed8\u8ba4\uff09\u3001HOURS\u3001DAYS activity\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u53ea\u6709\u5f53\u65e5\u5fd7\u6ca1\u6709\u6d3b\u52a8\u540e\uff0c\u624d\u7b97\u771f\u6b63\u8d85\u65f6\u3002 waitUntil\uff1a\u7b49\u5f85\u6761\u4ef6\u6ee1\u8db3\u3002\u4e0d\u65ad\u91cd\u590dwaitUntil\u5757\u5185\u7684\u4ee3\u7801\uff0c\u77e5\u9053\u6761\u4ef6\u4e3atrue\uff0c\u901a\u5e38\u4e0etimeout\u914d\u5408\u4f7f\u7528\uff0c\u907f\u514d\u6b7b\u5faa\u73af\u3002 retry\uff1a\u91cd\u590d\u6267\u884c\u5757\u3002 sleep\uff1a\u8ba9pipeline\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4 time\uff1a\u6574\u578b\uff0c\u4f11\u7720\u65f6\u95f4\u3002 unit\uff08\u53ef\u9009\uff09\uff1a\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709NANOSECONDS\u3001MICROSECONDS\u3001MILLISECONDS\u3001SECONDS\u3001MINUTES\uff08\u9ed8\u8ba4\uff09\u3001HOURS\u3001DAYS \u73af\u5883\u53d8\u91cf \u00b6 \u73af\u5883\u53d8\u91cf\u5206\u4e3a\u5185\u7f6e\u73af\u5883\u53d8\u91cf\u3001\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf * \u5185\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u901a\u8fc7\u4e00\u4e2aenv\u7684\u5168\u5c40\u53d8\u91cf\u66b4\u9732\u51fa\u6765 * \u4e09\u79cd\u65b9\u6cd5\uff1a {env.BUILD_NUMBER}\u3001 {env.BUILD_NUMBER}\u3001 env.BUILD_NUMBER\u3001${BUILD_NUMBER} * \u6ce8\u610f\uff1a\u666e\u901apipeline\u4e2dgit branch\u4e3aorigin/master,\u591a\u5206\u652f\u4e2dpipeline git branch\u53d8\u91cf\u4e3amaster\u3002\u53ef\u4ee5\u5728\u9636\u6bb5\u4e2d\u4f7f\u7528sh \"printenv\"\u6253\u5370\u5168\u5c40\u53d8\u91cf\u67e5\u770b\u3002 * \u81ea\u5b9a\u4e49\u53d8\u91cf\u3002 * environment\u3002\u5b9a\u4e49\u5728pipeline\u4e2d\u4ee3\u8868\u6574\u4e2a\u6d41\u7a0b\uff0c\u5b9a\u4e49\u5230stage\u4e2d\u4ee3\u8868\u8be5\u9636\u6bb5\u6709\u6548\u3002 * \u53d8\u91cf\u4e0d\u53ef\u4ee5\u8de8pipeline * \u5982\u679c\u81ea\u5b9a\u4e49\u53d8\u91cf\u4e0eenv\u4e2d\u91cd\u540d\uff0c\u53d8\u91cf\u503c\u4f1a\u88ab\u8986\u76d6\u6389\u3002 * \u4e3a\u4e86\u907f\u514d\u53d8\u91cf\u51b2\u7a81\uff0c\u4ee5\u4e0b\u5212\u7ebf\u533a\u5206\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002","title":"Pipeline\u914d\u7f6e"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#pipeline","text":"","title":"Pipeline \u914d\u7f6e"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_1","text":"pipeline/node \u4ee3\u8868\u6574\u6761\u6d41\u6c34\u7ebf\uff0c\u610f\u601d\u4e3a\uff1a\u663e\u793a\u548c\u9690\u5f0f\u811a\u672c stages\uff1astage\u7684\u5bb9\u5668\uff0c\u6700\u5c11\u5305\u542b\u4e00\u4e2astage\u3002 stage\uff1a\u9636\u6bb5\u6bcf\u4e2a\u9636\u6bb5\u5fc5\u6709\u540d\u79f0\u3002 steps\uff1a\u4ee3\u8868stage\u4e2d\u4e00\u4e2a\u5177\u4f53\u7684\u6b65\u9aa4\uff0c\u6bcf\u4e2astage\u53ea\u80fd\u5305\u542b\u4e00\u4e2asteps agent\uff1aJenkins\u6267\u884c\u5ba2\u6237\u7aef\u3002","title":"\u5fc5\u9009\u53c2\u6570"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_2","text":"environment\uff1a\u73af\u5883\u53d8\u91cf\u3002stage\u6216\u8005\u662fpipeline\u90e8\u5206 tools\uff1a\u81ea\u52a8\u4e0b\u8f7d\u6216\u8005\u6307\u5b9a\u81ea\u5b9a\u4e49\u5de5\u5177\u3002stage\u6216\u8005\u662fpipeline\u90e8\u5206 input\uff1a\u5b9a\u4e49\u5728stage\u90e8\u5206\uff0c\u4f1a\u6682\u505cpipeline\uff0c\u63d0\u793a\u8f93\u5165\u5185\u5bb9 options\uff1a\u914d\u7f6ejenkins\u672c\u8eab\u9009\u9879\u3002\u53ef\u5b9a\u4e49\u5728stage\u548cpipeline\u90e8\u5206 buildDiscarder\uff1a\u4fdd\u5b58\u6700\u8fd1\u5386\u53f2\u6784\u5efa\u7684\u6570\u91cf\u3002 checkoutToSubdirectory\uff1a\u91cd\u5b9a\u5411\u5de5\u4f5c\u76ee\u5f55 disableConcurrentBuilds\uff1a\u9ed8\u8ba4\u6784\u5efa\u65f6\u53ef\u4ee5\u5e76\u53d1\u7684\uff0c\u5173\u95ed\u9009\u9879 newContainerPerStage\uff1aagent\u4e3adocker\u6216\u8005\u662fdockerfile\u65f6stage\u90fd\u5206\u522b\u8fd0\u884c\u5728\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u800c\u4e0d\u662f\u6240\u6709stage\u90fd\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u3002 retry\uff1a\u6307\u5b9a\u6784\u5efa\u5931\u8d25\u8bd5\u91cd\u8bd5\u6b21\u6570\u3002 timeout\uff1a\u5f53pipeline\u6267\u884c\u65f6\u95f4\u957f\uff0cjenkins\u7ec8\u6b62pipeline\u6267\u884c\u3002 \u5355\u4f4d\u4e3a\uff1aSENCONDS\uff08\u79d2\uff09\u3001MIUNTES\uff08\u5206\u79d2\uff09 parallel\uff1a\u5e76\u884c\u6267\u884c\u591a\u4e2astep\u3002 parameters\uff1a\u4e0einput\u4e0d\u540c\uff0cparameters\u662f\u6267\u884cpipeline\u524d\u4f20\u5165\u53c2\u6570 triggers\u7528\u4e8e\u5b9a\u4e49\u4e4b\u884cpipeline\u7684\u89e6\u53d1\u5668 when\uff1a\u5f53\u6ee1\u8db3\u5b9a\u4e49\u6761\u4ef6\u65f6\uff0c\u9636\u6bb5\u624d\u6267\u884c script: \u6267\u884cgroovy\u811a\u672c\u3002\u653e\u7f6e\u5728steps\u4e2d\u3002","title":"\u6307\u4ee4"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_3","text":"deleteDir\uff1a\u5220\u9664\u5f53\u524d\u76ee\u5f55\uff0c\u901a\u5e38\u4e0edir\u4e00\u540c\u4f7f\u7528\u3002 dir\uff1a\u5207\u6362\u5230\u5de5\u4f5c\u76ee\u5f55 fileExists\uff1a\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 isUnix\uff1a\u5224\u65ad\u662f\u5426\u4e3aUnix\u7cfb\u7edf pwd\uff1a\u8fd4\u56de\u5f53\u524d\u76ee\u5f55\u3002 writeFile\uff1a\u5c06\u5185\u5bb9\u5199\u5165\u6587\u4ef6 file\uff1a\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84 text\uff1a\u8981\u5199\u5165\u6587\u4ef6\u5185\u5bb9 encoding\uff08\u53ef\u9009\uff09\uff1a\u76ee\u6807\u6587\u4ef6\u7684\u7f16\u7801\u3002 readFile\uff1a\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 file\uff1a\u6587\u4ef6\u8def\u5f84\uff0c\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84","title":"\u5185\u7f6e\u57fa\u7840\u6b65\u9aa4"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_4","text":"stash\uff1a\u4fdd\u5b58\u4e34\u65f6\u6587\u4ef6\u3002\u8de8jenkins node\u4f7f\u7528\uff0c\u6784\u5efa\u7684\u5236\u54c1\u4e34\u65f6\u4fdd\u5b58\u4f9b\u5176\u4ed6\u9636\u6bb5\u4f7f\u7528\u3002 name\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u4fdd\u5b58\u6587\u4ef6\u96c6\u5408\u7684\u552f\u4e00\u6807\u8bc6\u3002 allowEmpty\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5141\u8bb8stash\u5185\u5bb9\u4e3a\u7a7a\u3002 excludes\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u6392\u9664\u6587\u4ef6\uff0c\u591a\u4e2a\u6587\u4ef6\u9017\u53f7\u5206\u9694\u3002 includes\uff1a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0cstash\u54ea\u4e9b\u6587\u4ef6\uff0c\u7559\u7a7a\u4ee3\u8868\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u6587\u4ef6\u3002 useDefaultExcludes\uff1a\u5e03\u5c14\u7c7b\u578b\u3002\u5982\u679c\u4e3atrue\u4ee3\u8868\u4f7f\u7528Ant\u98ce\u683c\u8def\u5f84\u9ed8\u8ba4\u6392\u9664\u6587\u4ef6\u5217\u8868\u3002 unstash\uff1a\u53d6\u51fa\u4e4b\u524dstash\u6587\u4ef6 name\uff1a\u53d6\u51fa\u6587\u4ef6\u552f\u4e00\u6807\u8bc6\u3002","title":"\u5236\u54c1\u76f8\u5173\u6b65\u9aa4"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_5","text":"\u547d\u4ee4\u76f8\u5173\u6b65\u9aa4\u7ec4\u4ef6\uff1aNode and Processes\u63d2\u4ef6\uff08jenkins\u81ea\u5e26\u7ec4\u4ef6\uff09 * sh \u6267\u884cshell\u547d\u4ee4 * script: \u5c06\u8981\u6267\u884c\u7684shell\u811a\u672c * encoding\uff1a\u811a\u672c\u6267\u884c\u540e\u8f93\u51fa\u65e5\u5fd7\u7684\u7f16\u7801 * returnStatus\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u9ed8\u8ba4\u811a\u672c\u8fd4\u56de\u7684\u662f\u72b6\u6001\u7801\u3002 * returnStdout\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u4efb\u52a1\u7684\u6807\u51c6\u8f93\u51fa\u5c06\u4f5c\u4e3a\u6b65\u9aa4\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e0d\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\uff08\u5982\u6709\u62a5\u9519\uff0c\u5219\u4f1a\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\uff09\u3002 * \u9664\u4e86script\u53c2\u6570\u5176\u4ed6\u90fd\u662f\u53ef\u9009\u7684 * bat\u3001powershell","title":"\u547d\u4ee4\u76f8\u5173\u6b65\u9aa4"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_6","text":"error\u4e3b\u52a8\u62a5\u9519\uff0c\u7ec8\u6b62\u5f53\u524dpipeline\u3002 tool\uff1a\u4f7f\u7528\u9884\u5b9a\u5de5\u5177 name\uff1a\u5de5\u5177\u540d\u79f0 type\uff08\u53ef\u9009\uff09\uff1a\u5de5\u5177\u7c7b\u578b timeout\uff1a time\uff1a\u6574\u578b\uff0c\u8d85\u65f6\u65f6\u95f4 unit\uff08\u53ef\u9009\uff09\uff1a\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709NANOSECONDS\u3001MICROSECONDS\u3001MILLISECONDS\u3001SECONDS\u3001MINUTES\uff08\u9ed8\u8ba4\uff09\u3001HOURS\u3001DAYS activity\uff08\u53ef\u9009\uff09\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u53ea\u6709\u5f53\u65e5\u5fd7\u6ca1\u6709\u6d3b\u52a8\u540e\uff0c\u624d\u7b97\u771f\u6b63\u8d85\u65f6\u3002 waitUntil\uff1a\u7b49\u5f85\u6761\u4ef6\u6ee1\u8db3\u3002\u4e0d\u65ad\u91cd\u590dwaitUntil\u5757\u5185\u7684\u4ee3\u7801\uff0c\u77e5\u9053\u6761\u4ef6\u4e3atrue\uff0c\u901a\u5e38\u4e0etimeout\u914d\u5408\u4f7f\u7528\uff0c\u907f\u514d\u6b7b\u5faa\u73af\u3002 retry\uff1a\u91cd\u590d\u6267\u884c\u5757\u3002 sleep\uff1a\u8ba9pipeline\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4 time\uff1a\u6574\u578b\uff0c\u4f11\u7720\u65f6\u95f4\u3002 unit\uff08\u53ef\u9009\uff09\uff1a\u65f6\u95f4\u5355\u4f4d\uff0c\u652f\u6301\u7684\u503c\u6709NANOSECONDS\u3001MICROSECONDS\u3001MILLISECONDS\u3001SECONDS\u3001MINUTES\uff08\u9ed8\u8ba4\uff09\u3001HOURS\u3001DAYS","title":"\u5176\u4ed6\u6b65\u9aa4"},{"location":"DevOps/13%20Jenkins/Pipeline%20configuration/#_7","text":"\u73af\u5883\u53d8\u91cf\u5206\u4e3a\u5185\u7f6e\u73af\u5883\u53d8\u91cf\u3001\u81ea\u5b9a\u4e49\u73af\u5883\u53d8\u91cf * \u5185\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u901a\u8fc7\u4e00\u4e2aenv\u7684\u5168\u5c40\u53d8\u91cf\u66b4\u9732\u51fa\u6765 * \u4e09\u79cd\u65b9\u6cd5\uff1a {env.BUILD_NUMBER}\u3001 {env.BUILD_NUMBER}\u3001 env.BUILD_NUMBER\u3001${BUILD_NUMBER} * \u6ce8\u610f\uff1a\u666e\u901apipeline\u4e2dgit branch\u4e3aorigin/master,\u591a\u5206\u652f\u4e2dpipeline git branch\u53d8\u91cf\u4e3amaster\u3002\u53ef\u4ee5\u5728\u9636\u6bb5\u4e2d\u4f7f\u7528sh \"printenv\"\u6253\u5370\u5168\u5c40\u53d8\u91cf\u67e5\u770b\u3002 * \u81ea\u5b9a\u4e49\u53d8\u91cf\u3002 * environment\u3002\u5b9a\u4e49\u5728pipeline\u4e2d\u4ee3\u8868\u6574\u4e2a\u6d41\u7a0b\uff0c\u5b9a\u4e49\u5230stage\u4e2d\u4ee3\u8868\u8be5\u9636\u6bb5\u6709\u6548\u3002 * \u53d8\u91cf\u4e0d\u53ef\u4ee5\u8de8pipeline * \u5982\u679c\u81ea\u5b9a\u4e49\u53d8\u91cf\u4e0eenv\u4e2d\u91cd\u540d\uff0c\u53d8\u91cf\u503c\u4f1a\u88ab\u8986\u76d6\u6389\u3002 * \u4e3a\u4e86\u907f\u514d\u53d8\u91cf\u51b2\u7a81\uff0c\u4ee5\u4e0b\u5212\u7ebf\u533a\u5206\u81ea\u5b9a\u4e49\u53d8\u91cf\u3002","title":"\u73af\u5883\u53d8\u91cf"},{"location":"DevOps/14%20Vsftpd/vsftpd%20configuration%20parameters/","text":"vsftpd.conf anonymous_enable = NO local_enable = YES local_umask = 022 dirmessage_enable = YES xferlog_enable = YES xferlog_file = /var/log/vsftpd.log xferlog_std_format = YES ascii_upload_enable = YES ascii_download_enable = YES chroot_local_user = YES allow_writeable_chroot = YES guest_enable = YES guest_username = ftpuser pam_service_name = vsftpd user_config_dir = /etc/vsftpd/vsftp_user_conf virtual_use_local_privs = YES pasv_enable = YES pasv_min_port = 20000 pasv_max_port = 30000 * \u865a\u62df\u7528\u6237admin local_root = /home/ftpuser/admin/ write_enable = YES anon_umask = 022 anon_world_readable_only = NO anon_upload_enable = YES anon_mkdir_write_enable = YES anon_other_write_enable = YES * pam.d/vsftpd \u6587\u4ef6\u6dfb\u52a0(\u6ce8\u610f32\u4e3a\u7cfb\u7edf\u8981\u5c06/lib64 \u6539\u4e3a/lib) auth sufficient /lib64/security/pam_userdb.so db = /etc/vsftpd/vsftpd_login account sufficient /lib64/security/pam_userdb.so db = /etc/vsftpd/vsftpd_login * \u751f\u6210\u6570\u636e\u5e93\u6587\u4ef6 db_load -T -t hash -f /etc/vsftpd/ftpuser.txt /etc/vsftpd/vsftpd.db","title":"Vsftpd\u914d\u7f6e\u53c2\u6570"},{"location":"DevOps/15%20Kubernetes/01%20Kubernetes%20knowledge/","text":"\u4ecb\u7ecd\u8bf4\u660e k8s\u7ec4\u4ef6\u8bf4\u660e borg\u7ec4\u4ef6\u8bf4\u660e k8s\u7ed3\u6784\u8bf4\u660e \u7f51\u7edc\u7ed3\u6784 \u7ec4\u4ef6\u7ed3\u6784 K8s \u4e2d\u7684\u4e00\u4e9b\u5173\u952e\u5b57\u89e3\u91ca \u57fa\u7840\u6982\u5ff5 Pod \u6982\u5ff5 \u81ea\u4e3b\u5f0fPod \u7ba1\u7406\u5668\u7ba1\u7406\u7684Pod Rs\u3001Rc deployment Hpa statefullset Daemonset Job,Cronjob \u670d\u52a1\u53d1\u73b0 Pod\u534f\u540c \u7f51\u7edc\u901a\u8baf\u6a21\u5f0f \u7f51\u7edc\u901a\u8baf\u6a21\u5f0f\u8bf4\u660e \u7ec4\u4ef6\u901a\u8baf\u6a21\u5f0f\u8bf4\u660e Kubernetes \u5b89\u88c5 \u7cfb\u7edf\u521d\u59cb\u5316 Kubeadm \u90e8\u7f72\u5b89\u88c5 \u5e38\u89c1\u95ee\u9898\u5206\u6790 \u8d44\u6e90\u6e05\u5355 K8s \u4e2d\u8d44\u6e90\u7684\u6982\u5ff5 \u4ec0\u4e48\u662f\u8d44\u6e90 \u540d\u79f0\u7a7a\u95f4\u7ea7\u522b\u7684\u8d44\u6e90 \u96c6\u7fa4\u7ea7\u522b\u7684\u8d44\u6e90 \u8d44\u6e90\u6e05\u5355-yaml\u8bed\u6cd5\u683c\u5f0f \u901a\u8fc7\u8d44\u6e90\u6e05\u5355\u7f16\u5199Pod \u901a\u8fc7\u8d44\u6e90\u6e05\u5355\u7f16\u5199Pod Pod\u7684\u751f\u547d\u5468\u671f initC Pod phase \u5bb9\u5668\u63a2\u9488 livenessProbe readinessProbe Pod hook \u91cd\u542f\u7b56\u7565 Pod\u63a7\u5236\u5668 Pod\u63a7\u5236\u5668\u8bf4\u660e \u4ec0\u4e48\u662f\u63a7\u5236\u5668 \u63a7\u5236\u5668\u7c7b\u578b\u8bf4\u660e replicationController \u548c RelicaSet Deployment DaemonSet Job Cronjob Statefullset Horizontal Pod Autoscaling \u670d\u52a1\u53d1\u73b0 Service \u539f\u7406 Service \u542b\u4e49 Service \u5e38\u89c1\u7c7b\u578b ClusterIP NodePort ExternalName Service \u5b9e\u73b0\u65b9\u5f0f Userspace Iptables Ipvs Ingress Nginx http\u4ee3\u7406\u8bbf\u95ee https\u4ee3\u7406\u8bbf\u95ee \u4f7f\u7528cookie \u5b9e\u73b0\u4f1a\u8bdd\u5173\u8054 BasicAuth Nginx \u8fdb\u884c\u91cd\u5199 \u5b58\u50a8 PV \u6982\u5ff5\u89e3\u91ca Pv Pvc \u7c7b\u578b\u8bf4\u660e Pv \u540e\u7aef\u7c7b\u578b Pv \u8bbf\u95ee\u6a21\u5f0f\u8bf4\u660e \u56de\u6536\u7b56\u7565 \u72b6\u6001 \u5b9e\u4f8b\u6f14\u793a Pvc Pvc\u5b9e\u6218\u6f14\u793a volume \u5b9a\u4e49\u6982\u5ff5 \u5377\u7684\u7c7b\u578b EmptyDir \u8bf4\u660e \u7528\u9014\u5047\u8bbe \u5b9e\u9a8c\u6f14\u793a hostPath \u8bf4\u660e \u7528\u9014\u8bf4\u660e \u5b9e\u9a8c\u6f14\u793a Secret \u5b9a\u4e49\u6982\u5ff5 \u6982\u5ff5\u8bf4\u660e \u5206\u7c7b Service Account Opaque Secret \u7279\u6b8a\u8bf4\u660e \u521b\u5efa \u4f7f\u7528 Secret \u6302\u8f7d\u5230 Volume Secret \u5bfc\u51fa\u5230\u73af\u5883\u53d8\u91cf\u4e2d Kubernetes.io/dockerconfigjson configMap \u5b9a\u4e49\u6982\u5ff5 \u521b\u5efa configMap \u4f7f\u7528\u76ee\u5f55\u521b\u5efa \u4f7f\u7528\u6587\u4ef6\u521b\u5efa \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa Pod \u4e2d\u4f7f\u7528configMap configMap \u6765\u4ee3\u66ff\u73af\u5883\u53d8\u91cf configMap \u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570 \u901a\u8fc7\u6570\u636e\u5377\u63d2\u4ef6\u4f7f\u7528configMap configMap \u70ed\u66f4\u65b0 \u5b9e\u73b0\u6f14\u793a \u66f4\u65b0\u89e6\u53d1\u8bf4\u660e \u8c03\u5ea6\u5668 \u8c03\u5ea6\u5668\u6982\u5ff5 \u6982\u5ff5 \u8c03\u5ea6\u8fc7\u7a0b \u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668 \u8c03\u5ea6\u4eb2\u548c\u6027 nodeAffinity preferredDuringSchedulinglgnoredDuringExecution requiredDuringSchedulinglgnoredDuringExecution podAntiAffinity preferredDuringSchedulinglgnoredDuringExecution requiredDuringSchedulinglgnoredDuringExecution \u4eb2\u548c\u6027\u8fd0\u7b97\u7b26 \u6c61\u70b9 \u6c61\u70b9\u6982\u5ff5 Taint \u7ec4\u6210 \u6c61\u70b9\u7684\u8bbe\u7f6e\u3001\u67e5\u770b\u548c\u53bb\u9664 Tolerations Tolerations\u8bbe\u7f6e\u6f14\u793a \u56fa\u5b9a\u8282\u70b9\u8c03\u5ea6 PodName \u6307\u5b9a\u8c03\u5ea6 \u6807\u7b7e\u9009\u62e9\u5668\u8c03\u5ea6 \u96c6\u7fa4\u5b89\u5168\u673a\u5236 \u51c6\u4eba\u63a7\u5236 \u9274\u6743 \u8ba4\u8bc1 http token http base Https \u673a\u5236\u8bf4\u660e AlwaysDeny AlwaysAllow ABAC Webhook RBAC RBAC Role and ClusterRole RouleBinding and ClusterRoleBinding Resources To Subjects \u521b\u5efa\u4e00\u4e2a\u7cfb\u7edf\u7528\u6237\u7ba1\u7406k8s dev \u540d\u79f0\u7a7a\u95f4:\u91cd\u8981\u8bd5\u9a8c HELM HELM\u6982\u5ff5 HELM\u6982\u5ff5\u8bf4\u660e \u7ec4\u4ef6\u6784\u6210 HELM\u90e8\u7f72 HELM\u81ea\u5b9a\u4e49 HELM\u90e8\u7f72\u5b9e\u4f8b HELM\u90e8\u7f72dashboard Metrics-server HPA\u6f14\u793a \u8d44\u6e90\u9650\u5236 Pod \u540d\u79f0\u7a7a\u95f4 Prometheus EFK \u8fd0\u7ef4 Kubeadm \u6e90\u7801\u4fee\u6539 Kubernetes \u9ad8\u53ef\u7528\u6784\u5efa","title":"01 Kubernetes\u77e5\u8bc6"},{"location":"DevOps/15%20Kubernetes/02%20Kubernetes%20component%20description/","text":"k8s\u9ad8\u53ef\u7528\u96c6\u7fa4\u6700\u597d\u662f>=3\u5947\u6570\u4e2a Master :\uff08\u6bcf\u4e2a\u7ec4\u4ef6\u672c\u5730\u4f1a\u751f\u6210\u7f13\u5b58\uff09 apiserver \u6240\u6709\u7ec4\u4ef6\u7684\u8bbf\u95ee\u5165\u53e3 scheduler >> api server >> etc \u8d1f\u8d23\u4ecb\u7ecd\u4efb\u52a1\uff0c\u9009\u62e9\u5408\u9002\u7684\u8282\u70b9\u5206\u914d\u4efb\u52a1 replication controller \u7ef4\u62a4\u526f\u672c\u6570\u76ee Etcd\uff1a\u952e\u503c\u5bf9\u6570\u636e\u5e93 \u5b58\u50a8k8s\u7684\u96c6\u7fa4\u6240\u6709\u7684\u91cd\u8981\u4fe1\u606f\uff08\u6301\u4e45\u5316\uff09 node: kubelet \u4e0eCRI \u4ea4\u4e92\u64cd\u4f5cdocker\u5bb9\u5668\u7ef4\u6301\u751f\u547d\u5468\u671f Kube proxy \u8d1f\u8f7d pod\u4e4b\u95f4\u8bbf\u95ee \u9ed8\u8ba4\u64cd\u4f5c\u9632\u706b\u5899\u65b0\u7248\u672c\u652f\u6301ipvs Docker Pod **pause**\u53ea\u8981\u542f\u52a8\u5c31\u4f1a\u6709\u4e00\u4e2a\u5bb9\u5668\u542f\u52a8\uff0c\u63d0\u4f9b\u5bb9\u5668\u4e4b\u524d\u7684\u901a\u8baf\u3001\u5171\u4eab \u63a7\u5236\u5668\u7c7b\u578b ReplicationController\uff08rc\uff09 && Replicaset\uff08Rs\uff09&& deployment \u89e3\u91ca\uff1a HPA\uff08HorizontallPodAutoScale\uff09\u4ec5\u9002\u7528\u4e8eDeployment\u548cReplicaSet\uff0c\u5728v1\u7248\u672c\u4e2d\u4ec5\u652f\u6301\u6839\u636ePod Cpu\u4f7f\u7528\u7387\u6269\u5bb9\uff0c\u5728v1alpha\u7248\u672c\u4e2d\uff0c\u652f\u6301\u6839\u636e\u5185\u5b58\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684metric\u6269\u5bb9 ReplicationController \u7528\u6765\u786e\u4fdd\u5bb9\u5668\u5e94\u7528\u7684\u526f\u672c\u6570\u59cb\u7ec8\u4fdd\u6301\u5728\u7528\u6237\u5b9a\u4e49\u7684\u526f\u672c\u6570\uff0c\u5373\u5982\u679c\u6709\u5bb9\u5668\u5f02\u5e38\u9000\u51fa\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u65b0\u7684Pod\u6765\u4ee3\u66ff\uff0c\u800c\u5982\u679c\u5f02\u5e38\u591a\u51fa\u6765\u7684\u5bb9\u5668\u4e5f\u4f1a\u81ea\u52a8\u56de\u6536\u3002 \u5728\u65b0\u7248\u672c\u7684kubernetes\u4e2d\u5efa\u8bae\u4f7f\u7528ReplicaSet\u6765\u53d6\u4ee3ReplicationControlle ReplicaSet\u8ddfReplicationController\u6ca1\u6709\u672c\u8d28\u7684\u4e0d\u540c\uff0c\u53ea\u662f\u540d\u5b57\u4e0d\u4e00\u6837\uff0c\u5e76\u4e14ReplicaSet\u652f\u6301\u96c6\u5408\u5f0f\u7684selector \u867d\u7136ReplicaSet\u53ef\u4ee5\u72ec\u7acb\u4f7f\u7528\uff0c\u4f46\u4e00\u822c\u8fd8\u662f\u5efa\u8bae\u4f7f\u7528deployment\u6765\u81ea\u52a8\u7ba1\u7406ReplicaSet\uff0c\u8fd9\u6837\u5c31\u65e0\u9700\u62c5\u5fc3\u8ddf\u5176\u4ed6\u673a\u5236\u7684\u4e0d\u517c\u5bb9\u95ee\u9898\uff08\u6bd4\u5982ReplicaSet\u4e0d\u652f\u6301rolling-update\u4f46Deployment\u652f\u6301\uff09 Deployment\u539f\u7406 graph TB A(Deployment) --> |create| B[ReplicaSet RC] A(Deployment) --> |create| C[ReplicaSet RC] B[ReplicaSet RC]--> |create| D[Pod] B[ReplicaSet RC]--> |create| E[Pod] HPA\u539f\u7406 graph TB A(HPA cpu > 80/Max 10/Min 2) -->|monitor| B[RS] B[RS] --> C[v2] B[RS] --> D[v2] Statefullset \u7a33\u5b9a\u7684\u6301\u4e45\u5316\u5b58\u50a8\uff0c\u5373Pod\u91cd\u65b0\u8c03\u5ea6\u540e\u8fd8\u662f\u80fd\u8bbf\u95ee\u5230\u76f8\u540c\u7684\u6301\u4e45\u5316\u6570\u636e\uff0c\u57fa\u4e8ePVC\u6765\u5b9e\u73b0 \u7a33\u5b9a\u7684\u7f51\u7edc\u6807\u5fd7\uff0c\u5373Pod\u91cd\u65b0\u8c03\u5ea6\u540e\u5176PodName\u548cHostName\u4e0d\u53d8\uff0c\u57fa\u4e8eHeadless Service\uff08\u5373\u6ca1\u6709Cluster IP \u7684 Service\uff09\u6765\u5b9e\u73b0 \u6709\u5e8f\u90e8\u7f72\uff0c\u6709\u5e8f\u6269\u5c55\uff0c\u5373Pod\u662f\u6709\u987a\u5e8f\u7684\uff0c\u5728\u90e8\u7f72\u6216\u8005\u6269\u5c55\u7684\u65f6\u5019\u8981\u4f9d\u636e\u5b9a\u4e49\u7684\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\uff08\u5373\u4ece0\u5230N-1\uff0c\u5728\u4e0b\u4e00\u4e2aPod\u8fd0\u884c\u4e4b\u524d\u6240\u6709\u4e4b\u524d\u5230Pod\u5fc5\u987b\u662fRunning\u548cReady\u72b6\u6001\uff09\uff0c\u57fa\u4e8einit containers\u6765\u5b9e\u73b0 \u6709\u5e8f\u6536\u7f29\uff0c\u6709\u5e8f\u5220\u9664\uff08\u5373\u4eceN-1\u52300\uff09 Daemonset \u8fd0\u884c\u96c6\u7fa4\u5b58\u50a8daemon\uff0c\u4f8b\u5982\u5728\u6bcf\u4e2aNode\u4e0a\u8fd0\u884cglistered\u3001ceph \u5728\u6bcf\u4e2aNode\u4e0a\u8fd0\u884c\u65e5\u5fd7\u641c\u96c6daemon\uff0c\u4f8b\u5982fluent\u3001logstash \u5728\u6bcf\u4e2aNode\u4e0a\u8fd0\u884c\u76d1\u63a7daemon\uff0c\u4f8b\u5982Prometheus Node Exporter Job \u3001Cronjob Job \u8d1f\u8d23\u6279\u5904\u7406\u4efb\u52a1\uff0c\u5373\u4ec5\u6267\u884c\u4e00\u6b21\u7684\u4efb\u52a1\uff0c\u4ed6\u4fdd\u8bc1\u6279\u5904\u7406\u4efb\u52a1\u7684\u4e00\u4e2a\u6216\u591a\u4e2aPod\u6210\u529f\u7ed3\u675f Cron Job \u7ba1\u7406\u57fa\u4e8e\u65f6\u95f4\u7684Job\uff0c\u5373\uff1a \u5728\u7ed9\u5b9a\u65f6\u95f4\u70b9\u53ea\u8fd0\u884c\u4e00\u6b21 \u5468\u671f\u6027\u5730\u5728\u7ed9\u5b9a\u65f6\u95f4\u70b9\u8fd0\u884c \u670d\u52a1\u53d1\u73b0 service \uff08\u7528\u4e8e\u5ba2\u6237\u7aef\u8bbf\u95ee\u4e00\u7ec4Pod\u5165\u53e3\uff09 \u5177\u6709\u76f8\u540c\u70b9\uff0c\u5982\u540c\u4e00\u4e2aRs\u3001Rc\u3001Deployment\u3001\u6216\u8005\u62e5\u6709\u540c\u4e00\u7ec4\u6807\u7b7e \u62e5\u6709\u81ea\u5df1\u7684IP:Port \u4f7f\u7528RR\u8f6e\u8be2\u7684\u65b9\u5f0f\u5b58\u5728 Coredns :\u53ef\u4ee5\u4e3a\u96c6\u7fa4\u4e2d\u7684svc\u521b\u5efa\u4e00\u4e2a\u57df\u540dIP\u7684\u5bf9\u5e94\u89e3\u6790\u5173\u7cfb Ingress controller\uff1a\u5b98\u65b9\u5b9e\u73b0\u56db\u5c42\u4ee3\u7406\uff0cingress \u5b9e\u73b0\u4e03\u5c42\u4ee3\u7406 Prometheus \uff1a\u63d0\u4f9bk8s\u96c6\u7fa4\u76d1\u63a7 Dashboard \uff1a\u7ed9k8s\u96c6\u7fa4\u63d0\u4f9b\u4e00\u4e2aB/S\u7ed3\u6784\u8bbf\u95ee Federation \uff1a\u63d0\u4f9b\u4e00\u4e2a\u53ef\u4ee5\u8de8\u96c6\u7fa4\u4e2d\u5fc3\u591a\u4e2ak8s\u7edf\u4e00\u7ba1\u7406\u529f\u80fd EFK\uff1a\u63d0\u4f9bk8s\u96c6\u7fa4\u65e5\u5fd7\u7edf\u4e00\u5206\u6790\u4ecb\u5165\u5e73\u53f0","title":"02 \u7ec4\u4ef6\u8bf4\u660e"},{"location":"DevOps/15%20Kubernetes/03%20Kubernetes%20resource%20list/","text":"\u8d44\u6e90\u6e05\u5355 \u00b6 \u8d44\u6e90\u6e05\u5355\u5206\u7c7b \u00b6 \u540d\u79f0\u7a7a\u95f4\u7ea7\u522b\uff1akubeadm k8s kube-system(\u53ea\u5728\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\u4e0b\u751f\u6548\uff0c\u9ed8\u8ba4\u4e3adefault) \u5de5\u4f5c\u8d1f\u8f7d\u578b\u8d44\u6e90\uff08workload\uff09: pod\u3001replicaset\u3001deployment\u3001statefulset\u3001daemonset\u3001job\u3001cronjob \u670d\u52a1\u53d1\u73b0\u53ca\u8d1f\u8f7d\u5747\u8861\u578b\u8d44\u6e90(ServiceDiscovery Loadbalance):service\u3001ingress \u914d\u7f6e\u4e0e\u5b58\u50a8\u578b\u8d44\u6e90: Volume(\u5b58\u50a8\u5377)\u3001csi(\u5bb9\u5668\u63a5\u53e3\uff0c\u53ef\u4ee5\u6269\u5c55\u5404\u79cd\u5404\u6837\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\u5377) \u7279\u6b8a\u7c7b\u578b\u7684\u5b58\u50a8\u5377:configmap(\u5f53\u914d\u7f6e\u4e2d\u5fc3\u6765\u4f7f\u7528\u7684\u8d44\u6e90\u7c7b\u578b)\u3001secert(\u4fdd\u5b58\u654f\u611f\u6570\u636e)\u3001downwardapi(\u628a\u5916\u90e8\u73af\u5883\u4e2d\u7684\u4fe1\u606f\u8f93\u51fa\u7ed9\u5bb9\u5668) \u96c6\u7fa4\u7ea7\u522b\uff1arole \uff08\u5168\u96c6\u7fa4\u4e2d\u90fd\u53ef\u89c1\uff09 namespace\u3001node\u3001clusterrole\u3001rolebinding\u3001clusterrolebinding \u5143\u6570\u636e\u578b\uff1ahpa \uff08\u901a\u8fc7\u6307\u6807\u8fdb\u884c\u5e73\u6ed1\u6269\u5c55\uff09 hap\u3001podtemplate\u3001limitrange Pod \u751f\u547d\u5468\u671f \u00b6 \u542f\u52a8\u8fc7\u7a0b pause create\uff08\u7528\u4e8e\u5bb9\u5668\u7f51\u7edc\u5b58\u50a8\u7b49\u8d44\u6e90\u5171\u4eab\uff09,\u7f51\u7edc\u3001\u6570\u636e\u5377\u542f\u52a8 initC \u53ea\u662f\u521d\u59cb\u5316\u64cd\u4f5c\u5b8c\u6210\u540e\u91ca\u653e \u53ef\u4ee5\u6709\u591a\u4e2ainitC initC \u5bb9\u5668\u603b\u662f\u8fd0\u884c\u5230\u6210\u529f\u5b8c\u4e3a\u6b62 \u6bcf\u4e2ainit\u5bb9\u5668\u90fd\u5fc5\u987b\u5728\u4e0b\u4e00\u4e2ainit\u5bb9\u5668\u542f\u52a8\u4e4b\u524d\u6210\u529f\u5b8c\u6210 \u5982\u679cinit\u5931\u8d25\u4f1a\u4e00\u76f4\u91cd\u542f\uff0c\u5982\u679cPod\u5bf9\u5e94\u7684restartPolicy\u4e3aNerver\uff0c\u5b83\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\uff08\u9ed8\u8ba4\u4e3aalways\uff09 \u5bf9init\u5bb9\u5668\u4fee\u6539image\u5b57\u6bb5Pod\u4f1a\u91cd\u65b0\u542f\u52a8\uff0c\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5\u65e0\u6548\u3002 init \u5177\u6709\u5e94\u7528\u5bb9\u5668\u7684\u6240\u6709\u5b57\u6bb5\uff0c readiness \u3001*liveness*\u9664\u5916 \u6bcf\u4e2aapp \u548cinit \u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684 Main C \u8fd0\u884c \u5bb9\u5668\u8fd0\u884c\u4e4b\u524d\u548c\u7ed3\u675f\u6709 start \u3001stop \u5b8c\u6210\u7684\u6307\u4ee4\u64cd\u4f5c \u63a2\u9488\uff1a**readiness**\u5c31\u7eea\u68c0\u6d4b\u3001**liveness**\u751f\u5b58\u68c0\u6d4b\uff08kubelet\u5bf9\u5bb9\u5668\u7684\u5b9a\u671f\u8bca\u65ad\uff09 \u200b Readiness \u68c0\u6d4b\u6210\u529f\u540e\u5bb9\u5668\u7684\u72b6\u6001\u53d8\u66f4\uff08\u53ef\u8fdb\u884c\u5ef6\u8fdf\u68c0\u6d4b,\u59825s\u540e\u8fdb\u884c\uff09 \u4e09\u79cd\u7c7b\u578b\u5904\u7406\u7a0b\u5e8f ExecAction\uff1a\u5728\u5bb9\u5668\u4e2d\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002\u5982\u679c\u547d\u4ee4\u9000\u51fa\u65f6\u8fd4\u56de\u7801\u4e3a0\u5219\u8ba4\u4e3a\u8bca\u65ad\u6210\u529f\u3002 TcpSocketAction\uff1a\u5bf9\u6307\u5b9a\u7aef\u53e3\u4e0a\u7684\u5bb9\u5668\u7684IP\u5730\u5740\u8fdb\u884cTcp\u68c0\u67e5\u3002\u5982\u679c\u7aef\u53e3\u6253\u5f00\uff0c\u5219\u8bca\u65ad\u6210\u529f\u3002 HttpGetAction\uff1a\u5bf9\u6307\u5b9a\u7aef\u53e3\u548c\u8def\u5f84\u4e0a\u7684\u5bb9\u5668IP\u5730\u5740\u6267\u884cHttp Get\u8bf7\u6c42\u3002\u5982\u679c\u76f8\u5e94\u7684\u72b6\u6001\u7801\u5927\u4e8e\u7b49\u4e8e200\u4e14\u5c0f\u4e8e400\uff0c\u5219\u8bca\u65ad\u6210\u529f\u3002 \u63a2\u9488\u4e09\u79cd\u7ed3\u679c \u6210\u529f\uff1a\u901a\u8fc7\u8bca\u65ad \u5931\u8d25\uff1a\u672a\u901a\u8fc7\u8bca\u65ad \u4f4d\u7f6e\uff1a\u8bca\u65ad\u5931\u8d25\uff0c\u4e0d\u4f1a\u91c7\u53d6\u4efb\u4f55\u884c\u52a8","title":"03 \u8d44\u6e90\u6e05\u5355"},{"location":"DevOps/15%20Kubernetes/03%20Kubernetes%20resource%20list/#_1","text":"","title":"\u8d44\u6e90\u6e05\u5355"},{"location":"DevOps/15%20Kubernetes/03%20Kubernetes%20resource%20list/#_2","text":"\u540d\u79f0\u7a7a\u95f4\u7ea7\u522b\uff1akubeadm k8s kube-system(\u53ea\u5728\u7279\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\u4e0b\u751f\u6548\uff0c\u9ed8\u8ba4\u4e3adefault) \u5de5\u4f5c\u8d1f\u8f7d\u578b\u8d44\u6e90\uff08workload\uff09: pod\u3001replicaset\u3001deployment\u3001statefulset\u3001daemonset\u3001job\u3001cronjob \u670d\u52a1\u53d1\u73b0\u53ca\u8d1f\u8f7d\u5747\u8861\u578b\u8d44\u6e90(ServiceDiscovery Loadbalance):service\u3001ingress \u914d\u7f6e\u4e0e\u5b58\u50a8\u578b\u8d44\u6e90: Volume(\u5b58\u50a8\u5377)\u3001csi(\u5bb9\u5668\u63a5\u53e3\uff0c\u53ef\u4ee5\u6269\u5c55\u5404\u79cd\u5404\u6837\u7684\u7b2c\u4e09\u65b9\u5b58\u50a8\u5377) \u7279\u6b8a\u7c7b\u578b\u7684\u5b58\u50a8\u5377:configmap(\u5f53\u914d\u7f6e\u4e2d\u5fc3\u6765\u4f7f\u7528\u7684\u8d44\u6e90\u7c7b\u578b)\u3001secert(\u4fdd\u5b58\u654f\u611f\u6570\u636e)\u3001downwardapi(\u628a\u5916\u90e8\u73af\u5883\u4e2d\u7684\u4fe1\u606f\u8f93\u51fa\u7ed9\u5bb9\u5668) \u96c6\u7fa4\u7ea7\u522b\uff1arole \uff08\u5168\u96c6\u7fa4\u4e2d\u90fd\u53ef\u89c1\uff09 namespace\u3001node\u3001clusterrole\u3001rolebinding\u3001clusterrolebinding \u5143\u6570\u636e\u578b\uff1ahpa \uff08\u901a\u8fc7\u6307\u6807\u8fdb\u884c\u5e73\u6ed1\u6269\u5c55\uff09 hap\u3001podtemplate\u3001limitrange","title":"\u8d44\u6e90\u6e05\u5355\u5206\u7c7b"},{"location":"DevOps/15%20Kubernetes/03%20Kubernetes%20resource%20list/#pod","text":"\u542f\u52a8\u8fc7\u7a0b pause create\uff08\u7528\u4e8e\u5bb9\u5668\u7f51\u7edc\u5b58\u50a8\u7b49\u8d44\u6e90\u5171\u4eab\uff09,\u7f51\u7edc\u3001\u6570\u636e\u5377\u542f\u52a8 initC \u53ea\u662f\u521d\u59cb\u5316\u64cd\u4f5c\u5b8c\u6210\u540e\u91ca\u653e \u53ef\u4ee5\u6709\u591a\u4e2ainitC initC \u5bb9\u5668\u603b\u662f\u8fd0\u884c\u5230\u6210\u529f\u5b8c\u4e3a\u6b62 \u6bcf\u4e2ainit\u5bb9\u5668\u90fd\u5fc5\u987b\u5728\u4e0b\u4e00\u4e2ainit\u5bb9\u5668\u542f\u52a8\u4e4b\u524d\u6210\u529f\u5b8c\u6210 \u5982\u679cinit\u5931\u8d25\u4f1a\u4e00\u76f4\u91cd\u542f\uff0c\u5982\u679cPod\u5bf9\u5e94\u7684restartPolicy\u4e3aNerver\uff0c\u5b83\u4e0d\u4f1a\u91cd\u65b0\u542f\u52a8\uff08\u9ed8\u8ba4\u4e3aalways\uff09 \u5bf9init\u5bb9\u5668\u4fee\u6539image\u5b57\u6bb5Pod\u4f1a\u91cd\u65b0\u542f\u52a8\uff0c\u4fee\u6539\u5176\u4ed6\u5b57\u6bb5\u65e0\u6548\u3002 init \u5177\u6709\u5e94\u7528\u5bb9\u5668\u7684\u6240\u6709\u5b57\u6bb5\uff0c readiness \u3001*liveness*\u9664\u5916 \u6bcf\u4e2aapp \u548cinit \u540d\u79f0\u5fc5\u987b\u662f\u552f\u4e00\u7684 Main C \u8fd0\u884c \u5bb9\u5668\u8fd0\u884c\u4e4b\u524d\u548c\u7ed3\u675f\u6709 start \u3001stop \u5b8c\u6210\u7684\u6307\u4ee4\u64cd\u4f5c \u63a2\u9488\uff1a**readiness**\u5c31\u7eea\u68c0\u6d4b\u3001**liveness**\u751f\u5b58\u68c0\u6d4b\uff08kubelet\u5bf9\u5bb9\u5668\u7684\u5b9a\u671f\u8bca\u65ad\uff09 \u200b Readiness \u68c0\u6d4b\u6210\u529f\u540e\u5bb9\u5668\u7684\u72b6\u6001\u53d8\u66f4\uff08\u53ef\u8fdb\u884c\u5ef6\u8fdf\u68c0\u6d4b,\u59825s\u540e\u8fdb\u884c\uff09 \u4e09\u79cd\u7c7b\u578b\u5904\u7406\u7a0b\u5e8f ExecAction\uff1a\u5728\u5bb9\u5668\u4e2d\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002\u5982\u679c\u547d\u4ee4\u9000\u51fa\u65f6\u8fd4\u56de\u7801\u4e3a0\u5219\u8ba4\u4e3a\u8bca\u65ad\u6210\u529f\u3002 TcpSocketAction\uff1a\u5bf9\u6307\u5b9a\u7aef\u53e3\u4e0a\u7684\u5bb9\u5668\u7684IP\u5730\u5740\u8fdb\u884cTcp\u68c0\u67e5\u3002\u5982\u679c\u7aef\u53e3\u6253\u5f00\uff0c\u5219\u8bca\u65ad\u6210\u529f\u3002 HttpGetAction\uff1a\u5bf9\u6307\u5b9a\u7aef\u53e3\u548c\u8def\u5f84\u4e0a\u7684\u5bb9\u5668IP\u5730\u5740\u6267\u884cHttp Get\u8bf7\u6c42\u3002\u5982\u679c\u76f8\u5e94\u7684\u72b6\u6001\u7801\u5927\u4e8e\u7b49\u4e8e200\u4e14\u5c0f\u4e8e400\uff0c\u5219\u8bca\u65ad\u6210\u529f\u3002 \u63a2\u9488\u4e09\u79cd\u7ed3\u679c \u6210\u529f\uff1a\u901a\u8fc7\u8bca\u65ad \u5931\u8d25\uff1a\u672a\u901a\u8fc7\u8bca\u65ad \u4f4d\u7f6e\uff1a\u8bca\u65ad\u5931\u8d25\uff0c\u4e0d\u4f1a\u91c7\u53d6\u4efb\u4f55\u884c\u52a8","title":"Pod \u751f\u547d\u5468\u671f"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/","text":"\u96c6\u7fa4\u5b89\u88c5 \u00b6 \u914d\u7f6e\u4e3b\u673a\u540d\u53cahosts \u00b6 hostnamectl set-hostname k8s-master01 \u5b89\u88c5\u4f9d\u8d56\u5305 \u00b6 yum install -y conntrack ntpdate ntp ipavsadm ipset jq iptables curl sysstat libseccomp wget vim net-tools git \u8bbe\u7f6e\u9632\u706b\u5899\u4e3aiptables\u5e76\u8bbe\u7f6e\u7a7a\u89c4\u5219 \u00b6 systemctl stop firewalld && systemctl disable firewalld yum -y install iptables-services && systemctl start iptables && systemctl enable iptables && iptables -F && service iptables save \u5173\u95edselinux \u00b6 swapoff -a && sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab ( \u6d4b\u8bd5\u672a\u751f\u6548 ) \u8c03\u6574\u5185\u6838\u53c2\u6570\uff0c\u5bf9\u4e8ek8s \u00b6 cat > kubernetes.conf <<EOF #\u5f00\u542f\u7f51\u6865\u6a21\u5f0f net.bridge.bridge-nf-call-iptables = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.ipv4.ip_forward=1 net.ipv4.tcp_tw_recycle=0 # \u7981\u6b62\u4f7f\u7528swap\u7a7a\u95f4\u53ea\u6709\u5f53\u7cfb\u7edfoom\u65f6\u624d\u4f7f\u7528\u5b83 vm.swappiness=0 # \u4e0d\u68c0\u67e5\u7269\u7406\u5185\u5b58\u662f\u5426\u591f\u7528 vm.overcommit_memory=1 # \u5f00\u542foom vm.panic_on_oom=0 fs.inotify.max_user_instances=8192 fs.inotify.max_user_watches=1048576 fs.file-max=52706963 fs.nr_open=52706963 # \u5173\u95edipv6\u534f\u8bae net.ipv6.conf.all.disable_ipv6=1 net.netfilter.nf_conntrack_max=2310270 EOF cp kubernetes.conf /etc/sysctl.d/kubernetes.conf sysctl -p /etc/sysctl.d/kubernetes.conf \u8c03\u6574\u7cfb\u7edf\u65f6\u533a \u00b6 # \u8bbe\u7f6e\u7cfb\u7edf\u65f6\u533a\u4e3a\u4e2d\u56fd/\u4e0a\u6d77 timedatectl set-timezone Asia/Shanghai # \u5c06\u5f53\u524d\u7684UTC\u65f6\u95f4\u5199\u5165\u786c\u4ef6\u65f6\u949f timedatectl set-local-rtc 0 # \u91cd\u542f\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u65f6\u95f4\u7684\u670d\u52a1 systemctl restart rsyslog systemctl restart crond \u5173\u95ed\u7cfb\u7edf\u4e0d\u9700\u8981\u7684\u670d\u52a1 \u00b6 systemctl stop postfix && systemctl disable postfix \u8bbe\u7f6ersyslogd\u548csystemd journald \u00b6 mkdir /var/log/journal # \u6301\u4e45\u5316\u4fdd\u5b58\u65e5\u5fd7\u7684\u76ee\u5f55 mkdir /etc/systemd/journald.conf.d cat > /etc/systemd/journald.conf.d/99-prophet.conf << EOF [Journal] # \u6301\u4e45\u5316\u4fdd\u5b58\u5230\u78c1\u76d8 Storage=persistent # \u538b\u7f29\u5386\u53f2\u65e5\u5fd7 SyncIntervalSec=5m RateLimitInterval=30s RateLimitBurst=1000 # \u6700\u5927\u7a7a\u95f4\u5360\u752810G SystemMaxUse=10G # \u5355\u65e5\u5fd7\u6587\u4ef6\u6700\u5927 200M SystemMaxFileSize=200M # \u65e5\u5fd7\u4fdd\u5b58\u65f6\u95f42\u5468 MaxRetentionSec=2week # \u4e0d\u5c06\u65e5\u5fd7\u8f6c\u53d1\u5230syslog ForwardToSyslog=no EOF systemctl restart systemd-journald.service \u5347\u7ea7\u7cfb\u7edf\u5185\u6838\u4e3a4.44 \u00b6 rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm # \u5b89\u88c5\u5b8c\u6210\u540e\u68c0\u67e5 /boot/grub2/grub.cfg \u4e2d\u5bf9\u5e94\u5185\u6838menuentry \u4e2d\u662f\u5426\u5305\u542binitrd16\u914d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5728\u5b89\u88c5\u4e00\u6b21\uff01 yum --enablerepo = elrepo-kernel install -y kernel-lt # \u8bbe\u7f6e\u5f00\u673a\u4ece\u65b0\u5185\u6838\u542f\u52a8 grub2-set-default \"CentOS Linux (4.4.226-1.el7.elrepo.x86_64) 7 (Core)\" kube-proxy \u5f00\u542fipvs\u7684\u524d\u7f6e\u6761\u4ef6 \u00b6 modprobe br_netfilter cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 \u5b89\u88c5docker\u8f6f\u4ef6 \u00b6 # step 1: \u5b89\u88c5\u5fc5\u8981\u7684\u4e00\u4e9b\u7cfb\u7edf\u5de5\u5177 yum install -y yum-utils device-mapper-persistent-data lvm2 # Step 2: \u6dfb\u52a0\u8f6f\u4ef6\u6e90\u4fe1\u606f yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # Step 3: \u66f4\u65b0\u5e76\u5b89\u88c5Docker-CE yum makecache fast yum -y install docker-ce # Step 4: \u5f00\u542fDocker\u670d\u52a1 service docker start tee /etc/docker/daemon.json <<-'EOF' { \"exec-opts\": [\"native.cgroupdriver=systemd\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"registry-mirrors\": [\"https://ribhvzyz.mirror.aliyuncs.com\"], \"insecure-registries\": [\"https://xxx.com\"] } EOF mkdir -p /etc/systemd/system/docker.service.d systemctl daemon-reload && systemctl restart docker && systemctl enable docker kubeadm(\u4e3b\u4ece\u914d\u7f6e) \u00b6 cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/ enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF setenforce 0 yum install -y kubelet kubeadm kubectl systemctl enable kubelet && systemctl start kubelet \u521d\u59cb\u5316\u4e3b\u8282\u70b9 \u00b6 kubeadm config print init-defaults > kubeadm-config.yaml localAPIEndpoint: advertiseAddress: 172 .19.5.110 kubernetesVersion: v1.18.0 networking: dnsDomain: cluster.local podSubnet: \"10.244.0.0/16\" serviceSubnet: 10 .96.0.0/12 --- apiVersion: kubeadm.k8s.io/v1beta2 kind: KubeProxyConfiguration featureGates: SupportIPVSProxyMode: true mode: ipvs kubeadm init --config = kubeadm-config.yaml --upload-certs | tee kubeadm-init.log \u521d\u59cb\u5316\u5b8c\u4e4b\u540e \u00b6 node \u00b6 [ root@vpc ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE k8s.gcr.io/kube-proxy v1.18.0 43940c34f24f 2 months ago 117MB k8s.gcr.io/kube-apiserver v1.18.0 74060cea7f70 2 months ago 173MB k8s.gcr.io/kube-controller-manager v1.18.0 d3e55153f52f 2 months ago 162MB k8s.gcr.io/kube-scheduler v1.18.0 a31f78c7c8ce 2 months ago 95 .3MB k8s.gcr.io/pause 3 .2 80d28bedfe5d 3 months ago 683kB k8s.gcr.io/coredns 1 .6.7 67da37a9a360 4 months ago 43 .8MB k8s.gcr.io/etcd 3 .4.3-0 303ce5db0e90 7 months ago 288MB pod \u00b6 [ root@vpc ~ ] # kubectl get pod -n kube-system NAME READY STATUS RESTARTS AGE coredns-66bff467f8-dkhbb 0 /1 Pending 0 14m coredns-66bff467f8-vrnpp 0 /1 Pending 0 14m etcd-vpc 1 /1 Running 0 14m kube-apiserver-vpc 1 /1 Running 0 14m kube-controller-manager-vpc 1 /1 Running 0 14m kube-proxy-x4xls 1 /1 Running 0 14m kube-scheduler-vpc 1 /1 Running 0 14m \u90e8\u7f72\u7f51\u7edc \u00b6 wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml kubectl create -f kube-flannel.yml kubectl get pod -n kube-system ( \u67e5\u770bflannel\u662f\u5426\u6210\u529f ) ## \u6b64\u65f6k8s node\u8282\u70b9\u72b6\u6001\u53d8\u4e3a\u4e86 Ready [ root@vpc flannel ] # kubectl get node NAME STATUS ROLES AGE VERSION vpc Ready master 21m v1.18.3 \u95ee\u9898 \u00b6 sysctl: cannot stat /proc/sys/net/bridge/bridge-nf-call-iptables: \u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55 modprobe br_netfilter","title":"04 \u96c6\u7fa4\u5b89\u88c5"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_1","text":"","title":"\u96c6\u7fa4\u5b89\u88c5"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#hosts","text":"hostnamectl set-hostname k8s-master01","title":"\u914d\u7f6e\u4e3b\u673a\u540d\u53cahosts"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_2","text":"yum install -y conntrack ntpdate ntp ipavsadm ipset jq iptables curl sysstat libseccomp wget vim net-tools git","title":"\u5b89\u88c5\u4f9d\u8d56\u5305"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#iptables","text":"systemctl stop firewalld && systemctl disable firewalld yum -y install iptables-services && systemctl start iptables && systemctl enable iptables && iptables -F && service iptables save","title":"\u8bbe\u7f6e\u9632\u706b\u5899\u4e3aiptables\u5e76\u8bbe\u7f6e\u7a7a\u89c4\u5219"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#selinux","text":"swapoff -a && sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab ( \u6d4b\u8bd5\u672a\u751f\u6548 )","title":"\u5173\u95edselinux"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#k8s","text":"cat > kubernetes.conf <<EOF #\u5f00\u542f\u7f51\u6865\u6a21\u5f0f net.bridge.bridge-nf-call-iptables = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.ipv4.ip_forward=1 net.ipv4.tcp_tw_recycle=0 # \u7981\u6b62\u4f7f\u7528swap\u7a7a\u95f4\u53ea\u6709\u5f53\u7cfb\u7edfoom\u65f6\u624d\u4f7f\u7528\u5b83 vm.swappiness=0 # \u4e0d\u68c0\u67e5\u7269\u7406\u5185\u5b58\u662f\u5426\u591f\u7528 vm.overcommit_memory=1 # \u5f00\u542foom vm.panic_on_oom=0 fs.inotify.max_user_instances=8192 fs.inotify.max_user_watches=1048576 fs.file-max=52706963 fs.nr_open=52706963 # \u5173\u95edipv6\u534f\u8bae net.ipv6.conf.all.disable_ipv6=1 net.netfilter.nf_conntrack_max=2310270 EOF cp kubernetes.conf /etc/sysctl.d/kubernetes.conf sysctl -p /etc/sysctl.d/kubernetes.conf","title":"\u8c03\u6574\u5185\u6838\u53c2\u6570\uff0c\u5bf9\u4e8ek8s"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_3","text":"# \u8bbe\u7f6e\u7cfb\u7edf\u65f6\u533a\u4e3a\u4e2d\u56fd/\u4e0a\u6d77 timedatectl set-timezone Asia/Shanghai # \u5c06\u5f53\u524d\u7684UTC\u65f6\u95f4\u5199\u5165\u786c\u4ef6\u65f6\u949f timedatectl set-local-rtc 0 # \u91cd\u542f\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u65f6\u95f4\u7684\u670d\u52a1 systemctl restart rsyslog systemctl restart crond","title":"\u8c03\u6574\u7cfb\u7edf\u65f6\u533a"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_4","text":"systemctl stop postfix && systemctl disable postfix","title":"\u5173\u95ed\u7cfb\u7edf\u4e0d\u9700\u8981\u7684\u670d\u52a1"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#rsyslogdsystemd-journald","text":"mkdir /var/log/journal # \u6301\u4e45\u5316\u4fdd\u5b58\u65e5\u5fd7\u7684\u76ee\u5f55 mkdir /etc/systemd/journald.conf.d cat > /etc/systemd/journald.conf.d/99-prophet.conf << EOF [Journal] # \u6301\u4e45\u5316\u4fdd\u5b58\u5230\u78c1\u76d8 Storage=persistent # \u538b\u7f29\u5386\u53f2\u65e5\u5fd7 SyncIntervalSec=5m RateLimitInterval=30s RateLimitBurst=1000 # \u6700\u5927\u7a7a\u95f4\u5360\u752810G SystemMaxUse=10G # \u5355\u65e5\u5fd7\u6587\u4ef6\u6700\u5927 200M SystemMaxFileSize=200M # \u65e5\u5fd7\u4fdd\u5b58\u65f6\u95f42\u5468 MaxRetentionSec=2week # \u4e0d\u5c06\u65e5\u5fd7\u8f6c\u53d1\u5230syslog ForwardToSyslog=no EOF systemctl restart systemd-journald.service","title":"\u8bbe\u7f6ersyslogd\u548csystemd journald"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#444","text":"rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm # \u5b89\u88c5\u5b8c\u6210\u540e\u68c0\u67e5 /boot/grub2/grub.cfg \u4e2d\u5bf9\u5e94\u5185\u6838menuentry \u4e2d\u662f\u5426\u5305\u542binitrd16\u914d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5728\u5b89\u88c5\u4e00\u6b21\uff01 yum --enablerepo = elrepo-kernel install -y kernel-lt # \u8bbe\u7f6e\u5f00\u673a\u4ece\u65b0\u5185\u6838\u542f\u52a8 grub2-set-default \"CentOS Linux (4.4.226-1.el7.elrepo.x86_64) 7 (Core)\"","title":"\u5347\u7ea7\u7cfb\u7edf\u5185\u6838\u4e3a4.44"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#kube-proxy-ipvs","text":"modprobe br_netfilter cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 EOF chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4","title":"kube-proxy \u5f00\u542fipvs\u7684\u524d\u7f6e\u6761\u4ef6"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#docker","text":"# step 1: \u5b89\u88c5\u5fc5\u8981\u7684\u4e00\u4e9b\u7cfb\u7edf\u5de5\u5177 yum install -y yum-utils device-mapper-persistent-data lvm2 # Step 2: \u6dfb\u52a0\u8f6f\u4ef6\u6e90\u4fe1\u606f yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # Step 3: \u66f4\u65b0\u5e76\u5b89\u88c5Docker-CE yum makecache fast yum -y install docker-ce # Step 4: \u5f00\u542fDocker\u670d\u52a1 service docker start tee /etc/docker/daemon.json <<-'EOF' { \"exec-opts\": [\"native.cgroupdriver=systemd\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"registry-mirrors\": [\"https://ribhvzyz.mirror.aliyuncs.com\"], \"insecure-registries\": [\"https://xxx.com\"] } EOF mkdir -p /etc/systemd/system/docker.service.d systemctl daemon-reload && systemctl restart docker && systemctl enable docker","title":"\u5b89\u88c5docker\u8f6f\u4ef6"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#kubeadm","text":"cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/ enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF setenforce 0 yum install -y kubelet kubeadm kubectl systemctl enable kubelet && systemctl start kubelet","title":"kubeadm(\u4e3b\u4ece\u914d\u7f6e)"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_5","text":"kubeadm config print init-defaults > kubeadm-config.yaml localAPIEndpoint: advertiseAddress: 172 .19.5.110 kubernetesVersion: v1.18.0 networking: dnsDomain: cluster.local podSubnet: \"10.244.0.0/16\" serviceSubnet: 10 .96.0.0/12 --- apiVersion: kubeadm.k8s.io/v1beta2 kind: KubeProxyConfiguration featureGates: SupportIPVSProxyMode: true mode: ipvs kubeadm init --config = kubeadm-config.yaml --upload-certs | tee kubeadm-init.log","title":"\u521d\u59cb\u5316\u4e3b\u8282\u70b9"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_6","text":"","title":"\u521d\u59cb\u5316\u5b8c\u4e4b\u540e"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#node","text":"[ root@vpc ~ ] # docker images REPOSITORY TAG IMAGE ID CREATED SIZE k8s.gcr.io/kube-proxy v1.18.0 43940c34f24f 2 months ago 117MB k8s.gcr.io/kube-apiserver v1.18.0 74060cea7f70 2 months ago 173MB k8s.gcr.io/kube-controller-manager v1.18.0 d3e55153f52f 2 months ago 162MB k8s.gcr.io/kube-scheduler v1.18.0 a31f78c7c8ce 2 months ago 95 .3MB k8s.gcr.io/pause 3 .2 80d28bedfe5d 3 months ago 683kB k8s.gcr.io/coredns 1 .6.7 67da37a9a360 4 months ago 43 .8MB k8s.gcr.io/etcd 3 .4.3-0 303ce5db0e90 7 months ago 288MB","title":"node"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#pod","text":"[ root@vpc ~ ] # kubectl get pod -n kube-system NAME READY STATUS RESTARTS AGE coredns-66bff467f8-dkhbb 0 /1 Pending 0 14m coredns-66bff467f8-vrnpp 0 /1 Pending 0 14m etcd-vpc 1 /1 Running 0 14m kube-apiserver-vpc 1 /1 Running 0 14m kube-controller-manager-vpc 1 /1 Running 0 14m kube-proxy-x4xls 1 /1 Running 0 14m kube-scheduler-vpc 1 /1 Running 0 14m","title":"pod"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_7","text":"wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml kubectl create -f kube-flannel.yml kubectl get pod -n kube-system ( \u67e5\u770bflannel\u662f\u5426\u6210\u529f ) ## \u6b64\u65f6k8s node\u8282\u70b9\u72b6\u6001\u53d8\u4e3a\u4e86 Ready [ root@vpc flannel ] # kubectl get node NAME STATUS ROLES AGE VERSION vpc Ready master 21m v1.18.3","title":"\u90e8\u7f72\u7f51\u7edc"},{"location":"DevOps/15%20Kubernetes/04%20Kubernetes%20cluster%20installation/#_8","text":"sysctl: cannot stat /proc/sys/net/bridge/bridge-nf-call-iptables: \u6ca1\u6709\u90a3\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55 modprobe br_netfilter","title":"\u95ee\u9898"},{"location":"DevOps/15%20Kubernetes/05%20Kubernetes%20change%20to%20ipvs%20proxy/","text":"\u52a0\u8f7d\u5185\u6838\u6a21\u5757 [ root@vpc kubeyml ] # lsmod|grep ip_vs ip_vs_sh 16384 0 ip_vs_wrr 16384 0 ip_vs_rr 16384 0 ip_vs 147456 6 ip_vs_rr,ip_vs_sh,ip_vs_wrr nf_conntrack 114688 9 ip_vs,nf_nat,nf_nat_ipv4,nf_nat_ipv6,xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_netlink,nf_conntrack_ipv4,nf_conntrack_ipv6 libcrc32c 16384 1 ip_vs \u5982\u679c\u6ca1\u6709\u5219\u52a0\u8f7d modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack_ipv4 \u66f4\u6539kube-proxy\u914d\u7f6e kubectl edit configmap kube-proxy -n kube-system \u627e\u5230\u5982\u4e0b\u90e8\u5206\uff0c\u5c06mode\u4e2d\u6dfb\u52a0ipvs\uff08\u6e90\u4e3a\u7a7a\uff09 bash kind: KubeProxyConfiguration metricsBindAddress: \"\" mode: \"\" nodePortAddresses: null \u5220\u9664\u6240\u6709kube-proxy\u7684pod kubectl delete pod kube-proxy-x4xls -n kube-system # \u5220\u9664\u65e7\u7684 kubectl get pod -n kube-system # \u67e5\u770b\u65b0\u7684 \u67e5\u770b\u65b0\u7684kube-proxy Pod\u65e5\u5fd7\uff0c\u5176\u4e2d\u7b2c\u4e8c\u884c\u663e\u793aUsing ipvs Proxier\u8868\u793a\u542f\u7528\uff0c\u6b64\u65f6\u67e5\u770bipvsadm\u89c4\u5219\u5df2\u5199\u5165 [ root@vpc kubeyml ] # kubectl logs kube-proxy-w75f6 -n kube-system I0607 16 :34:59.370458 1 node.go:136 ] Successfully retrieved node IP: 172 .19.5.110 I0607 16 :34:59.370513 1 server_others.go:259 ] Using ipvs Proxier. W0607 16 :34:59.371028 1 proxier.go:429 ] IPVS scheduler not specified, use rr by default I0607 16 :34:59.371303 1 server.go:583 ] Version: v1.18.0 I0607 16 :34:59.371657 1 conntrack.go:52 ] Setting nf_conntrack_max to 131072 I0607 16 :34:59.373386 1 config.go:315 ] Starting service config controller I0607 16 :34:59.373407 1 shared_informer.go:223 ] Waiting for caches to sync for service config I0607 16 :34:59.375054 1 config.go:133 ] Starting endpoints config controller I0607 16 :34:59.375073 1 shared_informer.go:223 ] Waiting for caches to sync for endpoints config I0607 16 :34:59.473612 1 shared_informer.go:230 ] Caches are synced for service config I0607 16 :34:59.477833 1 shared_informer.go:230 ] Caches are synced for endpoints config","title":"05 \u4fee\u6539ipvs\u4ee3\u7406"},{"location":"DevOps/15%20Kubernetes/06%20Kubernetes%20resource%20controller/","text":"\u63a7\u5236\u5668\u7c7b\u578b \u00b6 ReplicationController\u548cReplicaSet Deployment \u5c5e\u4e8e\u7533\u660e\u5f0f\u63a7\u5236\u5668\uff0c\u4f7f\u7528**apply**\u521b\u5efa \u521b\u5efa\u6d41\u7a0b Deploy \u521b\u5efars\uff08replicaSet\uff09 rs\u521b\u5efaPod \u6269\u5bb9 \u624b\u52a8\u6269\u5bb9 kubectl scale deployment nginx --replicas=10 hpa\u81ea\u52a8\u6269\u5bb9(horizontal pod autoscaling) kubectl autoscale deployment nginx --min=10 --max=15 --cpu-percent=80 \u66f4\u65b0\u955c\u50cf kubectl set image deployment/nginx nginx=registry.cn-shanghai.aliyuncs.com/callum_namespace/myapp:v1 \u7b56\u7565\uff1a\u53ef\u4ee5\u4fdd\u8bc1\u5728\u5347\u7ea7\u65f6\u6709\u4e00\u5b9a\u6570\u91cf\u7684Pod\u662fdown\u7684\u3002\u9ed8\u8ba4\u7684\u4ed6\u4f1a\u786e\u4fdd\u81f3\u5c11\u6709\u6bd4\u671f\u671b\u7684Pod\u6570\u91cf\u5c11\u4e00\u4e2a\u662fup\u72b6\u6001\uff08\u6700\u591a\u4e00\u4e2a\u4e0d\u53ef\u7528\uff09 \u65b0\u7684\u7248\u672c\u4e2d\u4ece1-1\u53d8\u621025%-25% \u56de\u6eda \u56de\u6eda\u4e0a\u4e00\u4e2a\u7248\u672c kubectl rollout undo deployment/nginx \u56de\u6eda\u6307\u5b9a\u7684\u7248\u672c kubectl rollout undo deployment/nginx --to-reverison=2 \u6682\u505c\u6eda\u52a8\u66f4\u65b0 kubectl rollout pause deployment/nginx \u67e5\u770b\u56de\u6eda\u65f6\u7684\u72b6\u6001 kubectl rollout status deployment nginx \u67e5\u770b\u5386\u53f2\u72b6\u6001 kubectl rollout history deployment/nginx \u7b56\u7565\uff1a\u591a\u4e2arollout\u5e76\u884c\uff0c\u5047\u8bbe\u67095\u4e2anginx:1.7.9 replica Deployment\uff0c\u521b\u5efa\u52303\u4e2a\u65f6\u53c8\u5f00\u59cb\u66f4\u884c\u542b\u67095\u4e2anginx:1.9.1 replica Deployment\uff0c\u6b64\u65f6Deployment \u4f1a\u7acb\u5373\u5220\u9664\uff0c\u5e76\u521b\u5efa\u65b0\u7684nginx:1.9.1Pod\uff0c\u4e0d\u4f1a\u7b49\u524d\u4e00\u4e2a\u521b\u5efa\u5b8c\u6210\u624d\u66f4\u65b0\u3002 \u6e05\u7406Policy \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e .spec.reversionHistoryLimit \u9879\u6765\u6307\u5b9aDeployment\u4fdd\u7559reversion\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u9ed8\u8ba4\u4f1a\u4fdd\u7559\u6240\u6709\u7684reversion,\u5982\u679c\u4e3a0 Deployment\u5c31\u4e0d\u5141\u8bb8\u56de\u6eda\u4e86 DaementSet StatefullSet \u521b\u5efastatefullSet \u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65e0\u5934\u670d\u52a1\uff08handless service[^clusterIP:None]\uff09 \u7ed3\u5408\u5b58\u50a8PVC\u5b9e\u9a8c\u6765\u770b \u5339\u914dPod name\uff08\u7f51\u7edc\u6807\u8bc6\uff09\u7684\u6a21\u5f0f\u4e3a\uff1a (statefullSet\u540d\u79f0)- (statefullSet\u540d\u79f0)- (\u5e8f\u53f7)\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u5b9e\u4f8b\uff1aweb-0,web-1,web-2 StatefullSet\u4e3a\u6bcf\u4e2aPod\u526f\u672c\u521b\u5efa\u4e86\u4e00\u4e2aDns\u57df\u540d\uff0c\u8fd9\u4e2a\u57df\u540d\u7684\u683c\u5f0f\u4e3a\uff1a$(podname).(handless server name),\u4e5f\u5c31\u662f\u610f\u5473\u7740\u670d\u52a1\u95f4\u662f\u901a\u8fc7Pod\u57df\u540d\u6765\u901a\u4fe1\u800c\u975ePod IP\uff0c\u56e0\u4e3a\u5f53Pod\u6240\u5728\u7684Node\u53d1\u751f\u6545\u969c\u65f6\uff0cPod\u4f1a\u88ab\u6f02\u79fb\u5230Node\u4e0a\uff0cPod IP\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u662fPod\u57df\u540d\u4e0d\u4f1a\u6709\u53d8\u5316 StatefullSet\u4f7f\u7528\u4e86Handless\u670d\u52a1\u6765\u63a7\u5236Pod\u7684\u57df\u540d\uff0c\u8fd9\u4e2a\u57df\u540d\u7684FQDN\u4e3a\uff1a(servicename).(namespace).svc.cluster.local \u5176\u4e2d\uff0c\"cluster.local\"\u6307\u7684\u662f\u96c6\u7fa4\u7684\u57df\u540d \u6839\u636evolumeClaimTemplates\uff0c\u4e3a\u6bcf\u4e2aPod\u521b\u5efa\u4e00\u4e2apvc\uff0cpvc\u7684\u547d\u540d\u89c4\u5219\u5339\u914d\u6a21\u5f0f\uff1a(volumeClaimTemplates.name)-(pod_name)\uff0c\u6bd4\u5982\u4e0a\u9762\u7684volumeMounts.name=www,Podname=web[0-2]\uff0c\u56e0\u6b64\u521b\u5efa\u51fa\u6765\u7684PVC\u662fwww-web-0\u3001www-web-1\u3001www-web-2 \u5220\u9664Pod\u4e0d\u4f1a\u5220\u9664\u5176PVC\uff0c\u624b\u52a8\u5220\u9664pvc\u5c06\u81ea\u52a8\u91ca\u653ePV Job/CronJob Cronjob \u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u8fd0\u884c\u4e00\u6b21 \u5468\u671f\u6027\u7684\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8fd0\u884c spec.template \u683c\u5f0f\u540cPod restartPolicy\u4ec5\u652f\u6301Never\u548cOnFailure \u5355\u4e2aPod\u65f6\uff0c\u9ed8\u8ba4Pod\u6210\u529f\u8fd0\u884c\u540eJob\u5373\u7ed3\u675f .spec.completions \u6807\u5fd7job\u7ed3\u675f\u9700\u8981\u6210\u529f\u8fd0\u884c\u7684Pod\u4e2a\u6570\uff0c\u9ed8\u8ba4\u4e3a1 .spec.parallelism \u6807\u5fd7\u5e76\u884c\u8fd0\u884c\u7684Pod\u7684\u4e2a\u6570\uff0c\u9ed8\u8ba4\u4e3a1 .spec.activeDeadlineSeconds \u6807\u5fd7\u5931\u8d25Pod\u7684\u91cd\u8bd5\u6700\u5927\u65f6\u95f4\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\u4e0d\u4f1a\u7ee7\u7eed\u91cd\u8bd5 .spec.schedule \u8c03\u5ea6\uff0c\u5fc5\u987b\u5b57\u6bb5\uff0c\u6307\u5b9a\u4efb\u52a1\u8fd0\u884c\u5468\u671f\uff0c\u683c\u5f0f\u540cCron .spec.jobTemplate Job\u6a21\u677f\uff0c\u5fc5\u987b\u5b57\u6bb5\uff0c\u6307\u5b9a\u9700\u8981\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u683c\u5f0f\u540cJob .spec.startingDeadlineSeconds \u542f\u52a8Job\u7684\u671f\u9650\uff08\u79d2\u7ea7\u522b\uff09\uff0c\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u56e0\u4e3a\u4efb\u4f55\u539f\u56e0\u800c\u9519\u8fc7\u4e86\u88ab\u8c03\u5ea6\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u9519\u8fc7\u6267\u884c\u65f6\u95f4\u7684Job\u5c06\u88ab\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u6ca1\u6709\u671f\u9650\u3002 .spec.concurrencyPolicy \u5e76\u53d1\u7b56\u7565\uff08\u53ef\u9009\uff09\uff0c\u4ed6\u6307\u5b9a\u4e86\u5982\u679c\u5904\u7406\u88abCronJob\u521b\u5efa\u7684Job\u7684\u5e76\u53d1\u6307\u5b9a\u3002\u53ea\u5141\u8bb8\u6307\u5b9a\u4e0b\u9762\u7b56\u7565\u7684\u4e00\u79cd\uff1a allow\uff08\u9ed8\u8ba4\uff09\uff1a\u5141\u8bb8\u5175\u6cd5\u8fd0\u884cJob Forbid\uff1a\u7981\u6b62\u5e76\u53d1\u8fd0\u884c\uff0c\u5982\u679c\u524d\u4e00\u4e2a\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\u4e0b\u4e00\u4e2a Replace :\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684Job\uff0c\u7528\u4e00\u4e2a\u65b0\u7684\u6765\u66ff\u6362 \u6ce8\u610f\uff1a\u5f53\u524d\u7b56\u7565\u53ea\u80fd\u5e94\u7528\u4e8e\u540c\u4e00\u4e2aCronJob\u521b\u5efa\u7684Job\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2aCronJob\uff0c\u4ed6\u4eec\u521b\u5efa\u7684Job\u4e4b\u95f4\u603b\u662f\u5141\u8bb8\u5e76\u53d1\u6267\u884c .spec.suspend :\u6302\u8d77\uff0c\u8be5\u5b57\u6bb5\u4e5f\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u540e\u7eed\u6240\u6709\u6267\u884c\u90fd\u4f1a\u88ab\u6302\u8d77\uff0c\u4ed6\u5bf9\u5df2\u7ecf\u5f00\u59cb\u7684Job\u4e0d\u8d77\u4f5c\u7528\u3002\u9ed8\u8ba4\u503c\u4e3afalse .spec.successfullJobHistoryLimit \u548c .spec.failesJobsHistoryLimit \uff1a\u5386\u53f2\u9650\u5236\uff08\u53ef\u9009\uff09\u3002\u4ed6\u4eec\u5236\u5b9a\u4e86\u53ef\u4ee5\u4fdd\u7559\u591a\u5c11\u5b8c\u6210\u548c\u5931\u8d25\u7684Job\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5206\u522b\u8bbe\u7f6e\u4e3a 3 \u548c 1.\u8bbe\u7f6e\u9650\u5236\u7684\u503c\u4e3a0\uff0c\u76f8\u5173\u7c7b\u578b\u7684Job\u5b8c\u6210\u540e\u5c06\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u5178\u578b\u7528\u6cd5 \u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8c03\u5ea6Job\u8fd0\u884c \u521b\u5efa\u5468\u671f\u6027\u7684\u8fd0\u884cJob\uff0c\u4f8b\u5982\uff1a\u6570\u636e\u5e93\u5907\u4efd\u3001\u53d1\u9001\u90ae\u4ef6 Horizontal Pod Aotuscaling \u4f5c\u4e3a\u4e00\u4e2a\u9644\u5c5e\u54c1\u65b9\u5f0f\u6765\u7ba1\u7406\u5176\u4ed6\u63a7\u5236\u5668 \u6839\u636e\u6570\u636e\u7c7b\u578b\u7684\u65b9\u5f0f\u6269\u5bb9\u7f29","title":"06 \u8d44\u6e90\u63a7\u5236\u5668"},{"location":"DevOps/15%20Kubernetes/06%20Kubernetes%20resource%20controller/#_1","text":"ReplicationController\u548cReplicaSet Deployment \u5c5e\u4e8e\u7533\u660e\u5f0f\u63a7\u5236\u5668\uff0c\u4f7f\u7528**apply**\u521b\u5efa \u521b\u5efa\u6d41\u7a0b Deploy \u521b\u5efars\uff08replicaSet\uff09 rs\u521b\u5efaPod \u6269\u5bb9 \u624b\u52a8\u6269\u5bb9 kubectl scale deployment nginx --replicas=10 hpa\u81ea\u52a8\u6269\u5bb9(horizontal pod autoscaling) kubectl autoscale deployment nginx --min=10 --max=15 --cpu-percent=80 \u66f4\u65b0\u955c\u50cf kubectl set image deployment/nginx nginx=registry.cn-shanghai.aliyuncs.com/callum_namespace/myapp:v1 \u7b56\u7565\uff1a\u53ef\u4ee5\u4fdd\u8bc1\u5728\u5347\u7ea7\u65f6\u6709\u4e00\u5b9a\u6570\u91cf\u7684Pod\u662fdown\u7684\u3002\u9ed8\u8ba4\u7684\u4ed6\u4f1a\u786e\u4fdd\u81f3\u5c11\u6709\u6bd4\u671f\u671b\u7684Pod\u6570\u91cf\u5c11\u4e00\u4e2a\u662fup\u72b6\u6001\uff08\u6700\u591a\u4e00\u4e2a\u4e0d\u53ef\u7528\uff09 \u65b0\u7684\u7248\u672c\u4e2d\u4ece1-1\u53d8\u621025%-25% \u56de\u6eda \u56de\u6eda\u4e0a\u4e00\u4e2a\u7248\u672c kubectl rollout undo deployment/nginx \u56de\u6eda\u6307\u5b9a\u7684\u7248\u672c kubectl rollout undo deployment/nginx --to-reverison=2 \u6682\u505c\u6eda\u52a8\u66f4\u65b0 kubectl rollout pause deployment/nginx \u67e5\u770b\u56de\u6eda\u65f6\u7684\u72b6\u6001 kubectl rollout status deployment nginx \u67e5\u770b\u5386\u53f2\u72b6\u6001 kubectl rollout history deployment/nginx \u7b56\u7565\uff1a\u591a\u4e2arollout\u5e76\u884c\uff0c\u5047\u8bbe\u67095\u4e2anginx:1.7.9 replica Deployment\uff0c\u521b\u5efa\u52303\u4e2a\u65f6\u53c8\u5f00\u59cb\u66f4\u884c\u542b\u67095\u4e2anginx:1.9.1 replica Deployment\uff0c\u6b64\u65f6Deployment \u4f1a\u7acb\u5373\u5220\u9664\uff0c\u5e76\u521b\u5efa\u65b0\u7684nginx:1.9.1Pod\uff0c\u4e0d\u4f1a\u7b49\u524d\u4e00\u4e2a\u521b\u5efa\u5b8c\u6210\u624d\u66f4\u65b0\u3002 \u6e05\u7406Policy \u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e .spec.reversionHistoryLimit \u9879\u6765\u6307\u5b9aDeployment\u4fdd\u7559reversion\u7684\u5386\u53f2\u8bb0\u5f55\uff0c\u9ed8\u8ba4\u4f1a\u4fdd\u7559\u6240\u6709\u7684reversion,\u5982\u679c\u4e3a0 Deployment\u5c31\u4e0d\u5141\u8bb8\u56de\u6eda\u4e86 DaementSet StatefullSet \u521b\u5efastatefullSet \u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65e0\u5934\u670d\u52a1\uff08handless service[^clusterIP:None]\uff09 \u7ed3\u5408\u5b58\u50a8PVC\u5b9e\u9a8c\u6765\u770b \u5339\u914dPod name\uff08\u7f51\u7edc\u6807\u8bc6\uff09\u7684\u6a21\u5f0f\u4e3a\uff1a (statefullSet\u540d\u79f0)- (statefullSet\u540d\u79f0)- (\u5e8f\u53f7)\uff0c\u6bd4\u5982\u4e0a\u9762\u7684\u5b9e\u4f8b\uff1aweb-0,web-1,web-2 StatefullSet\u4e3a\u6bcf\u4e2aPod\u526f\u672c\u521b\u5efa\u4e86\u4e00\u4e2aDns\u57df\u540d\uff0c\u8fd9\u4e2a\u57df\u540d\u7684\u683c\u5f0f\u4e3a\uff1a$(podname).(handless server name),\u4e5f\u5c31\u662f\u610f\u5473\u7740\u670d\u52a1\u95f4\u662f\u901a\u8fc7Pod\u57df\u540d\u6765\u901a\u4fe1\u800c\u975ePod IP\uff0c\u56e0\u4e3a\u5f53Pod\u6240\u5728\u7684Node\u53d1\u751f\u6545\u969c\u65f6\uff0cPod\u4f1a\u88ab\u6f02\u79fb\u5230Node\u4e0a\uff0cPod IP\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u4f46\u662fPod\u57df\u540d\u4e0d\u4f1a\u6709\u53d8\u5316 StatefullSet\u4f7f\u7528\u4e86Handless\u670d\u52a1\u6765\u63a7\u5236Pod\u7684\u57df\u540d\uff0c\u8fd9\u4e2a\u57df\u540d\u7684FQDN\u4e3a\uff1a(servicename).(namespace).svc.cluster.local \u5176\u4e2d\uff0c\"cluster.local\"\u6307\u7684\u662f\u96c6\u7fa4\u7684\u57df\u540d \u6839\u636evolumeClaimTemplates\uff0c\u4e3a\u6bcf\u4e2aPod\u521b\u5efa\u4e00\u4e2apvc\uff0cpvc\u7684\u547d\u540d\u89c4\u5219\u5339\u914d\u6a21\u5f0f\uff1a(volumeClaimTemplates.name)-(pod_name)\uff0c\u6bd4\u5982\u4e0a\u9762\u7684volumeMounts.name=www,Podname=web[0-2]\uff0c\u56e0\u6b64\u521b\u5efa\u51fa\u6765\u7684PVC\u662fwww-web-0\u3001www-web-1\u3001www-web-2 \u5220\u9664Pod\u4e0d\u4f1a\u5220\u9664\u5176PVC\uff0c\u624b\u52a8\u5220\u9664pvc\u5c06\u81ea\u52a8\u91ca\u653ePV Job/CronJob Cronjob \u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u8fd0\u884c\u4e00\u6b21 \u5468\u671f\u6027\u7684\u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8fd0\u884c spec.template \u683c\u5f0f\u540cPod restartPolicy\u4ec5\u652f\u6301Never\u548cOnFailure \u5355\u4e2aPod\u65f6\uff0c\u9ed8\u8ba4Pod\u6210\u529f\u8fd0\u884c\u540eJob\u5373\u7ed3\u675f .spec.completions \u6807\u5fd7job\u7ed3\u675f\u9700\u8981\u6210\u529f\u8fd0\u884c\u7684Pod\u4e2a\u6570\uff0c\u9ed8\u8ba4\u4e3a1 .spec.parallelism \u6807\u5fd7\u5e76\u884c\u8fd0\u884c\u7684Pod\u7684\u4e2a\u6570\uff0c\u9ed8\u8ba4\u4e3a1 .spec.activeDeadlineSeconds \u6807\u5fd7\u5931\u8d25Pod\u7684\u91cd\u8bd5\u6700\u5927\u65f6\u95f4\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u65f6\u95f4\u4e0d\u4f1a\u7ee7\u7eed\u91cd\u8bd5 .spec.schedule \u8c03\u5ea6\uff0c\u5fc5\u987b\u5b57\u6bb5\uff0c\u6307\u5b9a\u4efb\u52a1\u8fd0\u884c\u5468\u671f\uff0c\u683c\u5f0f\u540cCron .spec.jobTemplate Job\u6a21\u677f\uff0c\u5fc5\u987b\u5b57\u6bb5\uff0c\u6307\u5b9a\u9700\u8981\u8fd0\u884c\u7684\u4efb\u52a1\uff0c\u683c\u5f0f\u540cJob .spec.startingDeadlineSeconds \u542f\u52a8Job\u7684\u671f\u9650\uff08\u79d2\u7ea7\u522b\uff09\uff0c\u8be5\u5b57\u6bb5\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u56e0\u4e3a\u4efb\u4f55\u539f\u56e0\u800c\u9519\u8fc7\u4e86\u88ab\u8c03\u5ea6\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\u9519\u8fc7\u6267\u884c\u65f6\u95f4\u7684Job\u5c06\u88ab\u8ba4\u4e3a\u662f\u5931\u8d25\u7684\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5219\u6ca1\u6709\u671f\u9650\u3002 .spec.concurrencyPolicy \u5e76\u53d1\u7b56\u7565\uff08\u53ef\u9009\uff09\uff0c\u4ed6\u6307\u5b9a\u4e86\u5982\u679c\u5904\u7406\u88abCronJob\u521b\u5efa\u7684Job\u7684\u5e76\u53d1\u6307\u5b9a\u3002\u53ea\u5141\u8bb8\u6307\u5b9a\u4e0b\u9762\u7b56\u7565\u7684\u4e00\u79cd\uff1a allow\uff08\u9ed8\u8ba4\uff09\uff1a\u5141\u8bb8\u5175\u6cd5\u8fd0\u884cJob Forbid\uff1a\u7981\u6b62\u5e76\u53d1\u8fd0\u884c\uff0c\u5982\u679c\u524d\u4e00\u4e2a\u8fd8\u6ca1\u6709\u5b8c\u6210\uff0c\u5219\u76f4\u63a5\u8df3\u8fc7\u4e0b\u4e00\u4e2a Replace :\u53d6\u6d88\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684Job\uff0c\u7528\u4e00\u4e2a\u65b0\u7684\u6765\u66ff\u6362 \u6ce8\u610f\uff1a\u5f53\u524d\u7b56\u7565\u53ea\u80fd\u5e94\u7528\u4e8e\u540c\u4e00\u4e2aCronJob\u521b\u5efa\u7684Job\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2aCronJob\uff0c\u4ed6\u4eec\u521b\u5efa\u7684Job\u4e4b\u95f4\u603b\u662f\u5141\u8bb8\u5e76\u53d1\u6267\u884c .spec.suspend :\u6302\u8d77\uff0c\u8be5\u5b57\u6bb5\u4e5f\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u540e\u7eed\u6240\u6709\u6267\u884c\u90fd\u4f1a\u88ab\u6302\u8d77\uff0c\u4ed6\u5bf9\u5df2\u7ecf\u5f00\u59cb\u7684Job\u4e0d\u8d77\u4f5c\u7528\u3002\u9ed8\u8ba4\u503c\u4e3afalse .spec.successfullJobHistoryLimit \u548c .spec.failesJobsHistoryLimit \uff1a\u5386\u53f2\u9650\u5236\uff08\u53ef\u9009\uff09\u3002\u4ed6\u4eec\u5236\u5b9a\u4e86\u53ef\u4ee5\u4fdd\u7559\u591a\u5c11\u5b8c\u6210\u548c\u5931\u8d25\u7684Job\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4ed6\u4eec\u5206\u522b\u8bbe\u7f6e\u4e3a 3 \u548c 1.\u8bbe\u7f6e\u9650\u5236\u7684\u503c\u4e3a0\uff0c\u76f8\u5173\u7c7b\u578b\u7684Job\u5b8c\u6210\u540e\u5c06\u4e0d\u4f1a\u88ab\u4fdd\u7559\u3002 \u5178\u578b\u7528\u6cd5 \u5728\u7ed9\u5b9a\u7684\u65f6\u95f4\u70b9\u8c03\u5ea6Job\u8fd0\u884c \u521b\u5efa\u5468\u671f\u6027\u7684\u8fd0\u884cJob\uff0c\u4f8b\u5982\uff1a\u6570\u636e\u5e93\u5907\u4efd\u3001\u53d1\u9001\u90ae\u4ef6 Horizontal Pod Aotuscaling \u4f5c\u4e3a\u4e00\u4e2a\u9644\u5c5e\u54c1\u65b9\u5f0f\u6765\u7ba1\u7406\u5176\u4ed6\u63a7\u5236\u5668 \u6839\u636e\u6570\u636e\u7c7b\u578b\u7684\u65b9\u5f0f\u6269\u5bb9\u7f29","title":"\u63a7\u5236\u5668\u7c7b\u578b"},{"location":"DevOps/15%20Kubernetes/07%20Kubernetes%20resource%20scheduler/","text":"\u8c03\u5ea6\u8bf4\u660e \u00b6 \u8bf4\u660e Scheduler \u662fk8s\u8c03\u5ea6\u5668\uff0c\u4e3b\u8981\u4efb\u52a1\u662f\u628a\u5b9a\u4e49\u7684Pod\u5206\u914d\u5230\u96c6\u7fa4\u8282\u70b9\u4e0a\u3002Scheduler\u662f\u4f5c\u4e3a\u5355\u72ec\u7684\u7a0b\u5e8f\u8fd0\u884c\u7684\uff0c\u542f\u52a8\u4e4b\u540e\u4f1a\u4e00\u76f4\u76d1\u542cAPI Server\uff0c\u83b7\u53d6PodSpec.NodeName\u4e3a\u7a7a\u7684Pod\uff0c\u5bf9\u6bcf\u4e2apod\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2abinding\uff0c\u8868\u793a\u8be5Pod\u5e94\u8be5\u653e\u5230\u90a3\u4e2a\u8282\u70b9\u4e0a \u516c\u5e73\uff1a\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u80fd\u88ab\u5206\u914d\u5230\u8d44\u6e90 \u8d44\u6e90\u9ad8\u6548\u5229\u7528\uff1a\u96c6\u7fa4\u6240\u6709\u8d44\u6e90\u6700\u5927\u5316\u88ab\u4f7f\u7528 \u6548\u7387\uff1a\u8c03\u5ea6\u7684\u6027\u80fd\u8981\u597d\uff0c\u80fd\u5c3d\u5feb\u5730\u5bf9\u5927\u6279\u91cf\u7684Pod\u5b8c\u6210\u8c03\u5ea6\u5de5\u4f5c \u7075\u6d3b\uff1a\u5141\u8bb8\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u63a7\u5236\u8c03\u5ea6\u903b\u8f91 \u8c03\u5ea6\u8fc7\u7a0b \u8fc7\u6ee4\u6389\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\uff1a predicate \u5bf9\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u6392\u5e8f \u9009\u62e9\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8282\u70b9 \u4e2d\u95f4\u6709\u4e00\u6b65\u6709\u9519\u8bef\uff0c\u76f4\u63a5\u8fd4\u56de\u9519\u8bef Predicate\u7b97\u6cd5\uff08\u5e38\u89c1\u7684\uff09\uff1a PodFitsResources\uff1a\u8282\u70b9\u4e0a\u5269\u4f59\u7684\u8d44\u6e90\u662f\u5426\u5927\u4e8epod\u8bf7\u6c42\u7684\u8d44\u6e90 PodFitsHost\uff1a\u5982\u679cPod\u6307\u5b9a\u4e86NodeName\uff0c\u68c0\u67e5\u8282\u70b9\u540d\u79f0\u662f\u5426\u548cNodeName\u5339\u914d PodFitsHostPorts\uff1a\u8282\u70b9\u4e0a\u5df2\u7ecf\u4f7f\u7528\u4e86\u7684port\u662f\u5426\u548cpod\u7533\u8bf7\u7684port\u51b2\u7a81 PodSelectorMatches\uff1a\u8fc7\u6ee4\u6389\u548cpod\u6307\u5b9a\u7684label\u4e0d\u5339\u914d\u7684\u8282\u70b9 NoDiskConflict\uff1a\u5df2\u7ecfmount\u7684volume \u548c pod\u6307\u5b9a\u7684volume\u4e0d\u51b2\u7a81\uff0c\u9664\u975e\u4ed6\u4eec\u90fd\u662f\u53ea\u8bfb \u200b \u5982\u679c\u5728predicate\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5408\u9002\u7684\u8282\u70b9\uff0cpod\u4f1a\u4e00\u76f4\u5728pending\u72b6\u6001\uff0c\u4e0d\u65ad\u91cd\u8bd5\u8c03\u5ea6\uff0c\u76f4\u5230\u6709\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\u3002\u7ecf\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u7ee7\u7eedpriorities\u8fc7\u7a0b\uff1a\u6309\u7167\u4f18\u5148\u7ea7\u5927\u5c0f\u5bf9\u8282\u70b9\u6392\u5e8f \u200b \u4f18\u5148\u7ea7\u7531\u4e00\u4e9b\u5217\u952e\u503c\u5bf9\u7ec4\u6210\uff0c\u952e\u662f\u8be5\u4f18\u5148\u7ea7\u9879\u7684\u540d\u79f0\uff0c\u503c\u65f6\u5b83\u7684\u6743\u91cd\uff08\u8be5\u9879\u7684\u91cd\u8981\u6027\uff09\u3002\u4f18\u5148\u7ea7\u90fd\u5305\u62ec\u3002 LeastRequestedPriority\uff1a\u901a\u8fc7\u8ba1\u7b97CPU\u548cMemory\u7684\u4f7f\u7528\u7387\u6765\u51b3\u5b9a\u6743\u91cd\uff0c\u4f7f\u7528\u7387\u8d8a\u4f4e\u6743\u91cd\u8d8a\u9ad8\u3002\u4f18\u5148\u7ea7\u6307\u6807\u66f4\u503e\u5411\u4e8e\u8d44\u6e90\u4f7f\u7528\u6bd4\u4f8b\u66f4\u4f4e\u7684\u8282\u70b9 BalancedResourceAllocation\uff1a\u8282\u70b9\u4e0a\u7684CPU\u548cMemory\u4f7f\u7528\u7387\u8d8a\u63a5\u8fd1\uff0c\u6743\u91cd\u8d8a\u9ad8\u3002\u8fd9\u4e2a\u5e94\u8be5\u548c\u4e0a\u9762\u7684\u4e00\u8d77\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u5355\u72ec\u4f7f\u7528 ImageLocalityPriority\uff1a\u503e\u5411\u4e8e\u5df2\u7ecf\u6709\u8981\u4f7f\u7528\u955c\u50cf\u7684\u8282\u70b9\uff0c\u955c\u50cf\u603b\u5927\u5c0f\u503c\u8d8a\u5927\uff0c\u6743\u91cd\u8d8a\u9ad8 \u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668 \u901a\u8fc7spec.schedulername\u53c2\u6570\u6307\u5b9a\u8c03\u5ea6\u5668\u7684\u540d\u5b57 \u8c03\u5ea6\u4eb2\u548c\u6027\uff08Affinity\uff09 \u00b6 Pod\u4e0eNode\u4e4b\u95f4\uff1aPod.spec.nodeAffinity preferredDuringSchedulingIgnoredDuringExecution\uff1a\u8f6f\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution\uff1a\u786c\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution apiVersion : v1 kind : Pod metadata : name : affinity labels : name : node-affinity-pod spec : containers : - name : myapp image : nginx affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : kubernetes.io/hostname operator : NotIn values : - k8s-node02 preferredDuringSchedulingIgnoredDuringExecution apiVersion : v1 kind : Pod metadata : name : affinity labels : name : node-affinity-pod spec : containers : - name : myapp image : nginx affinity : nodeAffinity : preferredDuringSchedulingIgnoredDuringExecution : - preference : weight : 1 mathExpressions : - key : kubernetes.io/hostname operator : In values : - k8s-node02 Pod\u4e8ePod\u4e4b\u95f4\uff1apod.spec.affinity.podAffinity/podAntiAffinity preferredDuringSchedulingIgnoredDuringExecution\uff1a\u8f6f\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution\uff1a\u786c\u7b56\u7565 apiVersion : v1 kind : Pod metadata : name : pod-3 labels : app : pod-3 spec : containers : - name : pod-3 image : nginx affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - pod-1 topologyKey : kubernetes.io/hostname podAntiAffinity : preferredDuringSchedulingIgnoredDuringExecution : - weight : 1 podAffinityTerm : labelSelector : matchExpressions : - key : app operator : In values : - pod-2 topologyKey : kubernetes.io/hostname \u952e\u503c\u8fd0\u7b97\u5173\u7cfb In\uff1alabel\u7684\u503c\u5728\u67d0\u4e2a\u5217\u8868\u4e2d NotIn\uff1alabel\u7684\u503c\u4e0d\u518d\u67d0\u4e2a\u5217\u8868\u4e2d Gt\uff1alabel\u7684\u503c\u5927\u4e8e\u67d0\u4e2a\u503c Lt\uff1alabel\u7684\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c Exists\uff1a\u67d0\u4e2alabel\u5b58\u5728 DoesNotExist\uff1a\u67d0\u4e2alabel\u4e0d\u5b58\u5728 \u5982\u679cnodeSelectorTerms\u4e0b\u9762\u6709\u591a\u4e2a\u9009\u9879\u8bdd\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\uff0c\u5982\u679cmathExpressions\u6709\u591a\u4e2a\u9009\u9879\uff0c\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6 \u4eb2\u548c\u6027/\u53cd\u4eb2\u548c\u6027\u8c03\u5ea6\u7b56\u7565\u6bd4\u8f83\u5982\u4e0b\uff1a \u8c03\u5ea6\u7b56\u7565 \u5339\u914d\u6807\u7b7e \u64cd\u4f5c\u7b26 \u62d3\u6251\u57df\u652f\u6301 \u8c03\u5ea6\u76ee\u6807 nodeAffinity \u4e3b\u673a In\u3001NotIn\u3001Exists\u3001DoesNotExist\u3001Gt\u3001Lt \u5426 \u6307\u5b9a\u4e3b\u673a podAffinity Pod In\u3001NotIn\u3001Exists\u3001DoesNotExist \u662f pod\u6307\u5b9aPod\u540c\u4e00\u62d3\u6251\u57df podAnitAffinity Pod In\u3001NotIn\u3001Exists\u3001DoesNotExist \u662f Pod\u4e8e\u6307\u5b9a\u7684Pod\u4e0d\u518d\u540c\u4e00\u4e2a\u62d3\u6251\u57df \u6c61\u70b9\uff08Taint\uff09 \u00b6 Taint\u4f7f\u8282\u70b9\u6392\u9664\u4e00\u7c7b\u7279\u5b9a\u7684Pod\uff0ctoleration\u76f8\u4e92\u914d\u5408\uff0c\u53ef\u4ee5\u7528\u6765\u907f\u514dPod\u88ab\u5206\u914d\u5230\u4e0d\u9002\u5408\u7684\u8282\u70b9\u4e0a\u3002\u6bcf\u4e2a\u8282\u70b9\u8282\u70b9\u4e0a\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2aTaint\uff0c\u8868\u793a\u4e0d\u80fd\u5bb9\u5fcd\u8fd9\u4e9btaint\u7684pod\u8fd0\u884c\u5728\u8282\u70b9\u3002\u5982\u679c\u5c06toleration\u5e94\u7528\u4e8ePod\u4e0a\uff0c\u5219\u8868\u793a\u8fd9\u4e9bpod\u53ef\u4ee5\uff08\u4f46\u4e0d\u8981\u6c42\uff09\u88ab\u8c03\u5ea6\u5230\u5177\u6709\u5339\u914dtaint\u7684\u8282\u70b9\u4e0a \u6c61\u70b9(Taint)\u7684\u7ec4\u6210 \u4f7f\u7528kubectl taint\u8bbe\u7f6e\u6c61\u70b9\u3002\u88ab\u8bbe\u7f6e\u6c61\u70b9\u540e\u548cPod\u5b58\u5728\u76f8\u65a5\u5173\u7cfb\uff0c\u62d2\u7eddNode\u8c03\u5ea6\u6267\u884c\uff0c\u751a\u81f3\u5c06node\u5df2\u5b58\u5728\u7684Pod\u9a71\u9010\u51fa\u53bb key = value:effect \u6bcf\u4e2a\u6c61\u70b9\u7531key\u3001value \u4f5c\u4e3a\u6c61\u70b9\u6807\u7b7e\uff0c\u5176\u4e2dvalue\u4e3a\u7a7a\uff0ceffect\u63cf\u8ff0\u6c61\u70b9\u4f5c\u7528\u3002\u5f53\u524dtaint effect\u652f\u6301\u5982\u4e0b\u4e09\u4e2a\u9009\u9879\uff1a NoSchedule\uff1a\u8868\u793ak8s\u4e0d\u4f1a\u5c06Pod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a PreferNoSchedule\uff1a\u8868\u793ak8s\u5c06\u5c3d\u91cf\u907f\u514dPod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a NoExecute\uff1a\u8868\u793ak8s\u4e0d\u4f1a\u5c06Pod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a\uff0c\u540c\u65f6\u4f1a\u5c06\u5df2\u5b58\u5728\u7684Node\u9a71\u9010\u51fa\u53bb \u6c61\u70b9\u7684\u8bbe\u7f6e\u3001\u67e5\u770b\u3001\u548c\u53bb\u9664 # \u8bbe\u7f6e\u6c61\u70b9 kubectl taint nodes node1 key1 = value1:NoSchedule # \u8282\u70b9\u8bf4\u660e\uff0c\u67e5\u627eTaints\u5b57\u6bb5 kubectl describe pod pod-name # \u53bb\u9664\u6c61\u70b9 kubectl taint nodes node1 key1:NoSchedule- \u5bb9\u5fcd\uff08tolerations\uff09 pod.spec.tolerations \u8bbe\u7f6e tolerations : - key : \"key1\" operator : \"Equal\" value : \"value1\" effect : \"NoSchedule\" tolerationSeconds : 3600 - key : \"key1\" operator : \"Equal\" value : \"value1\" effect : \"NoSchedule\" - key : \"key2\" operator : \"Exists\" effect : \"NoSchedule\" \u5176\u4e2dkey\u3001value\u3001effect\u8981\u4e0eNode\u4e0a\u8bbe\u7f6e\u7684taint\u4fdd\u6301\u4e00\u81f4 operator\u7684\u503c\u4e3aExists\u5c06\u4f1a\u5ffd\u7565value\u503c tolerationSeconds \u7528\u4e8e\u63cf\u8ff0\u5f53Pod\u9700\u8981\u88ab\u9a71\u9010\u65f6\u53ef\u4ee5\u5728Pod\u4e0a\u7ee7\u7eed\u4fdd\u7559\u8fd0\u884c\u65f6\u95f4 \u5f53\u4e0d\u6307\u5b9akey\u503c\u65f6\uff0c\u8868\u793a\u5bb9\u5fcd\u6240\u6709\u7684\u6c61\u70b9key: tolerations : - operator : \"Exists\" \u5f53\u4e0d\u6307\u5b9aeffect\u503c\u65f6\uff0c\u8868\u793a\u5bb9\u5fcd\u6240\u6709\u7684\u6c61\u70b9\u4f5c\u7528\uff1a tolerations : - key : \"key\" operator : \"Exists\" \u6709\u591a\u4e2amaster\u5b58\u5728\u65f6\uff0c\u9632\u6b62\u8d44\u6e90\u6d6a\u8d39\uff0c\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e\uff1a kubectl taint nodes NodeName node-role.kubernetes.io/master=:PreferNoSchedule \u56fa\u5b9a\u8282\u70b9 \u00b6 pod.spec.nodeName \u5c06Pod\u76f4\u63a5\u8c03\u5ea6\u5230\u6307\u5b9a\u7684Node\u8282\u70b9\u4e0a\uff0c\u4f1a\u8df3\u8fc7Schedule\u7684\u8c03\u5ea6\u7b56\u7565\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f\u5f3a\u5236\u5339\u914d apiVersion : apps/v1 kind : Deployment metadata : name : myweb spec : selector : matchLabels : app : myweb template : metadata : labels : app : myweb spec : nodeName : k8s-node01 containers : - name : myweb image : <Image> ports : - containerPort : <Port> pod.spec.nodeSelector \u901a\u8fc7k8s\u7684 label-selector\u673a\u5236\u9009\u62e9\u8282\u70b9\uff0c\u7531\u8c03\u5ea6\u5668\u8c03\u5ea6\u7b56\u7565\u5339\u914dlabel\uff0c\u800c\u8c03\u5ea6Pod\u5230\u76ee\u6807\u8282\u70b9\uff0c\u8be5\u5339\u914d\u89c4\u5219\u5c5e\u4e8e\u5f3a\u5236\u7ea6\u675f apiVersion : apps/v1 kind : Deployment metadata : name : myweb spec : selector : matchLabels : app : myweb template : metadata : labels : app : myweb spec : nodeSelector : nginx01 : sshfast containers : - name : myweb image : <Image> ports : - containerPort : <Port>","title":"07 \u8d44\u6e90\u8c03\u5ea6\u5668"},{"location":"DevOps/15%20Kubernetes/07%20Kubernetes%20resource%20scheduler/#_1","text":"\u8bf4\u660e Scheduler \u662fk8s\u8c03\u5ea6\u5668\uff0c\u4e3b\u8981\u4efb\u52a1\u662f\u628a\u5b9a\u4e49\u7684Pod\u5206\u914d\u5230\u96c6\u7fa4\u8282\u70b9\u4e0a\u3002Scheduler\u662f\u4f5c\u4e3a\u5355\u72ec\u7684\u7a0b\u5e8f\u8fd0\u884c\u7684\uff0c\u542f\u52a8\u4e4b\u540e\u4f1a\u4e00\u76f4\u76d1\u542cAPI Server\uff0c\u83b7\u53d6PodSpec.NodeName\u4e3a\u7a7a\u7684Pod\uff0c\u5bf9\u6bcf\u4e2apod\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2abinding\uff0c\u8868\u793a\u8be5Pod\u5e94\u8be5\u653e\u5230\u90a3\u4e2a\u8282\u70b9\u4e0a \u516c\u5e73\uff1a\u4fdd\u8bc1\u6bcf\u4e2a\u8282\u70b9\u90fd\u80fd\u88ab\u5206\u914d\u5230\u8d44\u6e90 \u8d44\u6e90\u9ad8\u6548\u5229\u7528\uff1a\u96c6\u7fa4\u6240\u6709\u8d44\u6e90\u6700\u5927\u5316\u88ab\u4f7f\u7528 \u6548\u7387\uff1a\u8c03\u5ea6\u7684\u6027\u80fd\u8981\u597d\uff0c\u80fd\u5c3d\u5feb\u5730\u5bf9\u5927\u6279\u91cf\u7684Pod\u5b8c\u6210\u8c03\u5ea6\u5de5\u4f5c \u7075\u6d3b\uff1a\u5141\u8bb8\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u9700\u6c42\u63a7\u5236\u8c03\u5ea6\u903b\u8f91 \u8c03\u5ea6\u8fc7\u7a0b \u8fc7\u6ee4\u6389\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8282\u70b9\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\uff1a predicate \u5bf9\u8282\u70b9\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u6392\u5e8f \u9009\u62e9\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u8282\u70b9 \u4e2d\u95f4\u6709\u4e00\u6b65\u6709\u9519\u8bef\uff0c\u76f4\u63a5\u8fd4\u56de\u9519\u8bef Predicate\u7b97\u6cd5\uff08\u5e38\u89c1\u7684\uff09\uff1a PodFitsResources\uff1a\u8282\u70b9\u4e0a\u5269\u4f59\u7684\u8d44\u6e90\u662f\u5426\u5927\u4e8epod\u8bf7\u6c42\u7684\u8d44\u6e90 PodFitsHost\uff1a\u5982\u679cPod\u6307\u5b9a\u4e86NodeName\uff0c\u68c0\u67e5\u8282\u70b9\u540d\u79f0\u662f\u5426\u548cNodeName\u5339\u914d PodFitsHostPorts\uff1a\u8282\u70b9\u4e0a\u5df2\u7ecf\u4f7f\u7528\u4e86\u7684port\u662f\u5426\u548cpod\u7533\u8bf7\u7684port\u51b2\u7a81 PodSelectorMatches\uff1a\u8fc7\u6ee4\u6389\u548cpod\u6307\u5b9a\u7684label\u4e0d\u5339\u914d\u7684\u8282\u70b9 NoDiskConflict\uff1a\u5df2\u7ecfmount\u7684volume \u548c pod\u6307\u5b9a\u7684volume\u4e0d\u51b2\u7a81\uff0c\u9664\u975e\u4ed6\u4eec\u90fd\u662f\u53ea\u8bfb \u200b \u5982\u679c\u5728predicate\u8fc7\u7a0b\u4e2d\u6ca1\u6709\u5408\u9002\u7684\u8282\u70b9\uff0cpod\u4f1a\u4e00\u76f4\u5728pending\u72b6\u6001\uff0c\u4e0d\u65ad\u91cd\u8bd5\u8c03\u5ea6\uff0c\u76f4\u5230\u6709\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\u3002\u7ecf\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8282\u70b9\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u7ee7\u7eedpriorities\u8fc7\u7a0b\uff1a\u6309\u7167\u4f18\u5148\u7ea7\u5927\u5c0f\u5bf9\u8282\u70b9\u6392\u5e8f \u200b \u4f18\u5148\u7ea7\u7531\u4e00\u4e9b\u5217\u952e\u503c\u5bf9\u7ec4\u6210\uff0c\u952e\u662f\u8be5\u4f18\u5148\u7ea7\u9879\u7684\u540d\u79f0\uff0c\u503c\u65f6\u5b83\u7684\u6743\u91cd\uff08\u8be5\u9879\u7684\u91cd\u8981\u6027\uff09\u3002\u4f18\u5148\u7ea7\u90fd\u5305\u62ec\u3002 LeastRequestedPriority\uff1a\u901a\u8fc7\u8ba1\u7b97CPU\u548cMemory\u7684\u4f7f\u7528\u7387\u6765\u51b3\u5b9a\u6743\u91cd\uff0c\u4f7f\u7528\u7387\u8d8a\u4f4e\u6743\u91cd\u8d8a\u9ad8\u3002\u4f18\u5148\u7ea7\u6307\u6807\u66f4\u503e\u5411\u4e8e\u8d44\u6e90\u4f7f\u7528\u6bd4\u4f8b\u66f4\u4f4e\u7684\u8282\u70b9 BalancedResourceAllocation\uff1a\u8282\u70b9\u4e0a\u7684CPU\u548cMemory\u4f7f\u7528\u7387\u8d8a\u63a5\u8fd1\uff0c\u6743\u91cd\u8d8a\u9ad8\u3002\u8fd9\u4e2a\u5e94\u8be5\u548c\u4e0a\u9762\u7684\u4e00\u8d77\u4f7f\u7528\uff0c\u4e0d\u5e94\u8be5\u5355\u72ec\u4f7f\u7528 ImageLocalityPriority\uff1a\u503e\u5411\u4e8e\u5df2\u7ecf\u6709\u8981\u4f7f\u7528\u955c\u50cf\u7684\u8282\u70b9\uff0c\u955c\u50cf\u603b\u5927\u5c0f\u503c\u8d8a\u5927\uff0c\u6743\u91cd\u8d8a\u9ad8 \u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668 \u901a\u8fc7spec.schedulername\u53c2\u6570\u6307\u5b9a\u8c03\u5ea6\u5668\u7684\u540d\u5b57","title":"\u8c03\u5ea6\u8bf4\u660e"},{"location":"DevOps/15%20Kubernetes/07%20Kubernetes%20resource%20scheduler/#affinity","text":"Pod\u4e0eNode\u4e4b\u95f4\uff1aPod.spec.nodeAffinity preferredDuringSchedulingIgnoredDuringExecution\uff1a\u8f6f\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution\uff1a\u786c\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution apiVersion : v1 kind : Pod metadata : name : affinity labels : name : node-affinity-pod spec : containers : - name : myapp image : nginx affinity : nodeAffinity : requiredDuringSchedulingIgnoredDuringExecution : nodeSelectorTerms : - matchExpressions : - key : kubernetes.io/hostname operator : NotIn values : - k8s-node02 preferredDuringSchedulingIgnoredDuringExecution apiVersion : v1 kind : Pod metadata : name : affinity labels : name : node-affinity-pod spec : containers : - name : myapp image : nginx affinity : nodeAffinity : preferredDuringSchedulingIgnoredDuringExecution : - preference : weight : 1 mathExpressions : - key : kubernetes.io/hostname operator : In values : - k8s-node02 Pod\u4e8ePod\u4e4b\u95f4\uff1apod.spec.affinity.podAffinity/podAntiAffinity preferredDuringSchedulingIgnoredDuringExecution\uff1a\u8f6f\u7b56\u7565 requiredDuringSchedulingIgnoredDuringExecution\uff1a\u786c\u7b56\u7565 apiVersion : v1 kind : Pod metadata : name : pod-3 labels : app : pod-3 spec : containers : - name : pod-3 image : nginx affinity : podAffinity : requiredDuringSchedulingIgnoredDuringExecution : - labelSelector : matchExpressions : - key : app operator : In values : - pod-1 topologyKey : kubernetes.io/hostname podAntiAffinity : preferredDuringSchedulingIgnoredDuringExecution : - weight : 1 podAffinityTerm : labelSelector : matchExpressions : - key : app operator : In values : - pod-2 topologyKey : kubernetes.io/hostname \u952e\u503c\u8fd0\u7b97\u5173\u7cfb In\uff1alabel\u7684\u503c\u5728\u67d0\u4e2a\u5217\u8868\u4e2d NotIn\uff1alabel\u7684\u503c\u4e0d\u518d\u67d0\u4e2a\u5217\u8868\u4e2d Gt\uff1alabel\u7684\u503c\u5927\u4e8e\u67d0\u4e2a\u503c Lt\uff1alabel\u7684\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c Exists\uff1a\u67d0\u4e2alabel\u5b58\u5728 DoesNotExist\uff1a\u67d0\u4e2alabel\u4e0d\u5b58\u5728 \u5982\u679cnodeSelectorTerms\u4e0b\u9762\u6709\u591a\u4e2a\u9009\u9879\u8bdd\u6ee1\u8db3\u4e00\u4e2a\u6761\u4ef6\u5373\u53ef\uff0c\u5982\u679cmathExpressions\u6709\u591a\u4e2a\u9009\u9879\uff0c\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6 \u4eb2\u548c\u6027/\u53cd\u4eb2\u548c\u6027\u8c03\u5ea6\u7b56\u7565\u6bd4\u8f83\u5982\u4e0b\uff1a \u8c03\u5ea6\u7b56\u7565 \u5339\u914d\u6807\u7b7e \u64cd\u4f5c\u7b26 \u62d3\u6251\u57df\u652f\u6301 \u8c03\u5ea6\u76ee\u6807 nodeAffinity \u4e3b\u673a In\u3001NotIn\u3001Exists\u3001DoesNotExist\u3001Gt\u3001Lt \u5426 \u6307\u5b9a\u4e3b\u673a podAffinity Pod In\u3001NotIn\u3001Exists\u3001DoesNotExist \u662f pod\u6307\u5b9aPod\u540c\u4e00\u62d3\u6251\u57df podAnitAffinity Pod In\u3001NotIn\u3001Exists\u3001DoesNotExist \u662f Pod\u4e8e\u6307\u5b9a\u7684Pod\u4e0d\u518d\u540c\u4e00\u4e2a\u62d3\u6251\u57df","title":"\u8c03\u5ea6\u4eb2\u548c\u6027\uff08Affinity\uff09"},{"location":"DevOps/15%20Kubernetes/07%20Kubernetes%20resource%20scheduler/#taint","text":"Taint\u4f7f\u8282\u70b9\u6392\u9664\u4e00\u7c7b\u7279\u5b9a\u7684Pod\uff0ctoleration\u76f8\u4e92\u914d\u5408\uff0c\u53ef\u4ee5\u7528\u6765\u907f\u514dPod\u88ab\u5206\u914d\u5230\u4e0d\u9002\u5408\u7684\u8282\u70b9\u4e0a\u3002\u6bcf\u4e2a\u8282\u70b9\u8282\u70b9\u4e0a\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2aTaint\uff0c\u8868\u793a\u4e0d\u80fd\u5bb9\u5fcd\u8fd9\u4e9btaint\u7684pod\u8fd0\u884c\u5728\u8282\u70b9\u3002\u5982\u679c\u5c06toleration\u5e94\u7528\u4e8ePod\u4e0a\uff0c\u5219\u8868\u793a\u8fd9\u4e9bpod\u53ef\u4ee5\uff08\u4f46\u4e0d\u8981\u6c42\uff09\u88ab\u8c03\u5ea6\u5230\u5177\u6709\u5339\u914dtaint\u7684\u8282\u70b9\u4e0a \u6c61\u70b9(Taint)\u7684\u7ec4\u6210 \u4f7f\u7528kubectl taint\u8bbe\u7f6e\u6c61\u70b9\u3002\u88ab\u8bbe\u7f6e\u6c61\u70b9\u540e\u548cPod\u5b58\u5728\u76f8\u65a5\u5173\u7cfb\uff0c\u62d2\u7eddNode\u8c03\u5ea6\u6267\u884c\uff0c\u751a\u81f3\u5c06node\u5df2\u5b58\u5728\u7684Pod\u9a71\u9010\u51fa\u53bb key = value:effect \u6bcf\u4e2a\u6c61\u70b9\u7531key\u3001value \u4f5c\u4e3a\u6c61\u70b9\u6807\u7b7e\uff0c\u5176\u4e2dvalue\u4e3a\u7a7a\uff0ceffect\u63cf\u8ff0\u6c61\u70b9\u4f5c\u7528\u3002\u5f53\u524dtaint effect\u652f\u6301\u5982\u4e0b\u4e09\u4e2a\u9009\u9879\uff1a NoSchedule\uff1a\u8868\u793ak8s\u4e0d\u4f1a\u5c06Pod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a PreferNoSchedule\uff1a\u8868\u793ak8s\u5c06\u5c3d\u91cf\u907f\u514dPod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a NoExecute\uff1a\u8868\u793ak8s\u4e0d\u4f1a\u5c06Pod\u8c03\u5ea6\u5230\u5177\u6709\u6c61\u70b9\u7684Node\u4e0a\uff0c\u540c\u65f6\u4f1a\u5c06\u5df2\u5b58\u5728\u7684Node\u9a71\u9010\u51fa\u53bb \u6c61\u70b9\u7684\u8bbe\u7f6e\u3001\u67e5\u770b\u3001\u548c\u53bb\u9664 # \u8bbe\u7f6e\u6c61\u70b9 kubectl taint nodes node1 key1 = value1:NoSchedule # \u8282\u70b9\u8bf4\u660e\uff0c\u67e5\u627eTaints\u5b57\u6bb5 kubectl describe pod pod-name # \u53bb\u9664\u6c61\u70b9 kubectl taint nodes node1 key1:NoSchedule- \u5bb9\u5fcd\uff08tolerations\uff09 pod.spec.tolerations \u8bbe\u7f6e tolerations : - key : \"key1\" operator : \"Equal\" value : \"value1\" effect : \"NoSchedule\" tolerationSeconds : 3600 - key : \"key1\" operator : \"Equal\" value : \"value1\" effect : \"NoSchedule\" - key : \"key2\" operator : \"Exists\" effect : \"NoSchedule\" \u5176\u4e2dkey\u3001value\u3001effect\u8981\u4e0eNode\u4e0a\u8bbe\u7f6e\u7684taint\u4fdd\u6301\u4e00\u81f4 operator\u7684\u503c\u4e3aExists\u5c06\u4f1a\u5ffd\u7565value\u503c tolerationSeconds \u7528\u4e8e\u63cf\u8ff0\u5f53Pod\u9700\u8981\u88ab\u9a71\u9010\u65f6\u53ef\u4ee5\u5728Pod\u4e0a\u7ee7\u7eed\u4fdd\u7559\u8fd0\u884c\u65f6\u95f4 \u5f53\u4e0d\u6307\u5b9akey\u503c\u65f6\uff0c\u8868\u793a\u5bb9\u5fcd\u6240\u6709\u7684\u6c61\u70b9key: tolerations : - operator : \"Exists\" \u5f53\u4e0d\u6307\u5b9aeffect\u503c\u65f6\uff0c\u8868\u793a\u5bb9\u5fcd\u6240\u6709\u7684\u6c61\u70b9\u4f5c\u7528\uff1a tolerations : - key : \"key\" operator : \"Exists\" \u6709\u591a\u4e2amaster\u5b58\u5728\u65f6\uff0c\u9632\u6b62\u8d44\u6e90\u6d6a\u8d39\uff0c\u53ef\u4ee5\u5982\u4e0b\u8bbe\u7f6e\uff1a kubectl taint nodes NodeName node-role.kubernetes.io/master=:PreferNoSchedule","title":"\u6c61\u70b9\uff08Taint\uff09"},{"location":"DevOps/15%20Kubernetes/07%20Kubernetes%20resource%20scheduler/#_2","text":"pod.spec.nodeName \u5c06Pod\u76f4\u63a5\u8c03\u5ea6\u5230\u6307\u5b9a\u7684Node\u8282\u70b9\u4e0a\uff0c\u4f1a\u8df3\u8fc7Schedule\u7684\u8c03\u5ea6\u7b56\u7565\uff0c\u8be5\u5339\u914d\u89c4\u5219\u662f\u5f3a\u5236\u5339\u914d apiVersion : apps/v1 kind : Deployment metadata : name : myweb spec : selector : matchLabels : app : myweb template : metadata : labels : app : myweb spec : nodeName : k8s-node01 containers : - name : myweb image : <Image> ports : - containerPort : <Port> pod.spec.nodeSelector \u901a\u8fc7k8s\u7684 label-selector\u673a\u5236\u9009\u62e9\u8282\u70b9\uff0c\u7531\u8c03\u5ea6\u5668\u8c03\u5ea6\u7b56\u7565\u5339\u914dlabel\uff0c\u800c\u8c03\u5ea6Pod\u5230\u76ee\u6807\u8282\u70b9\uff0c\u8be5\u5339\u914d\u89c4\u5219\u5c5e\u4e8e\u5f3a\u5236\u7ea6\u675f apiVersion : apps/v1 kind : Deployment metadata : name : myweb spec : selector : matchLabels : app : myweb template : metadata : labels : app : myweb spec : nodeSelector : nginx01 : sshfast containers : - name : myweb image : <Image> ports : - containerPort : <Port>","title":"\u56fa\u5b9a\u8282\u70b9"},{"location":"DevOps/15%20Kubernetes/08%20Kubernetes%20safety/","text":"\u673a\u5236\u8bf4\u660e \u00b6 \u56f4\u7ed5APIServer\u6765\u8bbe\u8ba1\uff0c\u4f7f\u7528\u4e86\u8ba4\u8bc1\uff08Authentication\uff09\u3001\u9274\u6743\uff08Authorization\uff09\u3001\u51c6\u5165\u63a7\u5236\uff08AdmissionControl\uff09\u4e09\u90e8\u6765\u4fdd\u8bc1APIServer\u7684\u5b89\u5168 \u8ba4\u8bc1 \u00b6 Http Token\u8ba4\u8bc1\uff1a\u751f\u6210\u4e00\u4e2a\u590d\u6742\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e00\u4e2aToken\u5bf9\u5e94\u4e00\u4e2a\u7528\u6237\u540d\u5b58\u50a8\u5728Api Server\u80fd\u8bbf\u95ee\u7684\u6587\u4ef6\u4e2d\u3002\u5f53\u5ba2\u6237\u7aef\u53d1\u8d77API\u8c03\u7528\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u5728HTTP Hander\u4e2d\u653e\u5165Token Http Base\u8ba4\u8bc1\uff1a\u7528\u6237\u540d+\u5bc6\u7801\uff0c\u4f7f\u7528BASE64\u7f16\u7801\u5c06\u5b57\u7b26\u4e32\u653e\u5728HTTP Request\u4e2d\u7684Heather Authorization\u57df\u91cc\u53d1\u9001\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u6536\u5230\u540e\u8fdb\u884c\u89e3\u7801\uff0c\u83b7\u53d6\u7528\u6237\u540d\u548c\u5bc6\u7801 \u6700\u4e25\u683c\u7684Https\u8bc1\u4e66\u8ba4\u8bc1\uff1a\u57fa\u4e8eCA\u6839\u8bc1\u4e66\u7b7e\u540d\u7684\u5ba2\u6237\u7aef\u8eab\u4efd\u8ba4\u8bc1\u65b9\u5f0f HTTPS\u8bc1\u4e66\u8ba4\u8bc1 \u9700\u8981\u8ba4\u8bc1\u7684\u8282\u70b9 \u4e24\u79cd\u7c7b\u578b Kubernetes\u7ec4\u4ef6\u5bf9API Server\u7684\u8bbf\u95ee\uff1akubectl\u3001Controller Manager\u3001Scheduler\u3001kubelet\u3001kube-proxy Kubernetes\u7ba1\u7406\u7684Pod\u5bf9\u5bb9\u5668\u7684\u8bbf\u95ee\uff1aPod\uff08dashboard\u4e5f\u662f\u4ee5Pod\u5f62\u5f0f\u8fd0\u884c\uff09 \u5b89\u5168\u6027\u8bf4\u660e Controller Manager\u3001Scheduler\u4e0eAPI Server\u5728\u540c\u4e00\u53f0\u673a\u5668\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528API Server\u7684\u975e\u5b89\u5168\u7aef\u53e3\u8bbf\u95ee\uff0c --insecure-bind-address=127.0.0.1 Kubectl\u3001Kubelet\u3001kube-proxy\u8bbf\u95eeAPI Server\u5c31\u90fd\u9700\u8981\u8bc1\u4e66\u8fdb\u884cHTTPS\u53cc\u5411\u8ba4\u8bc1 \u8bc1\u4e66\u9881\u53d1 \u624b\u52a8\u7b7e\u53d1\uff1a\u901a\u8fc7k8s\u96c6\u7fa4\u7684\u6839ca\u8fdb\u884c\u7b7e\u53d1HTTPS\u8bc1\u4e66 \u81ea\u52a8\u7b7e\u53d1\uff1akubelet\u9996\u6b21\u8bbf\u95eeAPI Server\u65f6\uff0c\u4f7f\u7528token\u505a\u8ba4\u8bc1\uff0c\u901a\u8fc7\u540eController Manager\u4f1a\u4e3akubelet\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\uff0c\u4ee5\u540e\u7684\u8bbf\u95ee\u90fd\u662f\u7528\u8bc1\u4e66\u505a\u8ba4\u8bc1\u4e86\u3002 kubeconfig kubeconfig \u6587\u4ef6\u5305\u542b\u96c6\u7fa4\u53c2\u6570\uff08CA\u8bc1\u4e66\u3001API Server\u5730\u5740\uff09\uff0c\u5ba2\u6237\u7aef\u53c2\u6570\uff08\u4e0a\u9762\u751f\u6210\u7684\u8bc1\u4e66\u548c\u79c1\u94a5\uff09\uff0c\u96c6\u7fa4context\u4fe1\u606f\uff08\u96c6\u7fa4\u540d\u79f0\u3001\u7528\u6237\u540d\uff09\u3002Kubenetes\u7ec4\u4ef6\u901a\u8fc7\u542f\u52a8\u65f6\u6307\u5b9a\u4e0d\u540c\u7684kubeconfig\u6587\u4ef6\u53ef\u4ee5\u5207\u6362\u5230\u4e0d\u540c\u7684\u96c6\u7fa4\u3002 ServiceAccount Pod\u4e2d\u7684\u5bb9\u5668\u8bbf\u95eeAPI Server\u3002\u56e0\u4e3aPod\u7684\u521b\u5efa\u3001\u9500\u6bc1\u65f6\u52a8\u6001\u7684\uff0c\u6240\u4ee5\u8981\u4e3a\u4ed6\u624b\u52a8\u751f\u6210\u8bc1\u4e66\u5c31\u4e0d\u884c\u4e86\uff0ckubernetes\u4f7f\u7528\u4e86Service Account\u89e3\u51b3\u4e86Pod\u8bbf\u95eeAPI Server\u7684\u8ba4\u8bc1\u95ee\u9898\u3002 Secret\u4e0eSA\u7684\u5173\u7cfb Kubernetes\u8bbe\u8ba1\u4e86\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61\u53eb\u505aSecret\uff0c\u5206\u4e3a\u4e24\u7c7b\u4e00\u79cd\u662fServiceAccount\u7684service-account-token\uff0c\u53e6\u4e00\u79cd\u662f\u7528\u4e8e\u4fdd\u5b58\u7528\u6237\u81ea\u5b9a\u4e49\u4fdd\u5bc6\u4fe1\u606f\u7684Opaque\u3002ServiceAccount\u4e2d\u7528\u5230\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff1aToken\u3001ca.crt\u3001namespace token\u662f\u4f7f\u7528API Server\u79c1\u94a5\u7b7e\u540d\u7684JWT\u3002\u7528\u4e8e\u8bbf\u95eeAPI Server\u65f6\uff0cServer\u7aef\u8ba4\u8bc1 ca.crt\uff0c\u6839\u8bc1\u4e66\u3002\u7528\u4e8eClient\u7aef\u9a8c\u8bc1API Server\u53d1\u9001\u7aef\u8bc1\u4e66 namespace\uff0c\u8868\u793a\u8fd9\u4e2aservice-account-token\u7684\u4f5c\u7528\u57df\u540d\u7a7a\u95f4 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2anamespace\u90fd\u4f1a\u6709\u4e00\u4e2aServiceAccount\uff0c\u5982\u679cPod\u5728\u521b\u5efa\u65f6\u6ca1\u6709\u6307\u5b9aServiceAccount\uff0c\u5c31\u4f1a\u4f7f\u7528Pod\u6240\u5c5e\u7684namespace\u7684ServiceAccount \u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55\uff1a/run/secrets/kubernetes.io/serviceaccount/ kubectl get secret --all-namespaces kubectl describe secret default-token-5gm94 --namespace = kube-system \u9274\u6743 \u00b6 \u8ba4\u8bc1\u53ea\u662f\u8bf4\u660e\u4e0d\u540c\u7ec4\u4ef6\u95f4\u662f\u5426\u53ef\u4ee5\u901a\u8baf\uff0c\u800c\u9274\u6743\u662f\u786e\u5b9a\u8bf7\u6c42\u65b9\u6709\u54ea\u4e9b\u8bbf\u95ee\u8d44\u6e90\u7684\u6743\u9650\u3002APIServer\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u6388\u6743\u7b56\u7565\uff08\u901a\u8fc7APIServer\u7684\u542f\u52a8\u53c2\u6570\"--authorization-mode\"\u8bbe\u7f6e\uff09 AlwaysDeny\uff1a\u8868\u793a\u62d2\u7edd\u6240\u6709\u7684\u8bf7\u6c42\uff0c\u4e00\u822c\u7528\u4e8e\u6d4b\u8bd5 AlwaysAllow\uff1a\u5141\u8bb8\u63a5\u6536\u6240\u6709\u8bf7\u6c42\uff0c\u5982\u679c\u96c6\u7fa4\u4e0d\u9700\u8981\u6388\u6743\u6d41\u7a0b\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u8be5\u7b56\u7565 ABAC\uff08Attribute-Based Access Control\uff09:\u57fa\u4e8e\u5c5e\u6027\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u8868\u793a\u4f7f\u7528\u7528\u6237\u914d\u7f6e\u7684\u6388\u6743\u89c4\u5219\u5bf9\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\u548c\u63a7\u5236 Webhook\uff1a\u901a\u8fc7\u8c03\u7528\u5916\u90e8Rest\u670d\u52a1\u5bf9\u7528\u6237\u8fdb\u884c\u6388\u6743 RBAC\uff08Role-Based Access Control\uff09\uff1a\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u73b0\u884c\u9ed8\u8ba4\u89c4\u5219 RBAC\u6388\u6743\u6a21\u5f0f RBAC\uff08Role-Based Access Control\uff09\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u5728Kubernetes1.5\u4e2d\u5f15\u5165\uff0c\u73b0\u5728\u79f0\u4e3a\u9ed8\u8ba4\u6807\u51c6\u3002\u76f8\u5bf9\u5176\u4ed6\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\uff0c\u62e5\u6709\u4ee5\u4e0b\u4f18\u52bf \u5bf9\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u548c\u975e\u8d44\u6e90\u5747\u62e5\u6709\u5b8c\u6574\u7684\u8986\u76d6 \u6574\u4e2aRBAC\u5b8c\u5168\u7531\u51e0\u4e2aAPI\u5bf9\u8c61\u5b8c\u6210\uff0c\u540c\u5176\u4ed6API\u5bf9\u8c61\u4e00\u6837\uff0c\u53ef\u4ee5\u7528kubectl\u6216API\u8fdb\u884c\u64cd\u4f5c \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u8c03\u6574\uff0c\u65e0\u9700\u91cd\u542fAPI Server RBAC\u7684API\u8d44\u6e90\u5bf9\u8c61\u8bf4\u660e RBAC\u5f15\u51654\u4e2a\u5fc3\u7684\u9876\u7ea7\u8d44\u6e90\u5bf9\u8c61\uff1arole\u3001clusterRole\u3001clusterRoleBinding\uff0c\u56db\u79cd\u5bf9\u8c61\u7c7b\u578b\u5747\u53ef\u4ee5\u901a\u8fc7kubectl\u4e0eAPI\u64cd\u4f5c \u6ce8\u610f\u26a0\ufe0f\uff1akubernetes\u5e76\u4e0d\u4f1a\u63d0\u4f9b\u7528\u6237\u7ba1\u7406\uff0c\u90a3\u4e48user\u3001group\u3001serviceAccount\u6307\u5b9a\u7684\u7528\u6237\u5728kubernetes\u7ec4\u4ef6\uff08kubectl\u3001kube-proxy\uff09\u6216\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u7528\u6237\u518d\u5411CA\u7533\u8bf7\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6 { \"CN\" : \"admin\" \"host\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"name\" : [ { \"C\" : \"CN\" \"ST\" : \"HangZhou\" \"L\" : \"XS\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } APIServer\u4f1a\u628a\u5ba2\u6237\u7aef\u8bc1\u4e66\u7684CN\u5b57\u6bb5\u4f5c\u4e3aUser\uff0c\u628aname.0\u5b57\u6bb5\u4f5c\u4e3aGroup kubelet\u4f7f\u7528TLS Bootstaping\u8ba4\u8bc1\u65f6\uff0cAPIServer\u53ef\u4ee5\u4f7f\u7528Bootstrap Tokens\u6216\u8005Token authentication file\u9a8c\u8bc1 =token\uff0c\u65e0\u8bba\u54ea\u4e00\u79cd\uff0ckubernetes\u90fd\u4f1a\u4e3atoken\u7ed1\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684User\u548cGroup Pod\u4f7f\u7528serviceAccount\u8ba4\u8bc1\u65f6\uff0cservice-account-token\u4e2d\u7684JWT\u4f1a\u4fdd\u5b58User\u4fe1\u606f Role and ClusterRole \u5728RBAC API\u4e2d\uff0cRole\u8868\u793a\u4e00\u7ec4\u89c4\u5219\u6743\u9650\uff0c\u6743\u9650\u53ea\u4f1a\u589e\u52a0\uff08\u7d2f\u52a0\u6743\u9650\uff09\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u8d44\u6e90\u5df2\u5f00\u59cb\u5c31\u6709\u5f88\u591a\u6743\u9650\u800c\u901a\u8fc7RBAC\u5bf9\u5176\u8fdb\u884c\u51cf\u5c11\u7684\u64cd\u4f5c\uff1bRole\u53ef\u4ee5\u5b9a\u4e49\u5728\u4e00\u4e2anamespace\u4e2d\uff0c\u5982\u679c\u60f3\u8981\u5938namespace\u5219\u53ef\u4ee5\u521b\u5efaClusterRole kind : Role apiVerion : rbac.authorization.k8s.io/v1beta1 metadata : namespace : default name : pod-reader rules : - apiGroups : [ \"\" ] # \"\" indicates the core api group \u8d4b\u4e88API\u7248\u672c\u7684\u54ea\u4e2a\u7ec4 resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] ClusterRole\u5177\u6709Role\u76f8\u540c\u7684\u6743\u9650\u89d2\u8272\u63a7\u5236\u80fd\u529b\uff0c\u4e0d\u540c\u7684\u662fClusterRole\u662f\u96c6\u7fa4\u7ea7\u522b\u7684\uff0cClusterRole\u53ef\u4ee5\u7528\u4e8e \u96c6\u7fa4\u7ea7\u522b\u7684\u8d44\u6e90\u63a7\u5236\uff08\u4f8b\u5982Node\u8bbf\u95ee\u6743\u9650\uff09 \u975e\u8d44\u6e90\u578bendpoint\uff08\u4f8b\u5982/healthz\u8bbf\u95ee\uff09 \u6240\u6709\u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u63a7\u5236\uff08\u4f8b\u5982pods\uff09 kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : secret-reader rules : - apiGroups : [ \"\" ] resources : [ \"secrets\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] RoleBinding and ClusterBinding RoleBinding \u53ef\u4ee5\u5c06\u89d2\u8272\u4e2d\u5b9a\u4e49\u7684\u6743\u9650\u6388\u4e88\u7528\u6237\u6216\u7528\u6237\u7ec4\uff0cRoleBinding\u5305\u542b\u4e00\u7ec4\u6743\u9650\u5217\u8868\uff08subjects\uff09\uff0c\u6743\u9650\u91cc\u8868\u4e2d\u5305\u542b\u6709\u4e0d\u540c\u5f62\u5f0f\u7684\u5f85\u6388\u4e88\u6743\u9650\u8d44\u6e90\u7c7b\u578b\uff08user\u3001groups\u3001service accounts\uff09\uff1bRoleBinding\u540c\u6837\u5305\u542b\u5bf9\u88abBind\u7684Role\u5f15\u7528\uff1bRoleBinding\u9002\u7528\u4e8e\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u6388\u6743\uff0c\u800cClusterRoleBinding\u9002\u7528\u4e8e\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u6388\u6743 \u5c06default\u547d\u540d\u7a7a\u95f4\u7684 pod-reader \u7528\u6237\u6388\u6743\u4e0ejane\u7528\u6237\uff0c\u6b64\u540ejane\u7528\u6237\u5728default\u547d\u540d\u7a7a\u95f4\u4e2d\u5177\u6709 pod-reader \u7684\u6743\u9650 kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-pods namespace : default subjects : - kind : User name : jane apiGroup : rbac.authorization.k8s.io roleRef : kind : Role name : pod-reader apiGroup : rbac.authorization.k8s.io RoleBinding\u540c\u6837\u53ef\u4ee5\u5f15\u7528ClusterRole\u5bf9\u5f53\u524dnamespace\u5185\u7528\u6237\u3001\u7528\u6237\u7ec4\u6216ServiceAccount\u8fdb\u884c\u6388\u6743\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5141\u8bb8\u96c6\u7fa4\u7ba1\u7406\u5458\u5728\u6574\u4e2a\u96c6\u7fa4\u5185\u5b9a\u4e49\u4e00\u4e9b\u901a\u7528\u7684ClusterRole\uff0c\u7136\u540e\u5728\u4e0d\u540c\u7684namespace\u4e2d\u4f7f\u7528RoleBinding\u6765\u5f15\u7528* \u4f8b\u5982\uff0c\u4ee5\u4e0bRoleBinding\u5f15\u7528\u4e86\u4e00\u4e2aClusterRole\uff0c\u8fd9\u4e2aClusterRole\u5177\u6709\u6574\u4e2a\u96c6\u7fa4\u5185\u5bf9secrets\u7684\u8bbf\u95ee\u6743\u9650\uff1b\u4f46\u662f\u5176\u6388\u6743\u7528\u6237dave\u53ea\u80fd\u8bbf\u95eedevelopment\u7a7a\u95f4\u4e2d\u7684secrets\uff08\u56e0\u4e3aRoleBinding\u5b9a\u4e49\u5728development\u547d\u540d\u7a7a\u95f4\uff09 kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-secrets namespace : development subjects : - kind : User name : dave apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io \u4f7f\u7528ClusterRoleBinding\u53ef\u4ee5\u5bf9\u6574\u4e2a\u96c6\u7fa4\u4e2d\u6240\u6709\u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u6743\u9650\u8fdb\u884c\u6388\u6743\uff1b\u4ee5\u4e0bClusterRoleBinding\u6837\u4f8b\u5c55\u793a\u4e86\u6388\u6743manager\u7ec4\u5185\u6240\u6709\u7528\u6237\u5728\u5168\u90e8\u547d\u540d\u7a7a\u95f4\u4e2d\u5bf9secrets\u8fdb\u884c\u8bbf\u95ee kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-secrets-global subjects : - kind : Group name : manager apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io Resources kubernetes\u96c6\u7fa4\u5185\u4e00\u4e9b\u8d44\u6e90\u4e00\u822c\u4ee5\u5176\u540d\u79f0\u5b57\u7b26\u4e32\u6765\u8868\u793a\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u4e00\u822c\u4f1a\u5728API\u7684Url\u5730\u5740\u4e2d\u51fa\u73b0\uff1b\u540c\u65f6\u67d0\u4e9b\u8d44\u6e90\u4e5f\u4f1a\u5305\u542b\u5b50\u8d44\u6e90\uff0c\u4f8b\u5982logs\u8d44\u6e90\u5c31\u5c5e\u4e8epods\u7684\u5b50\u8d44\u6e90\uff0cAPI\u4e2d\u7684url\u6837\u4f8b\u5982\u4e0b GET /api/v1/namespaces/{namespace}/pods/{name}/log \u5982\u679c\u8981\u5728RBAC\u6388\u6743\u6a21\u578b\u4e2d\u63a7\u5236\u8fd9\u4e9b\u5b50\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u4ee5\u901a\u8fc7/\u5206\u9694\u7b26\u6765\u5b9e\u73b0\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b9a\u4e49pods\u8d44\u6e90logs\u8bbf\u95ee\u6743\u9650\u7684Role\u5b9a\u4e49\u6837\u4f8b kind : Role apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : default name : pod-and-pod-logs-reader rules : - apiGroups : [ \"\" ] resources : [ \"pods\" , \"pods/log\" ] verbs : [ \"get\" , \"list\" ] to Subjects RoleBinding\u548cClusterRoleBinding\u53ef\u4ee5\u5c06Role\u7ed1\u5b9a\u5230Subjects\uff1bSubjects\u53ef\u4ee5\u662fgroups\u3001users\u6216\u8005\u662fservice accounts Subjects\u4e2dUsers\u4f7f\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u666e\u901a\u7684\u540d\u5b57\u5b57\u7b26\u4e32\uff0c\u5982\"alice\";\u4e5f\u53ef\u4ee5\u662femail\u683c\u5f0f\u7684\u90ae\u7bb1\u5730\u5740\uff0c\u5982\" liangml0528@163.com \";\u751a\u81f3\u662f\u4e00\u7ec4\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57ID\u3002\u4f46\u662fUsers\u7684\u524d\u7f00system\uff1a\u662f\u7cfb\u7edf\u4fdd\u7559\u7684\uff0c\u96c6\u7fa4\u7ba1\u7406\u5458\u53ef\u4ee5\u786e\u4fdd\u666e\u901a\u7528\u6237\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u524d\u7f00\u7684\u683c\u5f0f Groups\u4e66\u5199\u683c\u5f0f\u4e0eUsers\u76f8\u540c\uff0c\u90fd\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6ca1\u6709\u7279\u5b9a\u7684\u683c\u5f0f\u8981\u6c42\uff1b\u540c\u6837system\uff1a\u524d\u7f00\u4e3a\u7cfb\u7edf\u4fdd\u7559 \u521b\u5efa\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u7ba1\u7406dev\u7a7a\u95f4 { \"CN\" : \"devuser\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"name\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"Beijing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } # \u4e0b\u8f7d\u8bc1\u4e66\u751f\u6210\u5de5\u5177 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 mv cfssl_linux-amd64 /usr/local/bin/cfssl wget https://https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 mv cfssljson_linux-amd64 /usr/local/bin/cfssljson wget https://https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 mv cfssl-certinfo_linux-amd64 /usr/local/bin/cfssl-certinfo cfssl gencert -ca = ca.crt -ca-key = ca.key -profile = kubernetes /root/devuser-csr.json | cfssljson -bare devuser # \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 export KUBE_APISERVER = \"https://172.20.0.113:6443\" kubectl config set-cluster kubernetes \\ --certificate-authority = /etc/kubernetes/ssl/ca.crt \\ --embed-certs = true \\ --server = $( KUBE_APISERVER ) \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials devuser \\ --client-certificate = /etc/kubernetes/ssl/devuser.pem \\ --client-key = /etc/kubernetes/ssl/devuser-key.pem \\ --embed-certs = true \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = devuser \\ --namespace = dev \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes --kubeconfig = devuser.kubeconfig cp -f ./devuser.kubeconfig /root.kube/config kubectl create rolebinding devuser-admin-binding --clusterrole = admin --user = devuser --namespace = dev \u51c6\u5165\u63a7\u5236 \u00b6 \u51c6\u5165\u63a7\u5236\u662fAPIServer\u7684\u63d2\u4ef6\u96c6\u5408\uff0c\u901a\u8fc7\u6dfb\u52a0\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u5b9e\u73b0\u989d\u5916\u7684\u51c6\u5165\u63a7\u5236\u89c4\u5219\uff0c\u751a\u81f3\u57fa\u4e8eAPIServer\u7684\u4e00\u4e9b\u4e3b\u8981\u529f\u80fd\u90fd\u9700\u8981\u901a\u8fc7Admission Controllers\u5b9e\u73b0\uff0c\u6bd4\u5982ServiceAccount \u9488\u5bf9\u4e0d\u540c\u7248\u672c\u7684\u51c6\u5165\u63a7\u5236\u63a8\u8350\u5217\u8868\uff1a1.14\u63a8\u8350 NamespaceLifecycle\u3001LimitRanger\u3001ServiceAccount\u3001DefaultStorageClass\u3001DefaultTolerationSeconds\u3001MutatingAdmissionWebhook\u3001ValidatingAdmssionWebhook\u3001ResourceQupta \u5217\u4e3e\u51e0\u4e2a\u63d2\u4ef6\u7684\u5de5\u5462\u4e2a NamespaceLifecycle\uff1a\u9632\u6b62\u5728\u4e0d\u5b58\u5728\u7684namespace\u4e0a\u521b\u5efa\u5bf9\u8c61\uff0c\u9632\u6b62\u5220\u9664\u7cfb\u7edf\u9884\u7f6enamespace\uff0c\u5220\u9664namespace\u65f6\uff0c\u8fde\u5e26\u5220\u9664\u5b83\u7684\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u3002 LimitRanger\uff1a\u786e\u4fdd\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4f1a\u8d85\u8fc7\u8d44\u6e90\u6240\u5728\u7684Namespace\u548cLimitRange\u7684\u9650\u5236 ServiceAccount\uff1a\u5b9e\u73b0\u4e86\u81ea\u52a8\u5316\u6dfb\u52a0ServiceAccount ResourceQupta\uff1a\u786e\u4fdd\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4f1a\u8d85\u8fc7\u8d44\u6e90\u7684ResourceQupta\u9650\u5236","title":"08 \u5b89\u5168"},{"location":"DevOps/15%20Kubernetes/08%20Kubernetes%20safety/#_1","text":"\u56f4\u7ed5APIServer\u6765\u8bbe\u8ba1\uff0c\u4f7f\u7528\u4e86\u8ba4\u8bc1\uff08Authentication\uff09\u3001\u9274\u6743\uff08Authorization\uff09\u3001\u51c6\u5165\u63a7\u5236\uff08AdmissionControl\uff09\u4e09\u90e8\u6765\u4fdd\u8bc1APIServer\u7684\u5b89\u5168","title":"\u673a\u5236\u8bf4\u660e"},{"location":"DevOps/15%20Kubernetes/08%20Kubernetes%20safety/#_2","text":"Http Token\u8ba4\u8bc1\uff1a\u751f\u6210\u4e00\u4e2a\u590d\u6742\u7684\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e00\u4e2aToken\u5bf9\u5e94\u4e00\u4e2a\u7528\u6237\u540d\u5b58\u50a8\u5728Api Server\u80fd\u8bbf\u95ee\u7684\u6587\u4ef6\u4e2d\u3002\u5f53\u5ba2\u6237\u7aef\u53d1\u8d77API\u8c03\u7528\u8bf7\u6c42\u65f6\uff0c\u9700\u8981\u5728HTTP Hander\u4e2d\u653e\u5165Token Http Base\u8ba4\u8bc1\uff1a\u7528\u6237\u540d+\u5bc6\u7801\uff0c\u4f7f\u7528BASE64\u7f16\u7801\u5c06\u5b57\u7b26\u4e32\u653e\u5728HTTP Request\u4e2d\u7684Heather Authorization\u57df\u91cc\u53d1\u9001\u5230\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u6536\u5230\u540e\u8fdb\u884c\u89e3\u7801\uff0c\u83b7\u53d6\u7528\u6237\u540d\u548c\u5bc6\u7801 \u6700\u4e25\u683c\u7684Https\u8bc1\u4e66\u8ba4\u8bc1\uff1a\u57fa\u4e8eCA\u6839\u8bc1\u4e66\u7b7e\u540d\u7684\u5ba2\u6237\u7aef\u8eab\u4efd\u8ba4\u8bc1\u65b9\u5f0f HTTPS\u8bc1\u4e66\u8ba4\u8bc1 \u9700\u8981\u8ba4\u8bc1\u7684\u8282\u70b9 \u4e24\u79cd\u7c7b\u578b Kubernetes\u7ec4\u4ef6\u5bf9API Server\u7684\u8bbf\u95ee\uff1akubectl\u3001Controller Manager\u3001Scheduler\u3001kubelet\u3001kube-proxy Kubernetes\u7ba1\u7406\u7684Pod\u5bf9\u5bb9\u5668\u7684\u8bbf\u95ee\uff1aPod\uff08dashboard\u4e5f\u662f\u4ee5Pod\u5f62\u5f0f\u8fd0\u884c\uff09 \u5b89\u5168\u6027\u8bf4\u660e Controller Manager\u3001Scheduler\u4e0eAPI Server\u5728\u540c\u4e00\u53f0\u673a\u5668\uff0c\u6240\u4ee5\u76f4\u63a5\u4f7f\u7528API Server\u7684\u975e\u5b89\u5168\u7aef\u53e3\u8bbf\u95ee\uff0c --insecure-bind-address=127.0.0.1 Kubectl\u3001Kubelet\u3001kube-proxy\u8bbf\u95eeAPI Server\u5c31\u90fd\u9700\u8981\u8bc1\u4e66\u8fdb\u884cHTTPS\u53cc\u5411\u8ba4\u8bc1 \u8bc1\u4e66\u9881\u53d1 \u624b\u52a8\u7b7e\u53d1\uff1a\u901a\u8fc7k8s\u96c6\u7fa4\u7684\u6839ca\u8fdb\u884c\u7b7e\u53d1HTTPS\u8bc1\u4e66 \u81ea\u52a8\u7b7e\u53d1\uff1akubelet\u9996\u6b21\u8bbf\u95eeAPI Server\u65f6\uff0c\u4f7f\u7528token\u505a\u8ba4\u8bc1\uff0c\u901a\u8fc7\u540eController Manager\u4f1a\u4e3akubelet\u751f\u6210\u4e00\u4e2a\u8bc1\u4e66\uff0c\u4ee5\u540e\u7684\u8bbf\u95ee\u90fd\u662f\u7528\u8bc1\u4e66\u505a\u8ba4\u8bc1\u4e86\u3002 kubeconfig kubeconfig \u6587\u4ef6\u5305\u542b\u96c6\u7fa4\u53c2\u6570\uff08CA\u8bc1\u4e66\u3001API Server\u5730\u5740\uff09\uff0c\u5ba2\u6237\u7aef\u53c2\u6570\uff08\u4e0a\u9762\u751f\u6210\u7684\u8bc1\u4e66\u548c\u79c1\u94a5\uff09\uff0c\u96c6\u7fa4context\u4fe1\u606f\uff08\u96c6\u7fa4\u540d\u79f0\u3001\u7528\u6237\u540d\uff09\u3002Kubenetes\u7ec4\u4ef6\u901a\u8fc7\u542f\u52a8\u65f6\u6307\u5b9a\u4e0d\u540c\u7684kubeconfig\u6587\u4ef6\u53ef\u4ee5\u5207\u6362\u5230\u4e0d\u540c\u7684\u96c6\u7fa4\u3002 ServiceAccount Pod\u4e2d\u7684\u5bb9\u5668\u8bbf\u95eeAPI Server\u3002\u56e0\u4e3aPod\u7684\u521b\u5efa\u3001\u9500\u6bc1\u65f6\u52a8\u6001\u7684\uff0c\u6240\u4ee5\u8981\u4e3a\u4ed6\u624b\u52a8\u751f\u6210\u8bc1\u4e66\u5c31\u4e0d\u884c\u4e86\uff0ckubernetes\u4f7f\u7528\u4e86Service Account\u89e3\u51b3\u4e86Pod\u8bbf\u95eeAPI Server\u7684\u8ba4\u8bc1\u95ee\u9898\u3002 Secret\u4e0eSA\u7684\u5173\u7cfb Kubernetes\u8bbe\u8ba1\u4e86\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61\u53eb\u505aSecret\uff0c\u5206\u4e3a\u4e24\u7c7b\u4e00\u79cd\u662fServiceAccount\u7684service-account-token\uff0c\u53e6\u4e00\u79cd\u662f\u7528\u4e8e\u4fdd\u5b58\u7528\u6237\u81ea\u5b9a\u4e49\u4fdd\u5bc6\u4fe1\u606f\u7684Opaque\u3002ServiceAccount\u4e2d\u7528\u5230\u5305\u542b\u4e09\u4e2a\u90e8\u5206\uff1aToken\u3001ca.crt\u3001namespace token\u662f\u4f7f\u7528API Server\u79c1\u94a5\u7b7e\u540d\u7684JWT\u3002\u7528\u4e8e\u8bbf\u95eeAPI Server\u65f6\uff0cServer\u7aef\u8ba4\u8bc1 ca.crt\uff0c\u6839\u8bc1\u4e66\u3002\u7528\u4e8eClient\u7aef\u9a8c\u8bc1API Server\u53d1\u9001\u7aef\u8bc1\u4e66 namespace\uff0c\u8868\u793a\u8fd9\u4e2aservice-account-token\u7684\u4f5c\u7528\u57df\u540d\u7a7a\u95f4 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2anamespace\u90fd\u4f1a\u6709\u4e00\u4e2aServiceAccount\uff0c\u5982\u679cPod\u5728\u521b\u5efa\u65f6\u6ca1\u6709\u6307\u5b9aServiceAccount\uff0c\u5c31\u4f1a\u4f7f\u7528Pod\u6240\u5c5e\u7684namespace\u7684ServiceAccount \u9ed8\u8ba4\u6302\u8f7d\u76ee\u5f55\uff1a/run/secrets/kubernetes.io/serviceaccount/ kubectl get secret --all-namespaces kubectl describe secret default-token-5gm94 --namespace = kube-system","title":"\u8ba4\u8bc1"},{"location":"DevOps/15%20Kubernetes/08%20Kubernetes%20safety/#_3","text":"\u8ba4\u8bc1\u53ea\u662f\u8bf4\u660e\u4e0d\u540c\u7ec4\u4ef6\u95f4\u662f\u5426\u53ef\u4ee5\u901a\u8baf\uff0c\u800c\u9274\u6743\u662f\u786e\u5b9a\u8bf7\u6c42\u65b9\u6709\u54ea\u4e9b\u8bbf\u95ee\u8d44\u6e90\u7684\u6743\u9650\u3002APIServer\u76ee\u524d\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u6388\u6743\u7b56\u7565\uff08\u901a\u8fc7APIServer\u7684\u542f\u52a8\u53c2\u6570\"--authorization-mode\"\u8bbe\u7f6e\uff09 AlwaysDeny\uff1a\u8868\u793a\u62d2\u7edd\u6240\u6709\u7684\u8bf7\u6c42\uff0c\u4e00\u822c\u7528\u4e8e\u6d4b\u8bd5 AlwaysAllow\uff1a\u5141\u8bb8\u63a5\u6536\u6240\u6709\u8bf7\u6c42\uff0c\u5982\u679c\u96c6\u7fa4\u4e0d\u9700\u8981\u6388\u6743\u6d41\u7a0b\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u8be5\u7b56\u7565 ABAC\uff08Attribute-Based Access Control\uff09:\u57fa\u4e8e\u5c5e\u6027\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u8868\u793a\u4f7f\u7528\u7528\u6237\u914d\u7f6e\u7684\u6388\u6743\u89c4\u5219\u5bf9\u7528\u6237\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\u548c\u63a7\u5236 Webhook\uff1a\u901a\u8fc7\u8c03\u7528\u5916\u90e8Rest\u670d\u52a1\u5bf9\u7528\u6237\u8fdb\u884c\u6388\u6743 RBAC\uff08Role-Based Access Control\uff09\uff1a\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u73b0\u884c\u9ed8\u8ba4\u89c4\u5219 RBAC\u6388\u6743\u6a21\u5f0f RBAC\uff08Role-Based Access Control\uff09\u57fa\u4e8e\u89d2\u8272\u7684\u8bbf\u95ee\u63a7\u5236\uff0c\u5728Kubernetes1.5\u4e2d\u5f15\u5165\uff0c\u73b0\u5728\u79f0\u4e3a\u9ed8\u8ba4\u6807\u51c6\u3002\u76f8\u5bf9\u5176\u4ed6\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\uff0c\u62e5\u6709\u4ee5\u4e0b\u4f18\u52bf \u5bf9\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\u548c\u975e\u8d44\u6e90\u5747\u62e5\u6709\u5b8c\u6574\u7684\u8986\u76d6 \u6574\u4e2aRBAC\u5b8c\u5168\u7531\u51e0\u4e2aAPI\u5bf9\u8c61\u5b8c\u6210\uff0c\u540c\u5176\u4ed6API\u5bf9\u8c61\u4e00\u6837\uff0c\u53ef\u4ee5\u7528kubectl\u6216API\u8fdb\u884c\u64cd\u4f5c \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u8c03\u6574\uff0c\u65e0\u9700\u91cd\u542fAPI Server RBAC\u7684API\u8d44\u6e90\u5bf9\u8c61\u8bf4\u660e RBAC\u5f15\u51654\u4e2a\u5fc3\u7684\u9876\u7ea7\u8d44\u6e90\u5bf9\u8c61\uff1arole\u3001clusterRole\u3001clusterRoleBinding\uff0c\u56db\u79cd\u5bf9\u8c61\u7c7b\u578b\u5747\u53ef\u4ee5\u901a\u8fc7kubectl\u4e0eAPI\u64cd\u4f5c \u6ce8\u610f\u26a0\ufe0f\uff1akubernetes\u5e76\u4e0d\u4f1a\u63d0\u4f9b\u7528\u6237\u7ba1\u7406\uff0c\u90a3\u4e48user\u3001group\u3001serviceAccount\u6307\u5b9a\u7684\u7528\u6237\u5728kubernetes\u7ec4\u4ef6\uff08kubectl\u3001kube-proxy\uff09\u6216\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u7528\u6237\u518d\u5411CA\u7533\u8bf7\u8bc1\u4e66\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u8bc1\u4e66\u8bf7\u6c42\u6587\u4ef6 { \"CN\" : \"admin\" \"host\" : [], \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 }, \"name\" : [ { \"C\" : \"CN\" \"ST\" : \"HangZhou\" \"L\" : \"XS\" , \"O\" : \"system:masters\" , \"OU\" : \"System\" } ] } APIServer\u4f1a\u628a\u5ba2\u6237\u7aef\u8bc1\u4e66\u7684CN\u5b57\u6bb5\u4f5c\u4e3aUser\uff0c\u628aname.0\u5b57\u6bb5\u4f5c\u4e3aGroup kubelet\u4f7f\u7528TLS Bootstaping\u8ba4\u8bc1\u65f6\uff0cAPIServer\u53ef\u4ee5\u4f7f\u7528Bootstrap Tokens\u6216\u8005Token authentication file\u9a8c\u8bc1 =token\uff0c\u65e0\u8bba\u54ea\u4e00\u79cd\uff0ckubernetes\u90fd\u4f1a\u4e3atoken\u7ed1\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684User\u548cGroup Pod\u4f7f\u7528serviceAccount\u8ba4\u8bc1\u65f6\uff0cservice-account-token\u4e2d\u7684JWT\u4f1a\u4fdd\u5b58User\u4fe1\u606f Role and ClusterRole \u5728RBAC API\u4e2d\uff0cRole\u8868\u793a\u4e00\u7ec4\u89c4\u5219\u6743\u9650\uff0c\u6743\u9650\u53ea\u4f1a\u589e\u52a0\uff08\u7d2f\u52a0\u6743\u9650\uff09\uff0c\u4e0d\u5b58\u5728\u4e00\u4e2a\u8d44\u6e90\u5df2\u5f00\u59cb\u5c31\u6709\u5f88\u591a\u6743\u9650\u800c\u901a\u8fc7RBAC\u5bf9\u5176\u8fdb\u884c\u51cf\u5c11\u7684\u64cd\u4f5c\uff1bRole\u53ef\u4ee5\u5b9a\u4e49\u5728\u4e00\u4e2anamespace\u4e2d\uff0c\u5982\u679c\u60f3\u8981\u5938namespace\u5219\u53ef\u4ee5\u521b\u5efaClusterRole kind : Role apiVerion : rbac.authorization.k8s.io/v1beta1 metadata : namespace : default name : pod-reader rules : - apiGroups : [ \"\" ] # \"\" indicates the core api group \u8d4b\u4e88API\u7248\u672c\u7684\u54ea\u4e2a\u7ec4 resources : [ \"pods\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] ClusterRole\u5177\u6709Role\u76f8\u540c\u7684\u6743\u9650\u89d2\u8272\u63a7\u5236\u80fd\u529b\uff0c\u4e0d\u540c\u7684\u662fClusterRole\u662f\u96c6\u7fa4\u7ea7\u522b\u7684\uff0cClusterRole\u53ef\u4ee5\u7528\u4e8e \u96c6\u7fa4\u7ea7\u522b\u7684\u8d44\u6e90\u63a7\u5236\uff08\u4f8b\u5982Node\u8bbf\u95ee\u6743\u9650\uff09 \u975e\u8d44\u6e90\u578bendpoint\uff08\u4f8b\u5982/healthz\u8bbf\u95ee\uff09 \u6240\u6709\u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u63a7\u5236\uff08\u4f8b\u5982pods\uff09 kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : secret-reader rules : - apiGroups : [ \"\" ] resources : [ \"secrets\" ] verbs : [ \"get\" , \"watch\" , \"list\" ] RoleBinding and ClusterBinding RoleBinding \u53ef\u4ee5\u5c06\u89d2\u8272\u4e2d\u5b9a\u4e49\u7684\u6743\u9650\u6388\u4e88\u7528\u6237\u6216\u7528\u6237\u7ec4\uff0cRoleBinding\u5305\u542b\u4e00\u7ec4\u6743\u9650\u5217\u8868\uff08subjects\uff09\uff0c\u6743\u9650\u91cc\u8868\u4e2d\u5305\u542b\u6709\u4e0d\u540c\u5f62\u5f0f\u7684\u5f85\u6388\u4e88\u6743\u9650\u8d44\u6e90\u7c7b\u578b\uff08user\u3001groups\u3001service accounts\uff09\uff1bRoleBinding\u540c\u6837\u5305\u542b\u5bf9\u88abBind\u7684Role\u5f15\u7528\uff1bRoleBinding\u9002\u7528\u4e8e\u67d0\u4e2a\u547d\u540d\u7a7a\u95f4\u5185\u6388\u6743\uff0c\u800cClusterRoleBinding\u9002\u7528\u4e8e\u96c6\u7fa4\u8303\u56f4\u5185\u7684\u6388\u6743 \u5c06default\u547d\u540d\u7a7a\u95f4\u7684 pod-reader \u7528\u6237\u6388\u6743\u4e0ejane\u7528\u6237\uff0c\u6b64\u540ejane\u7528\u6237\u5728default\u547d\u540d\u7a7a\u95f4\u4e2d\u5177\u6709 pod-reader \u7684\u6743\u9650 kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-pods namespace : default subjects : - kind : User name : jane apiGroup : rbac.authorization.k8s.io roleRef : kind : Role name : pod-reader apiGroup : rbac.authorization.k8s.io RoleBinding\u540c\u6837\u53ef\u4ee5\u5f15\u7528ClusterRole\u5bf9\u5f53\u524dnamespace\u5185\u7528\u6237\u3001\u7528\u6237\u7ec4\u6216ServiceAccount\u8fdb\u884c\u6388\u6743\uff0c\u8fd9\u79cd\u64cd\u4f5c\u5141\u8bb8\u96c6\u7fa4\u7ba1\u7406\u5458\u5728\u6574\u4e2a\u96c6\u7fa4\u5185\u5b9a\u4e49\u4e00\u4e9b\u901a\u7528\u7684ClusterRole\uff0c\u7136\u540e\u5728\u4e0d\u540c\u7684namespace\u4e2d\u4f7f\u7528RoleBinding\u6765\u5f15\u7528* \u4f8b\u5982\uff0c\u4ee5\u4e0bRoleBinding\u5f15\u7528\u4e86\u4e00\u4e2aClusterRole\uff0c\u8fd9\u4e2aClusterRole\u5177\u6709\u6574\u4e2a\u96c6\u7fa4\u5185\u5bf9secrets\u7684\u8bbf\u95ee\u6743\u9650\uff1b\u4f46\u662f\u5176\u6388\u6743\u7528\u6237dave\u53ea\u80fd\u8bbf\u95eedevelopment\u7a7a\u95f4\u4e2d\u7684secrets\uff08\u56e0\u4e3aRoleBinding\u5b9a\u4e49\u5728development\u547d\u540d\u7a7a\u95f4\uff09 kind : RoleBinding apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-secrets namespace : development subjects : - kind : User name : dave apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io \u4f7f\u7528ClusterRoleBinding\u53ef\u4ee5\u5bf9\u6574\u4e2a\u96c6\u7fa4\u4e2d\u6240\u6709\u547d\u540d\u7a7a\u95f4\u8d44\u6e90\u6743\u9650\u8fdb\u884c\u6388\u6743\uff1b\u4ee5\u4e0bClusterRoleBinding\u6837\u4f8b\u5c55\u793a\u4e86\u6388\u6743manager\u7ec4\u5185\u6240\u6709\u7528\u6237\u5728\u5168\u90e8\u547d\u540d\u7a7a\u95f4\u4e2d\u5bf9secrets\u8fdb\u884c\u8bbf\u95ee kind : ClusterRole apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : read-secrets-global subjects : - kind : Group name : manager apiGroup : rbac.authorization.k8s.io roleRef : kind : ClusterRole name : secret-reader apiGroup : rbac.authorization.k8s.io Resources kubernetes\u96c6\u7fa4\u5185\u4e00\u4e9b\u8d44\u6e90\u4e00\u822c\u4ee5\u5176\u540d\u79f0\u5b57\u7b26\u4e32\u6765\u8868\u793a\uff0c\u8fd9\u4e9b\u5b57\u7b26\u4e32\u4e00\u822c\u4f1a\u5728API\u7684Url\u5730\u5740\u4e2d\u51fa\u73b0\uff1b\u540c\u65f6\u67d0\u4e9b\u8d44\u6e90\u4e5f\u4f1a\u5305\u542b\u5b50\u8d44\u6e90\uff0c\u4f8b\u5982logs\u8d44\u6e90\u5c31\u5c5e\u4e8epods\u7684\u5b50\u8d44\u6e90\uff0cAPI\u4e2d\u7684url\u6837\u4f8b\u5982\u4e0b GET /api/v1/namespaces/{namespace}/pods/{name}/log \u5982\u679c\u8981\u5728RBAC\u6388\u6743\u6a21\u578b\u4e2d\u63a7\u5236\u8fd9\u4e9b\u5b50\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u53ef\u4ee5\u901a\u8fc7/\u5206\u9694\u7b26\u6765\u5b9e\u73b0\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b9a\u4e49pods\u8d44\u6e90logs\u8bbf\u95ee\u6743\u9650\u7684Role\u5b9a\u4e49\u6837\u4f8b kind : Role apiVersion : rbac.authorization.k8s.io/v1beta1 metadata : name : default name : pod-and-pod-logs-reader rules : - apiGroups : [ \"\" ] resources : [ \"pods\" , \"pods/log\" ] verbs : [ \"get\" , \"list\" ] to Subjects RoleBinding\u548cClusterRoleBinding\u53ef\u4ee5\u5c06Role\u7ed1\u5b9a\u5230Subjects\uff1bSubjects\u53ef\u4ee5\u662fgroups\u3001users\u6216\u8005\u662fservice accounts Subjects\u4e2dUsers\u4f7f\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u666e\u901a\u7684\u540d\u5b57\u5b57\u7b26\u4e32\uff0c\u5982\"alice\";\u4e5f\u53ef\u4ee5\u662femail\u683c\u5f0f\u7684\u90ae\u7bb1\u5730\u5740\uff0c\u5982\" liangml0528@163.com \";\u751a\u81f3\u662f\u4e00\u7ec4\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57ID\u3002\u4f46\u662fUsers\u7684\u524d\u7f00system\uff1a\u662f\u7cfb\u7edf\u4fdd\u7559\u7684\uff0c\u96c6\u7fa4\u7ba1\u7406\u5458\u53ef\u4ee5\u786e\u4fdd\u666e\u901a\u7528\u6237\u4e0d\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u524d\u7f00\u7684\u683c\u5f0f Groups\u4e66\u5199\u683c\u5f0f\u4e0eUsers\u76f8\u540c\uff0c\u90fd\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u6ca1\u6709\u7279\u5b9a\u7684\u683c\u5f0f\u8981\u6c42\uff1b\u540c\u6837system\uff1a\u524d\u7f00\u4e3a\u7cfb\u7edf\u4fdd\u7559 \u521b\u5efa\u4e00\u4e2a\u7528\u6237\u53ea\u80fd\u7ba1\u7406dev\u7a7a\u95f4 { \"CN\" : \"devuser\" , \"hosts\" : [] , \"key\" : { \"algo\" : \"rsa\" , \"size\" : 2048 } , \"name\" : [ { \"C\" : \"CN\" , \"ST\" : \"BeiJing\" , \"L\" : \"Beijing\" , \"O\" : \"k8s\" , \"OU\" : \"System\" } ] } # \u4e0b\u8f7d\u8bc1\u4e66\u751f\u6210\u5de5\u5177 wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 mv cfssl_linux-amd64 /usr/local/bin/cfssl wget https://https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 mv cfssljson_linux-amd64 /usr/local/bin/cfssljson wget https://https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 mv cfssl-certinfo_linux-amd64 /usr/local/bin/cfssl-certinfo cfssl gencert -ca = ca.crt -ca-key = ca.key -profile = kubernetes /root/devuser-csr.json | cfssljson -bare devuser # \u8bbe\u7f6e\u96c6\u7fa4\u53c2\u6570 export KUBE_APISERVER = \"https://172.20.0.113:6443\" kubectl config set-cluster kubernetes \\ --certificate-authority = /etc/kubernetes/ssl/ca.crt \\ --embed-certs = true \\ --server = $( KUBE_APISERVER ) \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u5ba2\u6237\u7aef\u8ba4\u8bc1\u53c2\u6570 kubectl config set-credentials devuser \\ --client-certificate = /etc/kubernetes/ssl/devuser.pem \\ --client-key = /etc/kubernetes/ssl/devuser-key.pem \\ --embed-certs = true \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u4e0a\u4e0b\u6587\u53c2\u6570 kubectl config set-context kubernetes \\ --cluster = kubernetes \\ --user = devuser \\ --namespace = dev \\ --kubeconfig = devuser.kubeconfig # \u8bbe\u7f6e\u9ed8\u8ba4\u4e0a\u4e0b\u6587 kubectl config use-context kubernetes --kubeconfig = devuser.kubeconfig cp -f ./devuser.kubeconfig /root.kube/config kubectl create rolebinding devuser-admin-binding --clusterrole = admin --user = devuser --namespace = dev","title":"\u9274\u6743"},{"location":"DevOps/15%20Kubernetes/08%20Kubernetes%20safety/#_4","text":"\u51c6\u5165\u63a7\u5236\u662fAPIServer\u7684\u63d2\u4ef6\u96c6\u5408\uff0c\u901a\u8fc7\u6dfb\u52a0\u4e0d\u540c\u7684\u63d2\u4ef6\uff0c\u5b9e\u73b0\u989d\u5916\u7684\u51c6\u5165\u63a7\u5236\u89c4\u5219\uff0c\u751a\u81f3\u57fa\u4e8eAPIServer\u7684\u4e00\u4e9b\u4e3b\u8981\u529f\u80fd\u90fd\u9700\u8981\u901a\u8fc7Admission Controllers\u5b9e\u73b0\uff0c\u6bd4\u5982ServiceAccount \u9488\u5bf9\u4e0d\u540c\u7248\u672c\u7684\u51c6\u5165\u63a7\u5236\u63a8\u8350\u5217\u8868\uff1a1.14\u63a8\u8350 NamespaceLifecycle\u3001LimitRanger\u3001ServiceAccount\u3001DefaultStorageClass\u3001DefaultTolerationSeconds\u3001MutatingAdmissionWebhook\u3001ValidatingAdmssionWebhook\u3001ResourceQupta \u5217\u4e3e\u51e0\u4e2a\u63d2\u4ef6\u7684\u5de5\u5462\u4e2a NamespaceLifecycle\uff1a\u9632\u6b62\u5728\u4e0d\u5b58\u5728\u7684namespace\u4e0a\u521b\u5efa\u5bf9\u8c61\uff0c\u9632\u6b62\u5220\u9664\u7cfb\u7edf\u9884\u7f6enamespace\uff0c\u5220\u9664namespace\u65f6\uff0c\u8fde\u5e26\u5220\u9664\u5b83\u7684\u6240\u6709\u8d44\u6e90\u5bf9\u8c61\u3002 LimitRanger\uff1a\u786e\u4fdd\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4f1a\u8d85\u8fc7\u8d44\u6e90\u6240\u5728\u7684Namespace\u548cLimitRange\u7684\u9650\u5236 ServiceAccount\uff1a\u5b9e\u73b0\u4e86\u81ea\u52a8\u5316\u6dfb\u52a0ServiceAccount ResourceQupta\uff1a\u786e\u4fdd\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0d\u4f1a\u8d85\u8fc7\u8d44\u6e90\u7684ResourceQupta\u9650\u5236","title":"\u51c6\u5165\u63a7\u5236"},{"location":"DevOps/15%20Kubernetes/09%20Kubernetes%20storage/","text":"\u5206\u7c7b configMap\uff08\u8d77\u5230\u5b58\u50a8\u914d\u7f6e\u6587\u4ef6\u7684\u529f\u80fd\uff09 \u4f7f\u7528\u76ee\u5f55\u521b\u5efa kubectl create configmap game-config --from-file=docs/user-guide/configmap/kubectl --from-file \u6307\u5b9a\u5728\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u90fd\u4f1a\u88ab\u7528\u5728configmap\u91cc\u9762\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u952e\u7684\u540d\u5b57\u5c31\u662f\u6587\u4ef6\u540d\uff0c\u503c\u5c31\u662f\u6587\u4ef6\u7684\u5185\u5bb9 \u76ee\u5f55\u4e2d\u6709\u4e24\u4e2a\u6587\u4ef6 $ cat docs/game.properties enemies = aliens lives = 3 enemies.cheat = true enemies.cheat.level = noGoodRotten secret.code.passphrase = UUDDLRLRBABAS secret.code.allowed = true secret.code.lives = 30 $ cat docs/ui.properties color.good = purple color.bad = yellow allow.textmod = true how.nice.to.look = fairlyNice kubectl get cm kubectl describe cm game-config kubectl get cm game-config -o yaml kubectl create configmap game-config --from-file = ../dir/ # \u521b\u5efaconfigmap \u4f7f\u7528\u6587\u4ef6\u521b\u5efa kubectl create configmap game-config --from-file=../game.properties \u4e0e\u76ee\u5f55\u521b\u5efa\u5e76\u65e0\u4ec0\u4e48\u533a\u522b\u53ea\u662f\u5c06\u76ee\u5f55\u6362\u6210\u6587\u4ef6 \u4f7f\u7528\u5b57\u9762\u503c\u521b\u5efa --from-literal \u4f7f\u7528\u5b57\u9762\u503c\u7684\u65b9\u5f0f\u521b\u5efa\u8be5\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21 , kubectl create configmap special-config --from-literal=specal.how=very --from-literal=special.type=charm kubectl get cm special-config -o yaml Pod\u4e2dConfigMap\u4f7f\u7528 \u4f7f\u7528ConfigMap\u6765\u4ee3\u66ff\u73af\u5883\u53d8\u91cf apiVersion : v1 kind : ConfigMap metadata : name : special-config namespace : default data : special.how : very special.type : charm apiVersion : v1 kind : ConfigMap metadata : name : env-config namespace : default data : log_level : INFO apiVersion : v1 kind : Pod metadata : name : dapi-test-pod spec : containers : - name : test-container image : nginx command : - /bin/sh - -c - env env : # \u6307\u5b9a\u5bfc\u5165\u65b9\u5f0f - name : SPECIAL_LEVEL_KEY valueFrom : configMapkeyRef : name : special-config key : special.how - name : SPECIAL_LEVEL_KEY valueFrom : configMapkeyRef : name : special-config key : special.type envFrom : # \u5168\u90e8\u5bfc\u5165\u65b9\u5f0f - configMapRef : name : env-config restartPolicy : Never ConfigMap\u8bbe\u7f6e\u547d\u4ee4\u884c\u53c2\u6570 apiVersion : v1 kind : Pod metadata : name : dapi-test-pod spec : containers : - name : test-container image : nginx command : # command\u65b9\u5f0f\u5bfc\u5165 - /bin/sh - -c - echo $(SPECIAL_LEVEL_KEY) $(SPECIAL_TYPE_KEY) env : # \u6307\u5b9a\u5bfc\u5165\u65b9\u5f0f - name : SPECIAL_LEVEL_KEY valueFrom : configMapkeyRef : name : special-config key : special.how - name : SPECIAL_LEVEL_KEY valueFrom : configMapkeyRef : name : special-config key : special.type restartPolicy : Never \u901a\u8fc7\u6570\u636e\u5377\u63d2\u4ef6\u4f7f\u7528 apiVersion : v1 kind : Pod metadata : name : dapi-test-pod spec : containers : - name : test-container image : nginx command : - /bin/sh - -c - cat /etc/config/special.how volumeMounts : - name : config-volume mountPath : /etc/config volumes : - name : config-volume configMap : name : special-config restartPolicy : Never ConfigMap\u70ed\u66f4\u65b0 apiVersion : v1 kind : ConfigMap metadata : name : log-config namespace : default data : log_level : INFO --- apiVersion : extensions/v1beta1 kind : Deployment metadata : name : my-nginx spec : replicas : 1 template : metadata : labels : run : my-nginx spec : containers : - name : my-nginx image : nginx ports : - containerPort : 80 volumeMounts : - name : config-volume mountPath : /etc/config volumes : - name : config-volume configMap : name : log-config \u4fee\u6539ConfigMap\uff0c\u7b49\u5f85\u5927\u7ea610s\u949f\u65f6\u95f4 kubectl edit configmap log-config \u5982\u679c\u60f3\u8fbe\u5230\u70ed\u66f4\u65b0\u7684\u6548\u679c\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539 pod annottations \u7684\u65b9\u5f0f\u5f3a\u5236\u89e6\u53d1\u6eda\u52a8\u66f4\u65b0 \u8fd9\u4e2a\u4f8b\u5b50\u91cc\u6211\u4eec\u5728 .spec.template.metadata.annotations \u4e2d\u6dfb\u52a0version/config,\u6bcf\u6b21\u901a\u8fc7\u4fee\u6539version/config\u6765\u89e6\u53d1\u6eda\u52a8\u66f4\u65b0 kubctl patch deployment my-nginx --patch '{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"version/config\":\"20190411\"}}}}}' Secret\uff08\u52a0\u5bc6\u7684\u4fe1\u606f\uff09 Service Account\uff1a\u7528\u6765\u8bbf\u95eeKubernetes API\uff0c\u7531k8s\u81ea\u52a8\u521b\u5efa\uff0c\u5e76\u4e14\u6302\u8f7d\u5230Pod\u7684 /run/secrets/kubernetes.io/serviceaccount \u76ee\u5f55\u4e2d\uff08 Pod\u8bbf\u95eeapiServer\u65b9\u5f0f \uff09 Opaque\uff1abase64\u7f16\u7801\u683c\u5f0f\u7684Secret\uff0c\u7528\u6765\u5b58\u50a8\u5bc6\u7801\u3001\u5bc6\u94a5\u7b49 map\u7c7b\u578b\uff0c\u8981\u6c42value \u662fbase64\u7f16\u7801\u683c\u5f0f \u279c ~ echo -n \"admin\" | base64 YWRtaW4 = \u279c ~ echo -n \"YWRtaW4=\" | base64 WVdSdGFXND0 = \u279c ~ echo -n \"YWRtaW4=\" | base64 -d admin apiVersion : v1 kind : Secert metadata : name : mysecert type : Opaque data : password : WVdSdGFXND0= username : YWRtaW4= \u4f7f\u7528\u65b9\u5f0f \u6302\u8f7d\u5230volume apiVersion : v1 kind : Pod metadata : name : secret-test labels : name : secret-test spec : volumes : - name : secrets secret : secretName : mysecret containers : - name : db image : nginx volumeMounts : - name : secrets mountPath : \"/etc/secrets\" readOnly : true \u5bfc\u5165\u5230\u73af\u5883\u53d8\u91cf apiVersion : apps/v1 kind : Deployment metadata : name : pod-deployment spec : replicas : 2 selector : matchLabels : app : pod-deployment template : metadata : labels : app : pod-deployment spec : containers : - name : pod-1 image : nginx ports : - containerPort : 80 env : - name : TEST_USER valueFrom : secretKeyRef : key : username name : mysecret - name : TEST_PASSWORD valueFrom : secretKeyRef : key : password name : mysecret Kubernetes.io/dockerconfigjson\uff1a\u7528\u6765\u5b58\u50a8\u79c1\u6709docker registry\u7684\u8ba4\u8bc1\u4fe1\u606f \u4f7f\u7528kubectl\u521b\u5efadocker registry \u8ba4\u8bc1\u7684secret kubectl create secret docker-registry myregistrykey --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL \u521b\u5efaPod\u7684\u65f6\u5019\u901a\u8fc7 imagePullSecrets\u6765\u5f15\u7528\u521a\u521b\u5efa\u7684 myregistrykey apiVersion : v1 kind : Pod metadata : name : foo spec : containers : - name : foo image : nginx imagesPullSecrets : - name : myregistrykey volume\uff08Pod\u63d0\u4f9b\u5b58\u50a8\u5377\uff09 k8s\u652f\u6301\u5b58\u50a8\u5377\u7684\u7c7b\u578b awsElasticBlockStore\u3001azureDisk\u3001azureFile\u3001cephfs\u3001csi\u3001downwardAPIemtyDir fs\u3001flocker\u3001gcepersistentDisk\u3001gitRepo\u3001glusterfs\u3001hostPath\u3001iscsi\u3001local\u3001nfs persistentVolumeClaim\u3001projected\u3001portworxVolume\u3001quobyte\u3001rbd\u3001scaleIO\u3001secret storageos\u3001vsphereVolume emptyDir Pod\u542f\u52a8\u65f6\u4f1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u76ee\u5f55\uff0c\u5177\u6709\u8bfb\u5199\u7684\u6743\u9650\u3002\u4efb\u4f55\u539f\u56e0\u4ece\u8282\u70b9\u4e2d\u5220\u9664Pod\u65f6\uff0cemptyDir\u4e2d\u7684\u6570\u636e\u88ab\u6c38\u4e45\u5220\u9664\uff08\u5d29\u6e83\u4e0d\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931\uff09 \u7528\u9014 \u6682\u5b58\u7a7a\u95f4\uff0c\u4f8b\u5982\u7528\u4e8e\u57fa\u4e8e\u78c1\u76d8\u7684\u5408\u5e76\u6392\u5e8f \u7528\u4f5c\u957f\u65f6\u95f4\u8ba1\u7b97\u5d29\u6e83\u6062\u590d\u7684\u68c0\u67e5\u70b9 Web\u670d\u52a1\u5668\u5bb9\u5668\u63d0\u4f9b\u6570\u636e\u65f6\uff0c\u4fdd\u5b58\u5185\u5bb9\u7ba1\u7406\u5668\u5bb9\u5668\u63d0\u53d6\u7684\u6587\u4ef6 apiVersion : v1 kind : Pod metadata : name : test-pd spec : containers : - name : test-container image : nginx volumeMounts : - mountPath : /cache name : cache-volume volumes : - name : cache-volume emptyDir : {} hostPath\uff1a\u5c06\u4e3b\u673a\u8282\u70b9\u7684\u6587\u4ef6\u7cfb\u7edf\u6587\u4ef6\u6216\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e2d \u7528\u9014\uff1a \u8fd0\u884c\u65f6\u9700\u8981\u8bbf\u95eeDocker\u5185\u90e8\u7684\u5bb9\u5668\uff1b\u4f7f\u7528 /var/lib/docker \u7684 hostPath \u5728\u5bb9\u5668\u4e2d\u8fd0\u884ccAdvisor\uff1b\u4f7f\u7528 /dev/cgroups \u7684 hostPath \u9664\u4e86\u6240\u9700\u7684path\u5c5e\u6027\u4e4b\u5916\uff0c\u7528\u6237\u8fd8\u53ef\u4ee5\u4e3ahostPath \u5377\u6307\u5b9a type \u503c \u884c\u4e3a \u7a7a\u5b57\u7b26\u4e32\uff08\u9ed8\u8ba4\uff09\u7528\u4e8e\u540e\u517c\u5bb9\uff0c\u8fd9\u610f\u5473\u7740\u5728\u6302\u8f7dhostPath\u5377\u4e4b\u524d\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u68c0\u67e5 DirectoryOrCreate \u5982\u679c\u5728\u7ed9\u5b9a\u7684\u8def\u5f84\u4e0a\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u5b58\u5728\uff0c\u90a3\u4e48\u5c06\u6839\u636e\u9700\u8981\u5728\u521b\u5efa\u4e00\u4e2a\u7a7a\u76ee\u5f55\u6743\u9650\u4e3a0755\uff0c\u4e0ekubelet\u5177\u6709\u76f8\u540c\u7ec4\u548c\u6240\u6709\u6743 Directory \u7ed9\u5b9a\u7684\u8def\u5f84\u4e0b\u5fc5\u987b\u5b58\u5728\u76ee\u5f55 FileOrCreate \u5982\u679c\u4e0d\u5b58\u5728\u6587\u4ef6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a0644\u6743\u9650\u7684\u6587\u4ef6\uff0c\u4e0ekubelet\u5177\u6709\u76f8\u540c\u7ec4\u548c\u6240\u6709\u6743 File \u7ed9\u5b9a\u7684\u8def\u5f84\u4e0b\u5fc5\u987b\u5b58\u5728\u6587\u4ef6 Socket \u7ed9\u5b9a\u7684\u8def\u5f84\u4e0b\u4e0d\u8bb8\u5b58\u5728Unix\u5957\u63a5\u5b57 CharDevice \u7ed9\u5b9a\u7684\u8def\u5f84\u4e0b\u5fc5\u987b\u5b58\u5728\u5b57\u7b26\u8bbe\u5907 BlockDevice \u7ed9\u5b9a\u7684\u8def\u5f84\u4e0b\u5fc5\u987b\u5b58\u5728\u5757\u8bbe\u5907 \u6ce8\u610f \u7531\u4e8e\u6bcf\u4e2a\u53ca\u8bf6\u5355\u7684\u6587\u4ef6\u90fd\u4e0d\u540c\uff0c\u5177\u6709\u76f8\u540c\u914d\u7f6e\uff08\u4f8b\u5982\u4ecePodTempate\u521b\u5efa\uff09\u7684Pod\u5728\u4e0d\u540c\u8282\u70b9\u4e0a\u7684\u884c\u4e3a\u53ef\u80fd\u4f1a\u6709\u6240\u4e0d\u540c \u5f53k8s\u6309\u7167\u8ba1\u5212\u6dfb\u52a0\u8d44\u6e90\u611f\u77e5\u8c03\u5ea6\u65f6\uff0c\u5c06\u65e0\u6cd5\u8003\u8651hostPath\u4f7f\u7528\u7684\u8d44\u6e90 \u5728\u5e95\u5c42\u4e3b\u673a\u4e0a\u521b\u5efa\u7684\u6587\u4ef6\u6d3b\u76ee\u5f55\u53ea\u80fd\u7531root\u5199\u5165\u3002\u9700\u8981\u5728\u7279\u6743\u5bb9\u5668\u4e2d\u4ee5root\u8eab\u4efd\u8fd0\u884c\u8fdb\u7a0b\uff0c\u6216\u4fee\u6539\u4e3b\u673a\u7684\u8bfb\u5199\u6743\u9650 apiVersion : v1 kind : Pod metadata : name : test-pd spec : containers : - name : test-container image : nginx volumeMounts : - mountPath : /test-pd name : test-volume volumes : - name : test-volume hostPath : # directory location on host path : /data # this field is optional type : Directory Persistent Volume\uff08\u6301\u4e45\u5377\uff09 PersistentVolume\uff08PV\uff09\uff1a volume\u5b58\u50a8\u63d2\u4ef6 \uff0c\u5177\u6709\u72ec\u7acb\u4f7f\u7528PV\u7684Pod\u751f\u547d\u5468\u671f\u3002\u6b64API\u5305\u542b\u5b58\u50a8\u5b9e\u73b0\u7684\u7ec6\u8282\uff0c\u5373Nfs\u3001iscsi\u8d27\u7279\u5b9a\u4e91\u5382\u5546\u7684\u5b58\u50a8\u7cfb\u7edf \u9759\u6001PV\uff1a\u7ba1\u7406\u4e91\u53ef\u4ee5\u521b\u5efa\u4e00\u4e9bPV\uff0c\u5b83\u5e26\u6709\u53ef\u4f9b\u96c6\u7fa4\u7528\u6237\u4f7f\u7528\u7684\u5b9e\u9645\u5b58\u50a8\u7ec6\u8282\uff0c\u5b58\u5728\u4e8ek8s API \u4e2d\uff0c\u53ef\u7528\u4e8e\u6d88\u8d39 \u52a8\u6001PV\uff08\u4e0d\u53cb\u597d\uff09\uff1a\u5f53\u7ba1\u7406\u5458\u521b\u5efa\u7684\u9759\u6001PV\u90fd\u4e0d\u5339\u914d\u7528\u6237\u7684PersistentVolumeClaim\u65f6\uff0c\u96c6\u7fa4\u53ef\u80fd\u4f1a\u5c1d\u8bd5\u52a8\u6001\u5730\u4e3aPVC\u521b\u5efa\u5377\u3002\u6b64\u914d\u7f6e\u57fa\u4e8e StorageClasses :PVC\u5fc5\u987b\u8bf7\u6c42[\u5b58\u50a8\u7c7b]\uff0c\u5e76\u4e14\u7ba1\u7406\u5458\u5fc5\u987b\u521b\u5efa\u5e76\u914d\u7f6e\u8be5\u7c7b\u624d\u80fd\u8fdb\u884c\u52a8\u6001\u521b\u5efa\u3002\u7533\u660e\u8be5\u7c7b\u4e3a\"\"\u53ef\u4ee5\u6709\u6548\u5730\u4ec5\u7528\u5176\u4ed6\u52a8\u6001\u914d\u7f6e\u3002 \u8981\u542f\u7528\u57fa\u4e8e\u5b58\u50a8\u7ea7\u522b\u7684\u52a8\u6001\u5b58\u50a8\u914d\u7f6e\uff0c\u96c6\u7fa4\u7ba1\u7406\u5458\u9700\u8981\u542f\u7528API Server\u4e0a\u7684DefaultStorageClass[\u51c6\u5165\u63a7\u5236\u5668]\u3002\u4f8b\u5982\uff0c\u901a\u8fc7DefaultStorageClass\u4f4d\u4e8eAPI Server\u7ec4\u4ef6\u7684--admission-control\u6807\u5fd7\uff0c\u4f7f\u7528\u5206\u9694\u7684\u6709\u5e8f\u503c\u91cc\u8868\u4e2d\uff0c\u53ef\u4ee5\u5b8c\u6210\u6b64\u64cd\u4f5c \u7ed1\u5b9a\uff1amaster\u4e2d\u7684\u63a7\u5236\u73af\u8def\u76d1\u89c6\u65b0\u7684PVC\uff0c\u5bfb\u627e\u5339\u914d\u7684PV\uff08\u5982\u679c\u53ef\u80fd\uff09\uff0c\u5e76\u5c06\u5b83\u4eec\u7ed1\u5b9a\u5230\u4e00\u8d77\u3002\u5982\u679c\u65b0\u7684PVC\u52a8\u6001\u8c03\u914dPV\uff0c\u5219\u8be5\u73af\u8def\u59cb\u7ec8\u5c06PV\u7ed1\u5b9a\u5230PVC\u3002\u5426\u5219\uff0c\u7528\u6237\u603b\u4f1a\u5f97\u5230\u4ed6\u4eec\u6240\u8bf7\u6c42\u7684\u5b58\u50a8\uff0c\u4f46\u662f\u5bb9\u91cf\u53ef\u80fd\u8d85\u51fa\u8981\u6c42\u7684\u6570\u91cf\u3002\u4e00\u65e6PV\u548cPVC\u7ed1\u5b9a\u540e\uff0c PersistentVolumeClain \u7ed1\u5b9a\u65f6\u6392\u4ed6\u6027\u7684\uff0c\u4e0d\u7ba1\u4ed6\u4eec\u662f\u5982\u4f55\u7ed1\u5b9a\u7684\u3002PVC\u6839PV\u7ed1\u5b9a\u65f6\u4e00\u5bf9\u4e00\u6620\u5c04\u3002 \u6301\u4e45\u5316\u5377\u7533\u660e\u7684\u4fdd\u62a4 PVC\u4fdd\u62a4\u7684\u76ee\u7684\u662f\u786e\u4fddPod\u6b63\u5728\u4f7f\u7528\u7684\u7684PVC\u4e0d\u4f1a\u4ece\u7cfb\u7edf\u4e2d\u79fb\u9664\uff0c\u79fb\u9664\u4f1a\u5bfc\u81f4\u6570\u636e\u4e22\u5931 \u5f53\u542f\u7528PVC\u4fdd\u62a4alpha\u529f\u80fd\u65f6\uff1b\u5982\u679c\u7528\u6237\u5220\u9664\u4e86\u4e00\u4e2apod\u6b63\u5728\u4f7f\u7528\u7684PVC\uff0c\u5219\u8be5PVC\u4e0d\u4f1a\u7acb\u5373\u5220\u9664\u3002PVC\u5220\u9664\u5c06\u88ab\u63a8\u8fdf\uff0c\u76f4\u9053PVC\u4e0d\u518d\u88ab\u4efb\u4f55Pod\u4f7f\u7528\u3002 \u6301\u4e45\u5316\u5377\u7c7b\u578b PersistentVolume\u7c7b\u578b\u4ee5\u63d2\u4ef6\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002k8s\u652f\u6301\u4ee5\u4e0b\u63d2\u4ef6\u7c7b\u578b\uff1a GCEPersistentDisk AWSElasticsBlockStore AzureFile AzureDisk FC(Fibre Channel) FlexVolume Flocker Nfs iSCSI RBD(Ceph Block Device) CephFS Cinder(OpenStack Block storage) Glusterfs VsphereVolume Qupbyte Volumes HostPath VMware Photon Portworx Volumes ScaleIO Volumes StoreageOS \u6301\u4e45\u5316\u6f14\u793a\u4ee3\u7801 apiVersion : v1 kind : PersistentVolume metadata : name : pv0003 spec : capacity : storage : 5Gi volumeMode : Filesystem accessMode : - ReadWriteOnce # \u53ea\u5141\u8bb8\u4e00\u4e2a\u8bfb\u5199 persistentVolumeReclaimPolicy : Recycle # \u56de\u6536\u7b56\u7565 storageClassName : slow # \u5b58\u50a8\u7c7b\u540d\u79f0\u5212\u5206\u5b58\u50a8\u60c5\u51b5\u7b49\u7ea7\uff08\u5feb/\u6162\uff09 mountOptions : - hard - nfsvers=4.1 nfs : path : /tmp server : 172.17.0.2 PV\u8bbf\u95ee\u6a21\u5f0f PersistentVolume \u53ef\u4ee5\u4ee5\u8d44\u6e90\u63d0\u4f9b\u8005\u652f\u6301\u7684\u4efb\u4f55\u65b9\u5f0f\u6302\u8f7d\u5230\u4e3b\u673a\u4e0a\u3002\u5982\u4e0b\u8868\u6240\u793a\uff0c\u4f9b\u5e94\u5546\u5177\u6709\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u6bcf\u4e2aPV\u7684\u8bbf\u95ee\u6a21\u5f0f\u90fd\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u8be5\u7c7b\u5377\u652f\u6301\u7684\u7279\u5b9a\u6a21\u5f0f\u3002\u4f8b\u5982\uff0cNFS\u53ef\u4ee5\u652f\u6301\u591a\u4e2a\u8bfb/\u5199\u5ba2\u6237\u7aef\uff0c\u4f46\u7279\u5b9a\u7684NFS PV\u53ef\u4ee5\u80fd\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u5bfc\u51fa\u5230\u670d\u52a1\u5668\u4e0a\u3002\u6bcf\u4e2aPV\u90fd\u6709\u4e00\u5957\u81ea\u5df1\u7684\u7528\u6765\u63cf\u8ff0\u7279\u5b9a\u529f\u80fd\u7684\u8bbf\u95ee\u6a21\u5f0f ReadWriteOnce -- \u8be5\u5377\u53ef\u4ee5\u88ab\u803d\u6401\u8282\u70b9\u4ee5\u8bfb/\u5199\u6a21\u5f0f\u6302\u8f7d ReadOnlyMany -- \u8be5\u5377\u53ef\u4ee5\u88ab\u591a\u4e2a\u8282\u70b9\u4ee5\u53ea\u8bfb\u6a21\u5f0f\u6302\u8f7d ReadWriteMany -- \u8be5\u5377\u53ef\u4ee5\u88ab\u591a\u4e2a\u8282\u70b9\u4ee5\u8bfb/\u5199\u6a21\u5f0f\u6302\u8f7d \u547d\u4ee4\u884c\u4e2d\uff0c\u8bbf\u95ee\u6a21\u5f0f\u7f29\u5199\u4e3a\uff1a RWO - ReadWriteOnce ROX - ReadOnlyMany RWX - ReadWriteMany \u4e00\u4e2a\u5377\u53ea\u80fd\u4f7f\u7528\u4e00\u79cd\u8bbf\u95ee\u6a21\u5f0f\u6302\u8f7d\uff0c\u5373\u4f7f\u5b83\u652f\u6301\u5f88\u591a\u8bbf\u95ee\u6a21\u5f0f\u3002\u4f8b\u5982\uff0cGCEPersistentDisk\u53ef\u4ee5\u7531\u5355\u4e2a\u8282\u70b9\u4e3aReadWriteOnce\u6a21\u5f0f\u6302\u8f7d\uff0c\u6216\u7531\u591a\u4e2a\u8282\u70b9\u4ee5ReadOnlyMany\u6a21\u5f0f\u6302\u8f7d\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u6302\u8f7d \u56de\u6536\u7b56\u7565 Retain\uff08\u4fdd\u7559\uff09-- \u624b\u52a8\u56de\u6536 Recycle\uff08\u56de\u6536\uff09-- \u57fa\u672c\u64e6\u9664\uff08rm -rf /thevolume/*\uff09 Delete\uff08\u5220\u9664\uff09-- \u5173\u8054\u7684\u5b58\u50a8\u8d44\u4ea7\uff08\u4f8b\u5982\uff1aAws EBS\u3001GCE PD\u3001Azure Disk\u548cOpenStack Cinder\u5377\uff09\u5c06\u88ab\u5220\u9664 \u5f53\u524d\uff0c\u53ea\u6709NFS(\u65b0\u7248\u672c\u5e9f\u9664\u56de\u6536)\u548cHostPath\u652f\u6301\u56de\u6536\u7b56\u7565\u3002AWS EBS\u3001GCE PD\u3001Azure Disk\u548cCinder\u5377\u652f\u6301\u5220\u9664\u7b56\u7565 Volume\u63d2\u4ef6 ReadWriteOnce ReadOnlyMany ReadWriteMany AWSElasticBlockStore AzureFile AzureDisk CephFS Cinder FC FlexVolume Flocker GCEPersistentDisk Glusterfs HostPath iSCSI PhotonPersistentDisk Quobyte NFS RBD VsphereVolume (\u5f53Pod\u5e76\u5217\u65f6\u6709\u6548)\u200b PortworxVolume ScaleIO StorageOS \u72b6\u6001 \u5377\u53ef\u4ee5\u5904\u4e8e\u4ee5\u4e0b\u51e0\u79cd\u72b6\u6001 Avaiable\uff08\u53ef\u7528\uff09 -- \u4e00\u5757\u7a7a\u95f2\u8d44\u6e90\u8fd8\u6ca1\u6709\u88ab\u4efb\u4f55\u58f0\u660e\u7ed1\u5b9a Bound\uff08\u5df2\u7ed1\u5b9a\uff09-- \u5377\u5df2\u7ecf\u88ab\u58f0\u660e\u7ed1\u5b9a Released\uff08\u5df2\u91ca\u653e\uff09-- \u58f0\u660e\u5df2\u88ab\u5220\u9664\uff0c\u4f46\u662f\u8d44\u6e90\u8fd8\u88ab\u96c6\u7fa4\u91cd\u65b0\u58f0\u660e Failed\uff08\u5931\u8d25\uff09-- \u8be5\u5377\u7684\u81ea\u52a8\u56de\u6536\u5931\u8d25 \u547d\u4ee4\u884c\u56de\u73b0\u5b9e\u7ed1\u5b9a\u5230PV\u548cPVC\u7684\u540d\u79f0 \u6301\u4e45\u5316\u6f14\u793a\u8bf4\u660e\u2014Nfs \u5b89\u88c5Nfs\u670d\u52a1\u5668 yum -y install nfs-common nfs-utils rpcbind mkdir /nfsdata chmod 666 /nfsdata cat /etc/exports /nfsdata * ( rw,no_root_squash,no_all_squash,sync ) systemctl start rpcbind systemctl start nfs ] # \u5ba2\u6237\u7aef\u64cd\u4f5c yum -y install nfs-utils rpcbind showmount -e 192 .168.1.100 mount -t nfs 192 .168.1.100:/nfs /test \u90e8\u7f72PV apiVersion : v1 kind : PersistentVolume metadata : name : nfsv1 spec : capacity : storage : 1Gi accessModes : - ReadWriteOnce persistentVolumeReclaimPolicy : Retain storageClassName : nfs nfs : path : /data/nfs server : 10.66.66.10 \u521b\u5efa\u670d\u52a1\u5e76\u4f7f\u7528PVC apiVersion : v1 kind : Service metadata : name : nginx labels : app : nginx spec : ports : - port : 80 name : web clusterIP : None selector : app : nginx --- apiVersion : apps/v1 kind : StatefullSet metadata : name : web spec : selector : matchLables : app : nginx serviceName : \"nginx\" replicas : 3 template : matadata : labels : app:nginx spec : containers : - name : nginx image : nginx ports : - containerPort : 80 name : web volumeMounts : - name : www mountPath : /usr/share/nginx/html volumeClaimTemplates : - metadata : name : www spec : accessModes : [ \"ReadWriteOnce\" ] storageClassName : \"nfs\" resources : requests : storage : 1Gi PersistentVolumeClaim\uff08PVC\uff09\uff1a \u7528\u6237\u5b58\u50a8\u8bf7\u6c42\uff0c\u4e0ePod\u76f8\u4f3c \u3002PVC\u6d88\u8017Pv\u7684\u8d44\u6e90\u3002Pod\u53ef\u4ee5\u8bf7\u6c42\u7279\u5b9a\u7684\u8d44\u6e90\uff08CPU\u548c\u5185\u5b58\uff09\u3002\u7533\u660e\u53ef\u4ee5\u8bf7\u6c42\u7279\u5b9a\u7684\u5927\u5c0f\u548c\u8bbf\u95ee\u6a21\u5f0f\uff08\u5982\u53ef\u4ee5\u8bfb/\u5199\u4e00\u6b21\u6216\u53ea\u8bfb\u591a\u6b21\u6302\u8f7d\uff09","title":"09 \u5b58\u50a8"},{"location":"DevOps/15%20Kubernetes/10%20Kubernetes%20service%20discovery/","text":"\u6982\u5ff5 graph TB client(client) --> svc(https 443 Svc) svc(https 443 Svc) --> frontend1[v1] svc(https 443 Svc) --> frontend2[v2] svc(https 443 Svc) --> frontend3[v3] deploy(Deployment)--> frontend1[v1] deploy(Deployment)--> frontend2[v2] deploy(Deployment)--> frontend3[v3] \u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u8f6e\u8be2 RR \u53ea\u63d0\u4f9b4\u5c42\u8d1f\u8f7d\u5747\u8861\uff0c\u53ef\u4ee5\u901a\u8fc7ingress\u7684\u65b9\u5f0f\u6dfb\u52a07\u5c42\u4ee3\u7406 \u56db\u79cd\u7c7b\u578b ClusterIP \uff1a\u9ed8\u8ba4\u7c7b\u578b\uff0c\u81ea\u52a8\u5206\u914d\u4e00\u4e2a\u4ec5Cluster\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\u7684\u865a\u62dfIP apiserver:\u7528\u6237\u901a\u8fc7kubectl\u53d1\u9001\u521b\u5efaservice\u7684\u547d\u4ee4\uff0capiserver\u63a5\u6536\u5230\u8bf7\u6c42\u540e\u6570\u636e\u5b58\u50a8\u5230etcd\u4e2d\uff08kube-proxy\u76d1\u6d4betcd\u4e2d\u53d1\u751f\u7684\u53d8\u5316\uff09 Kube-proxy: \u6bcf\u4e00\u4e2anode\u8282\u70b9\u90fd\u6709\u4e00\u4e2akube-proxy\u8fdb\u7a0b\u8d1f\u8d23\u611f\u77e5service\u3001pod\u7684\u53d8\u5316\uff0c\u5e76\u5c06\u4fe1\u606f\u5199\u5165\u5230iptables/ipvs\u89c4\u5219\u4e2d Iptables/ipvs: \u4f7f\u7528nat\u7b49\u6280\u672f\u5c06virtualIP\u6d41\u91cf\u8f6c\u53d1\u5230endpoint\u4e2d handlessService(\u65e0\u5934\u670d\u52a1) \uff1a\u4e0d\u9700\u8981\u8d1f\u8f7d\u5747\u8861\u53caservice ip\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528clusterIP\uff08spec.clusterIP\uff09\u7684\u503c\u4e3a\"None\"\u6765\u521b\u5efahandless Service\uff0c\u8fd9\u7c7b\u670d\u52a1\u4e0d\u4f1a\u5206\u914dclusterIP\uff0ckube-proxy\u4e0d\u4f1a\u5904\u7406\u4ed6\u4eec\uff0c\u4e0d\u4f1a\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u548c\u8def\u7531\u3002 \u4f7f\u7528 dig -t -A myapp.default.svc.cluster.local. @10.96.0.10 A\u8bb0\u5f55\u6765\u89e3\u6790\u67e5\u770b\u6548\u679c NodePort \uff1a\u5728ClusterIP\u57fa\u7840\u4e0a\u4e3aService\u5728\u6bcf\u53f0\u673a\u5668\u4e0a\u7ed1\u5b9a\u4e00\u4e2a\u7aef\u53e3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u901a\u8fc7NodeIP:NodePort\u6765\u8bbf\u95ee\u8be5\u670d\u52a1 \u67e5\u8be2\u6d41\u7a0b\uff1a iptables -t nat -nvL KUBE-NODEPORTS LoadBalancer \uff1a\u5728NodePort\u7684\u57fa\u7840\u4e0a\uff0c\u501f\u52a9cloud provider\u521b\u5efa\u4e00\u4e2a\u5916\u90e8\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5e76\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230NodeIP:NodePort \u4f9b\u5e94\u5546\u63d0\u4f9bLAAS ExternalName \uff1a\u628a\u96c6\u7fa4\u5916\u90e8\u7684\u670d\u52a1\u5f15\u5165\u5230\u96c6\u7fa4\u5185\u90e8\u6765\uff0c\u5728\u96c6\u7fa4\u5185\u90e8\u76f4\u63a5\u4f7f\u7528\u3002\u6ca1\u6709\u4efb\u4f55\u7c7b\u578b\u4ee3\u7406\u88ab\u521b\u5efa\uff0c\u53ea\u6709kubernetes1.7\u9614\u8005\u66f4\u9ad8\u7248\u672c\u7684kube-dns\u624d\u652f\u6301 service\u8fd4\u56deCNAME\u548c\u5b83\u7684\u503c\uff0c\u53ef\u4ee5\u5c06\u670d\u52a1\u6620\u5c04\u5230externalName\u5b57\u6bb5\u7684\u5185\u5bb9\uff08\u5982\uff1ahub.liangml.com\uff09,externalName service \u662fservice\u7684\u7279\u4f8b\uff0c\u4ed6\u6ca1\u6709selector\uff0c\u4e5f\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u7684\u7aef\u53e3\u548cEndpoint\u3002\u76f8\u53cd\u7684\uff0c\u5bf9\u4e8e\u8fd0\u884c\u5728\u96c6\u7fa4\u5916\u90e8\u7684\u670d\u52a1\uff0c\u5b83\u901a\u8fc7\u8fd4\u56de\u5916\u90e8\u670d\u52a1\u7684\u522b\u540d\u8fd9\u79cd\u65b9\u5f0f\u6765\u63d0\u4f9b\u670d\u52a1 kind: Service apiVersion: v1 metadata: name: my-service-1 namespace: default spec: type: ExternalName externalName: hub.liangml.com \u5f53\u67e5\u8be2\u4e3b\u673a my-service-1.default.svc.cluster.local\uff08SVC_NAME.NAMESPACE.svc.cluster.local\uff09\u65f6\uff0c\u96c6\u7fa4\u7684DNS\u670d\u52a1\u5c06\u8fd4\u56de\u4e00\u4e2a\u503c hub.liangml.com\u7684CNAME\u7684\u8bb0\u5f55\u3002\u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\u7684\u5de5\u4f5c\u65b9\u5f0f\u548c\u5176\u4ed6\u76f8\u540c\uff0c\u552f\u4e00\u4e0d\u540c\u7684\u662f\u91cd\u5b9a\u5411\u53d1\u751f\u5728DNS\u5c42\uff0c\u800c\u4e0d\u4f1a\u8fdb\u884c\u4ee3\u7406\u6216\u8f6c\u53d1 Ingress-nginx \u4f7f\u7528NodePort\u65b9\u5f0f\u66b4\u9732\u8bbf\u95ee\uff0c\u540e\u7aef\u9700\u8981\u521b\u5efaSvc ingress-nginx \u7f51\u5740 \u5b98\u65b9\u7f51\u7ad9 GitHub\u5730\u5740 http\u4ee3\u7406 https\u4ee3\u7406 # \u521b\u5efa\u8bc1\u4e66cert\u5b58\u50a8\u65b9\u5f0f openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj \"/CN=nginxsvc/0=nginxsvc\" kubectl create secret tls pls-secret --key tls.key --cert tls.crt BasciAuth yum -y install httpd # \u9700\u8981\u4f7f\u7528apache\u6a21\u5757\u5b9e\u73b0 htpasswd -c auth foo kubectl create secret generic basic-auth --from-file = auth nginx\u91cd\u5199 \u540d\u79f0 \u63cf\u8ff0 \u503c nginx.ingress.kubernetes.io/rewrite-target \u5fc5\u987b\u91cd\u5b9a\u5411\u6d41\u91cf\u7684\u76ee\u6807Url \u4e32 nginx.ingress.kubernetes.io/ssl-redirect \u6307\u793a\u4f4d\u7f6e\u90e8\u5206\u662f\u5426\u4ec5\u53ef\u8bbf\u95eeSSL\uff08\u5f53ingress\u5305\u542b\u8bc1\u4e66\u65f6\u4e3aTrue\uff09 \u5e03\u5c14 nginx.ingress.kubernetes.io/force-ssl-redirect \u5373\u4f7fingress\u672a\u542f\u7528TLS\uff0c\u4e5f\u5f3a\u5236\u91cd\u5b9a\u5411\u5230HTTPS \u5e03\u5c14 nginx.ingress.kubernetes.io/app-root \u5b9a\u4e49Controller\u5fc5\u987b\u91cd\u5b9a\u5411\u5230\u5e94\u7528\u7a0b\u5e8f\u6839\uff0c\u5982\u679c\u5b83\u5728'/'\u4e0a\u4e0b\u95ee\u4e2d \u4e32 nginx.ingress.kubernetes.io/use-regex \u6307\u5b9aingress\u4e0a\u5b9a\u4e49\u7684\u8def\u5f84\u662f\u5426\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f \u5e03\u5c14 svc\u7ec4\u4ef6\u7684\u8bbf\u95ee\u89c4\u5219 Vip \u548c Service \u4ee3\u7406 \u6bcf\u4e2anode\u8fd0\u884c\u4e00\u4e2akube-proxy\u8fdb\u7a0b Kube-proxy\u8d1f\u8d23\u4e3aservice \u5b9e\u73b0\u865a\u62dfVIP\u7684\uff0c\u800c\u4e0d\u662fexternalName K8s 1.0 \u4f7f\u7528userspace >> 1.1 \u7248\u672c\u4e2d\u65b0\u589e\u4e86iptables\uff081.2\u7248\u672c\u9ed8\u8ba4\u4e3aiptables\u4ee3\u7406\uff09>> 1.8-bata.0\u4e2d\u6dfb\u52a0\u4e86ipvs\u4ee3\u7406\uff081.14\u5f00\u59cb\u9ed8\u8ba4\u4f7f\u7528\uff09 1.0\u7248\u672c\u4e3a\u56db\u5c42\u4ee3\u7406\uff0c1.1\u7248\u672c\u65b0\u589e\u4e86ingress\uff08beta\u7248\u672c\uff097\u5c42\u4ee3\u7406 IPvs\u4ee3\u7406\u6a21\u5f0f \u5982\u679c\u4e0d\u6ee1\u8db3\u4ee5\u4e0b\u6a21\u5757\u7684\u5f00\u542f\uff0c\u5c06\u4f1a\u964d\u7ea7\u5230iptables\u4ee3\u7406 rr \u8f6e\u8be2\u8c03\u5ea6 lc \u6700\u5c0f\u94fe\u63a5\u6570 dh \u76ee\u6807\u54c8\u5e0c sh \u6e90\u54c8\u5e0c sed \u6700\u77ed\u671f\u671b\u5ef6\u8fdf nq \u4e0d\u6392\u961f\u8c03\u5ea6","title":"10 \u670d\u52a1\u53d1\u73b0"},{"location":"DevOps/15%20Kubernetes/11%20Kubernetes%20pod%20properties/","text":"\u5fc5\u5907\u5b57\u6bb5 \u00b6 \u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e version String \u8fd9\u91cc\u662f\u6307k8s api\u7684\u7248\u672c\uff0c\u76ee\u524d\u57fa\u672c\u662fv1,\u53ef\u4ee5\u4f7f\u7528kubectl api-versions\u547d\u4ee4\u67e5\u8be2 kind String yaml\u6587\u4ef6\u5b9a\u4e49\u7684\u8d44\u6e90\u7c7b\u578b\u548c\u89d2\u8272,\u6bd4\u5982:Pod metadata Object \u5143\u6570\u636e\u5bf9\u8c61,\u56fa\u5b9a\u503c\u5c31\u5199metadata metadata.name String \u5143\u6570\u636e\u5bf9\u8c61\u540d\u79f0,\u81ea\u5b9a\u4e49\u540d\u5b57\u5982Pod\u540d\u5b57 metadata.namespace String \u5143\u6570\u636e\u5bf9\u8c61\u7684\u547d\u540d\u7a7a\u95f4,\u81ea\u5b9a\u4e49 spec Object \u8be6\u7ec6\u5b9a\u4e49\u5bf9\u8c61,\u56fa\u5b9a\u503c\u5c31\u5199Spec spec.containers[] list Spec\u5bf9\u8c61\u7684\u5bb9\u5668\u5217\u8868\u5b9a\u4e49\uff0c\u662f\u4e2a\u5217\u8868 spec.containers[].name String \u5bb9\u5668\u7684\u540d\u5b57 spec.containers[].image String \u955c\u50cf\u7684\u540d\u79f0 # \u4e3b\u8981\u5bf9\u8c61\u7c7b\u578b \u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e spec.containers[].name String \u5b9a\u4e49\u5bb9\u5668\u7684\u540d\u79f0 spec.containers[].image String \u5b9a\u4e49\u8981\u4f7f\u7528\u7684\u955c\u50cf\u540d\u79f0 spec.containers[].imagePullPolicy String \u5b9a\u4e49\u62c9\u53d6\u955c\u50cf\u7684\u7b56\u7565,\u6709Always\u3001Nerver\u3001ifNotPresent\u4e09\u4e2a\u503c\u53ef\u9009 \uff081\uff09Always:\u610f\u601d\u662f\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u91cd\u65b0\u62c9\u53d6\u955c\u50cf \uff082\uff09Never:\u8868\u793a\u4ec5\u4f7f\u7528\u672c\u5730\u955c\u50cf \uff083\uff09ifNotpresent:\u5982\u679c\u672c\u5730\u6709\u5c31\u4f7f\u7528\u672c\u5730\u955c\u50cf,\u6ca1\u6709\u5c31\u62c9\u53d6\u5728\u7ebf\u955c\u50cf\u3002\u9ed8\u8ba4\u503c\u4e3aAlways\u3002 spec.containers[].command[] List \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\uff0c\u56e0\u4e3a\u662f\u6570\u7ec4\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4e0d\u6307\u5b9a\u5219\u4f7f\u7528\u955c\u50cf\u6253\u5305\u65f6\u7684\u542f\u52a8\u547d\u4ee4 spec.containers[].args[] List \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u53c2\u6570,\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a spec.containers[].workingDir String \u6307\u5b9a\u5bb9\u5668\u7684\u5de5\u4f5c\u76ee\u5f55 spec.containers[].volumeMounts[] List \u6307\u5b9a\u5bb9\u5668\u5185\u90e8\u7684\u5b58\u50a8\u5377\u914d\u7f6e spec.containers[].volumeMounts[].name String \u6307\u5b9a\u53ef\u4ee5\u88ab\u5bb9\u5668\u6302\u5728\u7684\u5b58\u50a8\u5377\u540d\u79f0 spec.containers[].volumeMounts[].mountPath String \u6307\u5b9a\u53ef\u4ee5\u88ab\u5bb9\u5668\u6302\u8f7d\u7684\u5b58\u50a8\u5377\u8def\u5f84 spec.containers[].volumeMounts[].readOnly String \u8bbe\u7f6e\u5b58\u50a8\u5377\u8def\u5f84\u7684\u8bfb\u5199\u6a21\u5f0f,ture\u6216\u8005\u662ffalse \u9ed8\u8ba4\u4e3a\u8bfb\u5199 spec.containers[].port[] List \u6307\u5b9a\u5bb9\u5668\u9700\u8981\u7528\u5230\u7684\u7aef\u53e3\u5217\u8868 spec.containers[].port[].name String \u6307\u5b9a\u7aef\u53e3\u540d\u79f0 spec.containers[].port[].containerPort String \u6307\u5b9a\u5bb9\u5668\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3 spec.containers[].port[].hostPort String \u6307\u5b9a\u5bb9\u5668\u6240\u5728\u4e3b\u673a\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3\u53f7,\u9ed8\u8ba4\u8ddf\u4e0a\u9762containerPort\u76f8\u540c\uff0c\u6ce8\u610f\u8bbe\u7f6e\u4e86hostPort\u540c\u4e00\u53f0\u4e3b\u673a\u65e0\u6cd5\u542f\u52a8\u8be5\u5bb9\u5668\u7684\u76f8\u540c\u526f\u672c\uff08\u540c\u4e00\u53f0\u4e3b\u673a\u4e0d\u80fd\u4f7f\u7528\u76f8\u540c\u7aef\u53e3\uff09 spec.containers[].port[].protocol String \u6307\u5b9a\u7aef\u53e3\u534f\u8bae,\u652f\u6301TCP\u548cUDP,\u9ed8\u8ba4\u65f6Tcp spec.containers[].env[] List \u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\u524d\u9700\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5217\u8868 spec.containers[].env[].name String \u6307\u5b9a\u73af\u5883\u53d8\u91cf\u540d\u79f0 spec.containers[].env[].value String \u6307\u5b9a\u73af\u5883\u53d8\u91cf\u503c spec.containers[].resources Object \u6307\u5b9a\u8d44\u6e90\u9650\u5236\u548c\u8d44\u6e90\u8bf7\u6c42\u7684\u503c\uff08\u8fd9\u91cc\u5f00\u59cb\u5c31\u662f\u8bbe\u7f6e\u5bb9\u5668\u7684\u8d44\u6e90\u4e0a\u7ebf\uff09 spec.containers[].resources.limit Object \u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\u65f6\u8d44\u6e90\u7684\u8fd0\u884c\u4e0a\u9650 spec.containers[].resources.limit.cpu String \u6307\u5b9aCPU\u7684\u9650\u5236,\u5355\u4f4d\u4e3acore\u6570,\u5c06\u7528\u4e8edocker run \u2014cpu-shares\u53c2\u6570 spec.containers[].resources.limit.memory String \u6307\u5b9aMem\u5185\u5b58\u7684\u9650\u5236,\u5355\u4f4d\u4e3aMib,Gib spec.containers[].resources.requests Object \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u548c\u8c03\u5ea6\u65f6\u7684\u9650\u5236\u8bbe\u7f6e spec.containers[].resources.requests.cpu String cpu\u8bf7\u6c42,\u5355\u4f4d\u4e3acore\u6570,\u5bb9\u5668\u542f\u52a8\u65f6\u521d\u59cb\u5316\u53ef\u7528\u6570\u91cf spec.containers[].resources.requests.memory String \u5185\u5b58\u8bf7\u6c42,\u5355\u4f4d\u4e3aMib,Gib,\u5bb9\u5668\u542f\u52a8\u7684\u521d\u59cb\u5316\u53ef\u7528\u6570\u91cf # \u989d\u5916\u7684\u53c2\u6570\u9009\u9879 \u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e spec.restartPolicy String \u5b9a\u4e49Pod\u7684\u91cd\u542f\u7b56\u7565\uff0c\u53ef\u9009\u503c\u4e3aalways\u3001onFalure,\u9ed8\u8ba4\u503c\u4e3aAlways. 1.Always:Pod\u4e00\u65e6\u7ec8\u6b62\u8fd0\u884c,\u5219\u65e0\u8bba\u5bb9\u5668\u662f\u5982\u4f55\u7ec8\u6b62\u7684,kubelet\u670d\u52a1\u90fd\u5c06\u91cd\u542f\u5b83 2.OnFailure: \u53ea\u6709Pod\u4ee5\u975e\u96f6\u9000\u51fa\u4ee3\u7801\u7ec8\u6b62\u65f6\uff0ckubelet\u624d\u4f1a\u91cd\u542f\u8be5\u5bb9\u5668\u3002\u5982\u679c\u5bb9\u5668\u6b63\u5e38\u7ed3\u675f\uff08\u9000\u51fa\u4ee3\u7801\u4e3a0\uff09\uff0c\u5219kubelet\u4e0d\u4f1a\u91cd\u542f\u5b83\u3002 3.Nerver:Pod\u7ec8\u6b62\u540e,kubelet\u5c06\u9000\u51fa\u4ee3\u7801\u62a5\u544a\u7ed9master\uff0c\u4e0d\u4f1a\u91cd\u542f\u8be5Pod spec.nodeSelector Object \u5b9a\u4e49Node\u7684Label\u8fc7\u6ee4\u6807\u7b7e,\u4ee5key:value\u683c\u5f0f\u6307\u5b9a spec.imagePullSecrets Object \u5b9a\u4e49pull\u955c\u50cf\u65f6\u4f7f\u7528secret\u540d\u79f0,\u4ee5name:secretey\u683c\u5f0f\u6307\u5b9a spec.hostNetwork Boolean \u5b9a\u4e49\u662f\u5426\u4f7f\u7528\u4e3b\u673a\u6a21\u5f0f\u7f51\u7edc\uff0c\u9ed8\u8ba4\u4e3afalse\u3002\u8bbe\u7f6etrue\u8868\u793a\u4f7f\u7528\u5bbf\u4e3b\u673a\u7f51\u7edc,\u4e0d\u5b9e\u7528docker\u7f51\u6865\uff0c\u540c\u65f6\u8bbe\u7f6e\u4e86true\u5c06\u65e0\u6cd5\u5728\u540c\u4e00\u53f0\u5bbf\u4e3b\u673a\u542f\u52a8\u7b2c\u4e8c\u4e2a\u526f\u672c\u3002","title":"11 Pod\u5c5e\u6027"},{"location":"DevOps/15%20Kubernetes/11%20Kubernetes%20pod%20properties/#_1","text":"\u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e version String \u8fd9\u91cc\u662f\u6307k8s api\u7684\u7248\u672c\uff0c\u76ee\u524d\u57fa\u672c\u662fv1,\u53ef\u4ee5\u4f7f\u7528kubectl api-versions\u547d\u4ee4\u67e5\u8be2 kind String yaml\u6587\u4ef6\u5b9a\u4e49\u7684\u8d44\u6e90\u7c7b\u578b\u548c\u89d2\u8272,\u6bd4\u5982:Pod metadata Object \u5143\u6570\u636e\u5bf9\u8c61,\u56fa\u5b9a\u503c\u5c31\u5199metadata metadata.name String \u5143\u6570\u636e\u5bf9\u8c61\u540d\u79f0,\u81ea\u5b9a\u4e49\u540d\u5b57\u5982Pod\u540d\u5b57 metadata.namespace String \u5143\u6570\u636e\u5bf9\u8c61\u7684\u547d\u540d\u7a7a\u95f4,\u81ea\u5b9a\u4e49 spec Object \u8be6\u7ec6\u5b9a\u4e49\u5bf9\u8c61,\u56fa\u5b9a\u503c\u5c31\u5199Spec spec.containers[] list Spec\u5bf9\u8c61\u7684\u5bb9\u5668\u5217\u8868\u5b9a\u4e49\uff0c\u662f\u4e2a\u5217\u8868 spec.containers[].name String \u5bb9\u5668\u7684\u540d\u5b57 spec.containers[].image String \u955c\u50cf\u7684\u540d\u79f0 # \u4e3b\u8981\u5bf9\u8c61\u7c7b\u578b \u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e spec.containers[].name String \u5b9a\u4e49\u5bb9\u5668\u7684\u540d\u79f0 spec.containers[].image String \u5b9a\u4e49\u8981\u4f7f\u7528\u7684\u955c\u50cf\u540d\u79f0 spec.containers[].imagePullPolicy String \u5b9a\u4e49\u62c9\u53d6\u955c\u50cf\u7684\u7b56\u7565,\u6709Always\u3001Nerver\u3001ifNotPresent\u4e09\u4e2a\u503c\u53ef\u9009 \uff081\uff09Always:\u610f\u601d\u662f\u6bcf\u6b21\u90fd\u5c1d\u8bd5\u91cd\u65b0\u62c9\u53d6\u955c\u50cf \uff082\uff09Never:\u8868\u793a\u4ec5\u4f7f\u7528\u672c\u5730\u955c\u50cf \uff083\uff09ifNotpresent:\u5982\u679c\u672c\u5730\u6709\u5c31\u4f7f\u7528\u672c\u5730\u955c\u50cf,\u6ca1\u6709\u5c31\u62c9\u53d6\u5728\u7ebf\u955c\u50cf\u3002\u9ed8\u8ba4\u503c\u4e3aAlways\u3002 spec.containers[].command[] List \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\uff0c\u56e0\u4e3a\u662f\u6570\u7ec4\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\uff0c\u4e0d\u6307\u5b9a\u5219\u4f7f\u7528\u955c\u50cf\u6253\u5305\u65f6\u7684\u542f\u52a8\u547d\u4ee4 spec.containers[].args[] List \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u547d\u4ee4\u53c2\u6570,\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a spec.containers[].workingDir String \u6307\u5b9a\u5bb9\u5668\u7684\u5de5\u4f5c\u76ee\u5f55 spec.containers[].volumeMounts[] List \u6307\u5b9a\u5bb9\u5668\u5185\u90e8\u7684\u5b58\u50a8\u5377\u914d\u7f6e spec.containers[].volumeMounts[].name String \u6307\u5b9a\u53ef\u4ee5\u88ab\u5bb9\u5668\u6302\u5728\u7684\u5b58\u50a8\u5377\u540d\u79f0 spec.containers[].volumeMounts[].mountPath String \u6307\u5b9a\u53ef\u4ee5\u88ab\u5bb9\u5668\u6302\u8f7d\u7684\u5b58\u50a8\u5377\u8def\u5f84 spec.containers[].volumeMounts[].readOnly String \u8bbe\u7f6e\u5b58\u50a8\u5377\u8def\u5f84\u7684\u8bfb\u5199\u6a21\u5f0f,ture\u6216\u8005\u662ffalse \u9ed8\u8ba4\u4e3a\u8bfb\u5199 spec.containers[].port[] List \u6307\u5b9a\u5bb9\u5668\u9700\u8981\u7528\u5230\u7684\u7aef\u53e3\u5217\u8868 spec.containers[].port[].name String \u6307\u5b9a\u7aef\u53e3\u540d\u79f0 spec.containers[].port[].containerPort String \u6307\u5b9a\u5bb9\u5668\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3 spec.containers[].port[].hostPort String \u6307\u5b9a\u5bb9\u5668\u6240\u5728\u4e3b\u673a\u9700\u8981\u76d1\u542c\u7684\u7aef\u53e3\u53f7,\u9ed8\u8ba4\u8ddf\u4e0a\u9762containerPort\u76f8\u540c\uff0c\u6ce8\u610f\u8bbe\u7f6e\u4e86hostPort\u540c\u4e00\u53f0\u4e3b\u673a\u65e0\u6cd5\u542f\u52a8\u8be5\u5bb9\u5668\u7684\u76f8\u540c\u526f\u672c\uff08\u540c\u4e00\u53f0\u4e3b\u673a\u4e0d\u80fd\u4f7f\u7528\u76f8\u540c\u7aef\u53e3\uff09 spec.containers[].port[].protocol String \u6307\u5b9a\u7aef\u53e3\u534f\u8bae,\u652f\u6301TCP\u548cUDP,\u9ed8\u8ba4\u65f6Tcp spec.containers[].env[] List \u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\u524d\u9700\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5217\u8868 spec.containers[].env[].name String \u6307\u5b9a\u73af\u5883\u53d8\u91cf\u540d\u79f0 spec.containers[].env[].value String \u6307\u5b9a\u73af\u5883\u53d8\u91cf\u503c spec.containers[].resources Object \u6307\u5b9a\u8d44\u6e90\u9650\u5236\u548c\u8d44\u6e90\u8bf7\u6c42\u7684\u503c\uff08\u8fd9\u91cc\u5f00\u59cb\u5c31\u662f\u8bbe\u7f6e\u5bb9\u5668\u7684\u8d44\u6e90\u4e0a\u7ebf\uff09 spec.containers[].resources.limit Object \u6307\u5b9a\u5bb9\u5668\u8fd0\u884c\u65f6\u8d44\u6e90\u7684\u8fd0\u884c\u4e0a\u9650 spec.containers[].resources.limit.cpu String \u6307\u5b9aCPU\u7684\u9650\u5236,\u5355\u4f4d\u4e3acore\u6570,\u5c06\u7528\u4e8edocker run \u2014cpu-shares\u53c2\u6570 spec.containers[].resources.limit.memory String \u6307\u5b9aMem\u5185\u5b58\u7684\u9650\u5236,\u5355\u4f4d\u4e3aMib,Gib spec.containers[].resources.requests Object \u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u548c\u8c03\u5ea6\u65f6\u7684\u9650\u5236\u8bbe\u7f6e spec.containers[].resources.requests.cpu String cpu\u8bf7\u6c42,\u5355\u4f4d\u4e3acore\u6570,\u5bb9\u5668\u542f\u52a8\u65f6\u521d\u59cb\u5316\u53ef\u7528\u6570\u91cf spec.containers[].resources.requests.memory String \u5185\u5b58\u8bf7\u6c42,\u5355\u4f4d\u4e3aMib,Gib,\u5bb9\u5668\u542f\u52a8\u7684\u521d\u59cb\u5316\u53ef\u7528\u6570\u91cf # \u989d\u5916\u7684\u53c2\u6570\u9009\u9879 \u53c2\u6570\u540d \u5b57\u6bb5\u7c7b\u578b \u8bf4\u660e spec.restartPolicy String \u5b9a\u4e49Pod\u7684\u91cd\u542f\u7b56\u7565\uff0c\u53ef\u9009\u503c\u4e3aalways\u3001onFalure,\u9ed8\u8ba4\u503c\u4e3aAlways. 1.Always:Pod\u4e00\u65e6\u7ec8\u6b62\u8fd0\u884c,\u5219\u65e0\u8bba\u5bb9\u5668\u662f\u5982\u4f55\u7ec8\u6b62\u7684,kubelet\u670d\u52a1\u90fd\u5c06\u91cd\u542f\u5b83 2.OnFailure: \u53ea\u6709Pod\u4ee5\u975e\u96f6\u9000\u51fa\u4ee3\u7801\u7ec8\u6b62\u65f6\uff0ckubelet\u624d\u4f1a\u91cd\u542f\u8be5\u5bb9\u5668\u3002\u5982\u679c\u5bb9\u5668\u6b63\u5e38\u7ed3\u675f\uff08\u9000\u51fa\u4ee3\u7801\u4e3a0\uff09\uff0c\u5219kubelet\u4e0d\u4f1a\u91cd\u542f\u5b83\u3002 3.Nerver:Pod\u7ec8\u6b62\u540e,kubelet\u5c06\u9000\u51fa\u4ee3\u7801\u62a5\u544a\u7ed9master\uff0c\u4e0d\u4f1a\u91cd\u542f\u8be5Pod spec.nodeSelector Object \u5b9a\u4e49Node\u7684Label\u8fc7\u6ee4\u6807\u7b7e,\u4ee5key:value\u683c\u5f0f\u6307\u5b9a spec.imagePullSecrets Object \u5b9a\u4e49pull\u955c\u50cf\u65f6\u4f7f\u7528secret\u540d\u79f0,\u4ee5name:secretey\u683c\u5f0f\u6307\u5b9a spec.hostNetwork Boolean \u5b9a\u4e49\u662f\u5426\u4f7f\u7528\u4e3b\u673a\u6a21\u5f0f\u7f51\u7edc\uff0c\u9ed8\u8ba4\u4e3afalse\u3002\u8bbe\u7f6etrue\u8868\u793a\u4f7f\u7528\u5bbf\u4e3b\u673a\u7f51\u7edc,\u4e0d\u5b9e\u7528docker\u7f51\u6865\uff0c\u540c\u65f6\u8bbe\u7f6e\u4e86true\u5c06\u65e0\u6cd5\u5728\u540c\u4e00\u53f0\u5bbf\u4e3b\u673a\u542f\u52a8\u7b2c\u4e8c\u4e2a\u526f\u672c\u3002","title":"\u5fc5\u5907\u5b57\u6bb5"},{"location":"DevOps/15%20Kubernetes/12%20Kubernetes%20high%20availability/","text":"","title":"12 \u9ad8\u53ef\u7528"},{"location":"DevOps/15%20Kubernetes/13%20Kubernetes%20helm/","text":"helm\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1achart\u548crelease chart \u662f\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7684\u4fe1\u606f\u96c6\u5408\uff0c\u5305\u62ec\u5404\u79cdkubernetes\u5bf9\u8c61\u7684\u914d\u7f6e\u6a21\u7248\u3001\u53c2\u6570\u5b9a\u4e49\u3001\u4f9d\u8d56\u5173\u7cfb\u3001\u6587\u6863\u8bf4\u660e\u7b49\u3002chart\u65f6\u5e94\u7528\u90e8\u7f72\u7b49\u81ea\u5305\u542b\u903b\u8f91\u5355\u5143\u3002\u53ef\u4ee5\u5c06chart\u60f3\u8c61\u6210apt\u3001yum\u4e2d\u7684\u8f6f\u4ef6\u5305 release\u662fchart\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5e94\u7528\u3002\u5f53chart\u88ab\u5b89\u88c5\u5230kubernetes\u96c6\u7fa4\uff0c\u5c31\u751f\u6210\u4e86\u4e00\u4e2arelease\u3002chart\u80fd\u591f\u591a\u6b21\u5b89\u88c5\u5230\u540c\u4e00\u4e2a\u96c6\u7fa4\uff0c\u6bcf\u6b21\u5b89\u88c5\u90fd\u662f\u4e00\u4e2arelease helm\u5ba2\u6237\u7aef\u8d1f\u8d23chart\u548crelease\u7684\u521b\u5efa\u548c\u7ba1\u7406\u4ee5\u53ca\u548cTiller\u7684\u4ea4\u4e92\u3002Tiller\u670d\u52a1\u5668\u8fd0\u884c\u5728kubernetes\u96c6\u7fa4\u4e2d\uff0c\u5b83\u4f1a\u5904\u7406helm\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u4e0ekubernetes API Server\u4ea4\u4e92 \u90e8\u7f72helm wget https://get.helm.sh/helm-v3.2.3-darwin-amd64.tar.gz cp helm /usr/local/bin/ kubernetes API Server \u5f00\u542f\u4e86RBAC\u8bbf\u95ee\u63a7\u5236\uff0c\u6240\u4ee5\u9700\u8981\u521b\u5efatiller\u4f7f\u7528\u7684service account:tiller\u5e76\u5206\u914d\u5408\u9002\u7684\u89d2\u8272\u7ed9\u5b83\uff0c\u8fd9\u91cc\u76f4\u63a5\u5206\u914dcluster-admin \u8fd9\u4e2a\u96c6\u7fa4\u5185\u7f6e\u7684clusterRole\u7ed9\u5b83\u3002helm\u6587\u6863 Role-based Access Control apiVersion : v1 kind : ServiceAccount metadata : name : tiller namespace : kube-system --- apiVersion : rbac.authorization.k8s.io/v1beta1 kind : ClusterRoleBinding metadata : name : tiller roleRef : apiGroup : rbac.authorization.k8s.io kind : ClusterRole name : cluster-admin subjects : - kind : ServiceAccount name : tiller namespace : kube-system kubectl create -f rbac-config.yaml ---- serviceaccount/tiller created clusterrolebinding.rbac.authorization.k8s.io/tiller created helm init --service-account tiller --skip-refresh Helm\u81ea\u5b9a\u4e49\u6a21\u677f # \u521b\u5efa\u6587\u4ef6\u5939 mkdir ./hello-world cd ./hello-world # \u521b\u5efa\u81ea\u63cf\u8ff0\u6587\u4ef6chart.yaml\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5fc5\u987b\u6709name \u548c version\u5b9a\u4e49 cat << \"EOF\" >> ./chart.yaml name: hello-world version: 1 .0.0 EOF #\u521b\u5efa\u6a21\u7248\u6587\u4ef6\uff0c\u7528\u4e8e\u751f\u6210kubernetes\u8d44\u6e90\u6e05\u5355\uff08mainfests\uff09 mkdir ./templates cat <<'EOF'>> ./templates/deployment.yaml apiVersion: extensions/v1beta1 kind: Deployment metadata: name: hello-world spec: replicas: 1 template: metadata: labels: app: hello-world spec: containers: - name: hello-world image: nginx ports: - containerPort: 80 protocol: TCP EOF cat <<'EOF'>> ./templates/service.yaml apiVersion: v1 kind: Service metadata: name: hello-world spec: type: NodePort selector: app: hello-world ports: - port: 8080 targetPort: 8080 protocol: TCP EOF # \u4f7f\u7528\u547d\u4ee4\uff1a helm install RELATIVE_PATH_TO_CHART \u521b\u5efa\u4e00\u6b64Release helm install . \u52a8\u6001\u914d\u7f6e # \u914d\u7f6e\u4f53\u73b0\u5728\u914d\u7f6e\u6587\u4ef6values.yaml cat <<'EOF'>> ./values.yaml image: repository: gcr.io/google-samples/node-hello tag: '1.0' EOF # \u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u503c\uff0c\u5728\u6a21\u7248\u6587\u4ef6\u4e2d\u53ef\u4ee5\u901a\u8fc7.values\u5bf9\u8c61\u8bbf\u95ee\u5230 cat <<'EOF'>> ./templates/deployment.yaml kind: Deployment metadata: name: hello-world spec: replicas: 1 template: metadata: labels: app: hello-world spec: containers: - name: hello-world image: {{ .Values.image.repository}}:{{.Values.image.tag}} ports: - containerPort: 8080 protocol: TCP EOF # \u5728values.yaml\u4e2d\u7684\u503c\u53ef\u4ee5\u88ab\u90e8\u7f72\u5230release \u65f6\u7528\u5230\u7684\u53c2\u6570 --values YAML_FILE_PATH \u6216 --set key1=values1 key2=values2 \u8986\u76d6\u6389 helm install --set image.tag = 'latest' . # \u5347\u7ea7\u7248\u672c helm upgrade -f values.yaml test . helm \u547d\u4ee4 # \u5217\u51fa\u5df2\u7ecf\u90e8\u7f72\u7684Release helm ls # \u67e5\u8be2\u4e00\u4e2a\u7279\u5b9a\u7684Release\u7684\u72b6\u6001 helm status RELEASE_NAME # \u79fb\u9664\u6240\u6709\u4e0e\u8fd9\u4e2aRelease\u76f8\u5173\u7684Kubernetes\u8d44\u6e90 helm delete cautious-shrimp helm rollback RELEASE_NAME REVISION_NUMBER helm rollback cautious-shrimap 1 # \u4f7f\u7528helm delete --purge RELEASE_NAME \u79fb\u9664\u6240\u6709\u4e0e\u6307\u5b9aRelease\u76f8\u5173\u7684Kubernetes\u8d44\u6e90\u548c\u6240\u6709\u8fd9\u4e2aRelease\u7684\u8bb0\u5f55 helm delete --purge cautious-shrimp helm ls --deleted Debug # \u4f7f\u7528\u6a21\u7248\u52a8\u6001\u751f\u6210k8s\u8d44\u6e90\u6e05\u5355\uff0c\u975e\u5e38\u9700\u8981\u80fd\u63d0\u524d\u9884\u89c8\u751f\u6210\u7684\u6548\u679c # \u4f7f\u7528--dry-run -debug \u9009\u9879\u6765\u6253\u5370\u751f\u6210\u7684\u6e05\u5355\u6587\u4ef6\u7cfb\u7edf\uff0c\u800c\u4e0d\u662f\u90e8\u7f72 helm install . --dry-run --debug --set images.tag = latest helm \u90e8\u7f72dashborad \u00b6 kubernetes-dashborad.yaml image : repository : k8s.gcr.io/kubernetes-dashboard-amd64 tag : v1.10.1 ingress : enabled : true hosts : - k8s.frognew.com annotations : nginx.ingress.kubernetes.io/ssl-redirect : \"true\" nginx.ingress.kubernetes.io/backend-protocol : \"HTTPS\" tls : - secretName : frognew-com-tls-secret hosts : - k8s.frognew.com rbac : clusterAdminRole : true helm install stable/kubernetes-dashboard \\ -n kubernetes-dashboard \\ --namespace kube-system \\ -f kubernetes-dashboard.yaml kubectl -n kube-system get secret | grep kubernetes-dashboard-token # \u67e5\u770bdashboard token helm Prometheus\u90e8\u7f72 P61-10-4","title":"13 Helm"},{"location":"DevOps/15%20Kubernetes/13%20Kubernetes%20helm/#helm-dashborad","text":"kubernetes-dashborad.yaml image : repository : k8s.gcr.io/kubernetes-dashboard-amd64 tag : v1.10.1 ingress : enabled : true hosts : - k8s.frognew.com annotations : nginx.ingress.kubernetes.io/ssl-redirect : \"true\" nginx.ingress.kubernetes.io/backend-protocol : \"HTTPS\" tls : - secretName : frognew-com-tls-secret hosts : - k8s.frognew.com rbac : clusterAdminRole : true helm install stable/kubernetes-dashboard \\ -n kubernetes-dashboard \\ --namespace kube-system \\ -f kubernetes-dashboard.yaml kubectl -n kube-system get secret | grep kubernetes-dashboard-token # \u67e5\u770bdashboard token helm Prometheus\u90e8\u7f72 P61-10-4","title":"helm \u90e8\u7f72dashborad"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/","text":"harbor\u5b89\u88c5 \u00b6 docker-compose install \u00b6 yum -y install docker-compose docker-compose --version \u4e0b\u8f7d\u955c\u50cf \u00b6 wget https://github.com/goharbor/harbor/releases/download/v1.10.3-rc2/harbor-offline-installer-v1.10.3-rc2.tgz \u914d\u7f6e\u6587\u4ef6 \u00b6 vim harbor.yml hostname: hub.liangml.com https: # https port for harbor, default is 443 port: 443 # The path of cert and key files for nginx certificate: /data/cert/server.crt private_key: /data/cert/server.key \u8bc1\u4e66\u521b\u5efa \u00b6 [ root@vpc harbor ] # openssl genrsa -des3 -out server.key 2048 Generating RSA private key, 2048 bit long modulus ...................................+++ ...+++ e is 65537 ( 0x10001 ) Enter pass phrase for server.key: \u8f93\u5165\u5bc6\u7801 Verifying - Enter pass phrase for server.key: =========================== [ root@vpc harbor ] # openssl req -new -key server.key -out server.csr Enter pass phrase for server.key: You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] :CN State or Province Name ( full name ) [] :Shanghai Locality Name ( eg, city ) [ Default City ] :Shanghai Organization Name ( eg, company ) [ Default Company Ltd ] :liangml Organizational Unit Name ( eg, section ) [] :liangml Common Name ( eg, your name or your server 's hostname) []:hub.liangml.com Email Address []:liangml0528@163.com Please enter the following ' extra ' attributes to be sent with your certificate request A challenge password [] :liangml An optional company name [] :liangml ======= cp server.key server.key.org ( \u5907\u4efd ) ======= [ root@vpc harbor ] # openssl rsa -in server.key.org -out server.key (\u53bb\u6389\u5bc6\u7801) Enter pass phrase for server.key.org: writing RSA key ======= [ root@vpc harbor ] # openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt (\u7b7e\u540d) Signature ok subject = /C = CN/ST = Shanghai/L = Shanghai/O = liangml/OU = liangml/CN = hub.liangml.com/emailAddress = liangml0528@163.com Getting Private key ====== ./install.sh \u5b89\u88c5 ====== echo \"172.19.5.110 hub.liangml.com\" >> /etc/hosts ( \u8bc6\u522b\u57df\u540d )","title":"14 Harbor"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/#harbor","text":"","title":"harbor\u5b89\u88c5"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/#docker-compose-install","text":"yum -y install docker-compose docker-compose --version","title":"docker-compose install"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/#_1","text":"wget https://github.com/goharbor/harbor/releases/download/v1.10.3-rc2/harbor-offline-installer-v1.10.3-rc2.tgz","title":"\u4e0b\u8f7d\u955c\u50cf"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/#_2","text":"vim harbor.yml hostname: hub.liangml.com https: # https port for harbor, default is 443 port: 443 # The path of cert and key files for nginx certificate: /data/cert/server.crt private_key: /data/cert/server.key","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"DevOps/15%20Kubernetes/14%20Kubernetes%20harbor/#_3","text":"[ root@vpc harbor ] # openssl genrsa -des3 -out server.key 2048 Generating RSA private key, 2048 bit long modulus ...................................+++ ...+++ e is 65537 ( 0x10001 ) Enter pass phrase for server.key: \u8f93\u5165\u5bc6\u7801 Verifying - Enter pass phrase for server.key: =========================== [ root@vpc harbor ] # openssl req -new -key server.key -out server.csr Enter pass phrase for server.key: You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.' , the field will be left blank. ----- Country Name ( 2 letter code ) [ XX ] :CN State or Province Name ( full name ) [] :Shanghai Locality Name ( eg, city ) [ Default City ] :Shanghai Organization Name ( eg, company ) [ Default Company Ltd ] :liangml Organizational Unit Name ( eg, section ) [] :liangml Common Name ( eg, your name or your server 's hostname) []:hub.liangml.com Email Address []:liangml0528@163.com Please enter the following ' extra ' attributes to be sent with your certificate request A challenge password [] :liangml An optional company name [] :liangml ======= cp server.key server.key.org ( \u5907\u4efd ) ======= [ root@vpc harbor ] # openssl rsa -in server.key.org -out server.key (\u53bb\u6389\u5bc6\u7801) Enter pass phrase for server.key.org: writing RSA key ======= [ root@vpc harbor ] # openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt (\u7b7e\u540d) Signature ok subject = /C = CN/ST = Shanghai/L = Shanghai/O = liangml/OU = liangml/CN = hub.liangml.com/emailAddress = liangml0528@163.com Getting Private key ====== ./install.sh \u5b89\u88c5 ====== echo \"172.19.5.110 hub.liangml.com\" >> /etc/hosts ( \u8bc6\u522b\u57df\u540d )","title":"\u8bc1\u4e66\u521b\u5efa"},{"location":"DevOps/15%20Kubernetes/15%20Kubernetes%20kube%20problem%20set/","text":"\u95ee\u9898\u96c6\u5408 0/1 nodes are available: 1 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate. \u610f\u601d\u662f\u8282\u70b9\u6709\u4e86\u6c61\u70b9\u65e0\u6cd5\u8c03\u5ea6\uff0c\u51fa\u4e8e\u5b89\u5168\u8003\u8651k8s\u4e0d\u5141\u8bb8\u5728master\u8282\u70b9\u90e8\u7f72pod \u89e3\u51b3\u65b9\u6848\uff1a kubectl get no -o yaml | grep taint -A 5 (\u67e5\u770b\u8282\u70b9\u662f\u5426\u53ef\u8c03\u5ea6) kubectl taint nodes --all node-role.kubernetes.io/master-","title":"15 Kube\u95ee\u9898\u96c6"},{"location":"DevOps/15%20Kubernetes/16%20Kubernetes%20other/","text":"mkdir /nfs { 1 ..3 } # \u521b\u5efa nfs1 nfs2 nfs3 docker tag oldimage:v1 newimage:v1 kubectl run nginx --image = nginx kubectl explain pod kubectl apply -f xxx.yml # \u8fd0\u884cyaml \u6587\u4ef6\u521b\u5efapod\uff0ccreate\u4e5f\u53ef\u4ee5\u521b\u5efa kubectl logs myapp-pod -c test # -c \u4ee3\u8868pod\u4e2d\u7684\u5bb9\u5668 kubectl describe pod myapp-pod # describe \u53ef\u4ee5\u67e5\u770bpod\u4e2d\u7684\u4fe1\u606f kubectl get pod -o wide --show-labels # -o wide \u53ef\u4ee5\u663e\u793a\u8be6\u7ec6\u4fe1\u606f show-labels\u53ef\u4ee5\u663e\u793ars\u5b9a\u4e49\u7684\u6807\u7b7e kubectl edit pod myapp-pod # \u7f16\u8f91\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 kubectl exec readiness-httpget-pod -it -- /bin/sh # \u8fdb\u5165\u5230pod\u5bb9\u5668\uff0c\u591a\u4e2a\u5bb9\u5668\u4f7f\u7528-c\u53c2\u6570\u6307\u5b9a kubectl delete pod --all # \u9ed8\u8ba4\u5220\u9664default \u547d\u540d\u7a7a\u95f4\u4e0b\u7684\u6240\u6709\u5bb9\u5668 kubectl label pod node01 app = node02 --overwrite = true # \u6dfb\u52a0\u6807\u7b7e kubectl label pod frontend-2ndz7 tier = frontend1 --overwrite = true # \u66f4\u6539\u5df2\u5b58\u5728\u7684rs\u6807\u7b7e kubectl apply -f deployment.yml --record # record \u53ef\u4ee5\u8bb0\u5f55\u56de\u6eda\u7684\u5386\u53f2\u8fc7\u7a0b kubectl scale deployment nginx --replicas = 10 # scale \u6269\u5bb9deploy pod\u4e3a10\u4e2a kubectl set image deployment/nginx nginx = nginx:1.9.1 # \u66f4\u65b0deployment \u955c\u50cf kubectl autoscale deployment nginx --min = 10 --max = 15 --cpu-percent = 80 # \u5229\u7528hpa\u8bbe\u5b9a\u9608\u503c\u81ea\u52a8\u66f4\u65b0 kubectl rollout undo deployment/nginx # \u56de\u6eda deployment kubectl rollout undo deployment/nginx --to-reverison = 2 # \u56de\u6eda\u5230\u6307\u5b9a\u7684\u7248\u672c kubectl rollout pause deployment/nginx # \u6682\u505c\u6eda\u52a8\u66f4\u65b0 kubectl rollout status deployment/nginx # \u67e5\u770b\u56de\u6eda\u72b6\u6001 kubectl rollout history deployment/nginx # \u67e5\u770b\u5386\u53f2\u72b6\u6001 # \u521b\u5efa\u5b58\u50a8configmap \u76ee\u5f55 kubectl get cm kubectl describe cm game-config kubectl get cm game-config -o yaml kubectl create configmap game-config --from-file = docs/user-guide/configmap/kubectl metadata \u6807\u7b7e \u548cselector\u6807\u7b7e\u8981\u5bf9\u5e94 \u7aef\u53e3\u66b4\u9732\u65b9\u5f0f NodePort ingress Minikube \u672c\u5730docker \u73af\u5883\u542f\u52a8 minikube start --vm=true --base-image=registry.cn-hangzhou.aliyuncs.com/google_containers/kicbase:v0.0.10 https://ribhvzyz.mirror.aliyuncs.com --vm-driver=docker --image-repository= --image-mirror-country=cn --registry-mirror=[\" https://ribhvzyz.mirror.aliyuncs.com \"] \u9ed8\u8ba4\u542f\u52a8\u7684\u65b9\u5f0f\u52a0\u901f minikube start --registry-mirror https://ribhvzyz.mirror.aliyuncs.com --image-mirror-country=cn \u8d44\u6e90\u7c7b\u578b \u7f29\u5199\u522b\u540d clusters componentstatuses cs configmaps cm daemonsets ds deployments deploy endpoints ep event ev horizontalpodautoscalers hpa ingresses ing jobs limitranges limits namespaces ns networkpolicies nodes no statefulsets persistentvolumeclaims pvc persistentvolumes pv pods po podsecuritypolicies psp podtemplates replicasets rs replicationcontrollers rc resourcequotas quota cronjob secrets serviceaccount sa services svc storageclasses thirdpartyresources","title":"16 \u5176\u4ed6"},{"location":"DevOps/16%20Gitlab/Git%20use/","text":"Git\u4f7f\u7528 \u00b6 [toc] \u4ed3\u5e93 \u00b6 \u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [ project-name ] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [ url ] \u914d\u7f6e \u00b6 # \u663e\u793a\u5f53\u524d\u7684Git\u914d\u7f6e $ git config --list # \u7f16\u8f91Git\u914d\u7f6e\u6587\u4ef6 $ git config -e [ --global ] # \u8bbe\u7f6e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u7528\u6237\u4fe1\u606f $ git config [ --global ] user.name \"[name]\" $ git config [ --global ] user.email \"[email address]\" \u589e\u52a0/\u5220\u9664\u6587\u4ef6 \u00b6 # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [ file1 ] [ file2 ] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [ dir ] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [ file1 ] [ file2 ] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [ file ] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [ file-original ] [ file-renamed ] \u4ee3\u7801\u63d0\u4ea4 \u00b6 # \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [ message ] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [ file1 ] [ file2 ] ... -m [ message ] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [ message ] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [ file1 ] [ file2 ] \u2026 \u5206\u652f \u00b6 # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [ branch-name ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [ branch ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [ branch ] [ commit ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [ branch ] [ remote-branch ] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [ branch-name ] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [ branch ] [ remote-branch ] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [ branch ] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [ commit ] # \u5220\u9664\u5206\u652f $ git branch -d [ branch-name ] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [ branch-name ] $ git branch -dr [ remote/branch ] \u6807\u7b7e \u00b6 # \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [ tag ] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [ tag ] [ commit ] # \u5220\u9664\u672c\u5730tag $ git tag -d [ tag ] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/ [ tagName ] # \u67e5\u770btag\u4fe1\u606f $ git show [ tag ] # \u63d0\u4ea4\u6307\u5b9atag $ git push [ remote ] [ tag ] # \u63d0\u4ea4\u6240\u6709tag $ git push [ remote ] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [ branch ] [ tag ] \u67e5\u770b\u4fe1\u606f \u00b6 # \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [ keyword ] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [ tag ] HEAD --pretty = format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [ tag ] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [ file ] $ git whatchanged [ file ] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [ file ] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [ file ] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [ file ] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [ first-branch ] ... [ second-branch ] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [ commit ] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [ commit ] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [ commit ] : [ filename ] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog \u8fdc\u7a0b\u540c\u6b65 \u00b6 # \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [ remote ] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [ remote ] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [ shortname ] [ url ] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [ remote ] [ branch ] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [ remote ] [ branch ] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [ remote ] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [ remote ] --all \u64a4\u9500 \u00b6 # \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [ file ] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [ commit ] [ file ] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [ file ] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [ commit ] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [ commit ] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [ commit ] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [ commit ] \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop \u5176\u5b83 # \u751f\u6210\u4e00\u4e2a\u53ef\u4f9b\u53d1\u5e03\u7684\u538b\u7f29\u5305 $ git archive","title":"Gitlab\u4f7f\u7528"},{"location":"DevOps/16%20Gitlab/Git%20use/#git","text":"[toc]","title":"Git\u4f7f\u7528"},{"location":"DevOps/16%20Gitlab/Git%20use/#_1","text":"\u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa\u4e00\u4e2aGit\u4ee3\u7801\u5e93 $ git init # \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ee3\u7801\u5e93 $ git init [ project-name ] # \u4e0b\u8f7d\u4e00\u4e2a\u9879\u76ee\u548c\u5b83\u7684\u6574\u4e2a\u4ee3\u7801\u5386\u53f2 $ git clone [ url ]","title":"\u4ed3\u5e93"},{"location":"DevOps/16%20Gitlab/Git%20use/#_2","text":"# \u663e\u793a\u5f53\u524d\u7684Git\u914d\u7f6e $ git config --list # \u7f16\u8f91Git\u914d\u7f6e\u6587\u4ef6 $ git config -e [ --global ] # \u8bbe\u7f6e\u63d0\u4ea4\u4ee3\u7801\u65f6\u7684\u7528\u6237\u4fe1\u606f $ git config [ --global ] user.name \"[name]\" $ git config [ --global ] user.email \"[email address]\"","title":"\u914d\u7f6e"},{"location":"DevOps/16%20Gitlab/Git%20use/#_3","text":"# \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add [ file1 ] [ file2 ] ... # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a\uff0c\u5305\u62ec\u5b50\u76ee\u5f55 $ git add [ dir ] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . # \u6dfb\u52a0\u6bcf\u4e2a\u53d8\u5316\u524d\uff0c\u90fd\u4f1a\u8981\u6c42\u786e\u8ba4 # \u5bf9\u4e8e\u540c\u4e00\u4e2a\u6587\u4ef6\u7684\u591a\u5904\u53d8\u5316\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5206\u6b21\u63d0\u4ea4 $ git add -p # \u5220\u9664\u5de5\u4f5c\u533a\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u6b21\u5220\u9664\u653e\u5165\u6682\u5b58\u533a $ git rm [ file1 ] [ file2 ] ... # \u505c\u6b62\u8ffd\u8e2a\u6307\u5b9a\u6587\u4ef6\uff0c\u4f46\u8be5\u6587\u4ef6\u4f1a\u4fdd\u7559\u5728\u5de5\u4f5c\u533a $ git rm --cached [ file ] # \u6539\u540d\u6587\u4ef6\uff0c\u5e76\u4e14\u5c06\u8fd9\u4e2a\u6539\u540d\u653e\u5165\u6682\u5b58\u533a $ git mv [ file-original ] [ file-renamed ]","title":"\u589e\u52a0/\u5220\u9664\u6587\u4ef6"},{"location":"DevOps/16%20Gitlab/Git%20use/#_4","text":"# \u63d0\u4ea4\u6682\u5b58\u533a\u5230\u4ed3\u5e93\u533a $ git commit -m [ message ] # \u63d0\u4ea4\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u4ed3\u5e93\u533a $ git commit [ file1 ] [ file2 ] ... -m [ message ] # \u63d0\u4ea4\u5de5\u4f5c\u533a\u81ea\u4e0a\u6b21commit\u4e4b\u540e\u7684\u53d8\u5316\uff0c\u76f4\u63a5\u5230\u4ed3\u5e93\u533a $ git commit -a # \u63d0\u4ea4\u65f6\u663e\u793a\u6240\u6709diff\u4fe1\u606f $ git commit -v # \u4f7f\u7528\u4e00\u6b21\u65b0\u7684commit\uff0c\u66ff\u4ee3\u4e0a\u4e00\u6b21\u63d0\u4ea4 # \u5982\u679c\u4ee3\u7801\u6ca1\u6709\u4efb\u4f55\u65b0\u53d8\u5316\uff0c\u5219\u7528\u6765\u6539\u5199\u4e0a\u4e00\u6b21commit\u7684\u63d0\u4ea4\u4fe1\u606f $ git commit --amend -m [ message ] # \u91cd\u505a\u4e0a\u4e00\u6b21commit\uff0c\u5e76\u5305\u62ec\u6307\u5b9a\u6587\u4ef6\u7684\u65b0\u53d8\u5316 $ git commit --amend [ file1 ] [ file2 ] \u2026","title":"\u4ee3\u7801\u63d0\u4ea4"},{"location":"DevOps/16%20Gitlab/Git%20use/#_5","text":"# \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f $ git branch # \u5217\u51fa\u6240\u6709\u8fdc\u7a0b\u5206\u652f $ git branch -r # \u5217\u51fa\u6240\u6709\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f $ git branch -a # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4f46\u4f9d\u7136\u505c\u7559\u5728\u5f53\u524d\u5206\u652f $ git branch [ branch-name ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u5207\u6362\u5230\u8be5\u5206\u652f $ git checkout -b [ branch ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u6307\u5b9acommit $ git branch [ branch ] [ commit ] # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb $ git branch --track [ branch ] [ remote-branch ] # \u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\uff0c\u5e76\u66f4\u65b0\u5de5\u4f5c\u533a $ git checkout [ branch-name ] # \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u5206\u652f $ git checkout - # \u5efa\u7acb\u8ffd\u8e2a\u5173\u7cfb\uff0c\u5728\u73b0\u6709\u5206\u652f\u4e0e\u6307\u5b9a\u7684\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4 $ git branch --set-upstream [ branch ] [ remote-branch ] # \u5408\u5e76\u6307\u5b9a\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge [ branch ] # \u9009\u62e9\u4e00\u4e2acommit\uff0c\u5408\u5e76\u8fdb\u5f53\u524d\u5206\u652f $ git cherry-pick [ commit ] # \u5220\u9664\u5206\u652f $ git branch -d [ branch-name ] # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete [ branch-name ] $ git branch -dr [ remote/branch ]","title":"\u5206\u652f"},{"location":"DevOps/16%20Gitlab/Git%20use/#_6","text":"# \u5217\u51fa\u6240\u6709tag $ git tag # \u65b0\u5efa\u4e00\u4e2atag\u5728\u5f53\u524dcommit $ git tag [ tag ] # \u65b0\u5efa\u4e00\u4e2atag\u5728\u6307\u5b9acommit $ git tag [ tag ] [ commit ] # \u5220\u9664\u672c\u5730tag $ git tag -d [ tag ] # \u5220\u9664\u8fdc\u7a0btag $ git push origin :refs/tags/ [ tagName ] # \u67e5\u770btag\u4fe1\u606f $ git show [ tag ] # \u63d0\u4ea4\u6307\u5b9atag $ git push [ remote ] [ tag ] # \u63d0\u4ea4\u6240\u6709tag $ git push [ remote ] --tags # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\uff0c\u6307\u5411\u67d0\u4e2atag $ git checkout -b [ branch ] [ tag ]","title":"\u6807\u7b7e"},{"location":"DevOps/16%20Gitlab/Git%20use/#_7","text":"# \u663e\u793a\u6709\u53d8\u66f4\u7684\u6587\u4ef6 $ git status # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u7248\u672c\u5386\u53f2 $ git log # \u663e\u793acommit\u5386\u53f2\uff0c\u4ee5\u53ca\u6bcf\u6b21commit\u53d1\u751f\u53d8\u66f4\u7684\u6587\u4ef6 $ git log --stat # \u641c\u7d22\u63d0\u4ea4\u5386\u53f2\uff0c\u6839\u636e\u5173\u952e\u8bcd $ git log -S [ keyword ] # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u6bcf\u4e2acommit\u5360\u636e\u4e00\u884c $ git log [ tag ] HEAD --pretty = format:%s # \u663e\u793a\u67d0\u4e2acommit\u4e4b\u540e\u7684\u6240\u6709\u53d8\u52a8\uff0c\u5176\"\u63d0\u4ea4\u8bf4\u660e\"\u5fc5\u987b\u7b26\u5408\u641c\u7d22\u6761\u4ef6 $ git log [ tag ] HEAD --grep feature # \u663e\u793a\u67d0\u4e2a\u6587\u4ef6\u7684\u7248\u672c\u5386\u53f2\uff0c\u5305\u62ec\u6587\u4ef6\u6539\u540d $ git log --follow [ file ] $ git whatchanged [ file ] # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u76f8\u5173\u7684\u6bcf\u4e00\u6b21diff $ git log -p [ file ] # \u663e\u793a\u8fc7\u53bb5\u6b21\u63d0\u4ea4 $ git log -5 --pretty --oneline # \u663e\u793a\u6240\u6709\u63d0\u4ea4\u8fc7\u7684\u7528\u6237\uff0c\u6309\u63d0\u4ea4\u6b21\u6570\u6392\u5e8f $ git shortlog -sn # \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u662f\u4ec0\u4e48\u4eba\u5728\u4ec0\u4e48\u65f6\u95f4\u4fee\u6539\u8fc7 $ git blame [ file ] # \u663e\u793a\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u5dee\u5f02 $ git diff # \u663e\u793a\u6682\u5b58\u533a\u548c\u4e0a\u4e00\u4e2acommit\u7684\u5dee\u5f02 $ git diff --cached [ file ] # \u663e\u793a\u5de5\u4f5c\u533a\u4e0e\u5f53\u524d\u5206\u652f\u6700\u65b0commit\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff HEAD # \u663e\u793a\u4e24\u6b21\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02 $ git diff [ first-branch ] ... [ second-branch ] # \u663e\u793a\u4eca\u5929\u4f60\u5199\u4e86\u591a\u5c11\u884c\u4ee3\u7801 $ git diff --shortstat \"@{0 day ago}\" # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u7684\u5143\u6570\u636e\u548c\u5185\u5bb9\u53d8\u5316 $ git show [ commit ] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u53d1\u751f\u53d8\u5316\u7684\u6587\u4ef6 $ git show --name-only [ commit ] # \u663e\u793a\u67d0\u6b21\u63d0\u4ea4\u65f6\uff0c\u67d0\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9 $ git show [ commit ] : [ filename ] # \u663e\u793a\u5f53\u524d\u5206\u652f\u7684\u6700\u8fd1\u51e0\u6b21\u63d0\u4ea4 $ git reflog","title":"\u67e5\u770b\u4fe1\u606f"},{"location":"DevOps/16%20Gitlab/Git%20use/#_8","text":"# \u4e0b\u8f7d\u8fdc\u7a0b\u4ed3\u5e93\u7684\u6240\u6709\u53d8\u52a8 $ git fetch [ remote ] # \u663e\u793a\u6240\u6709\u8fdc\u7a0b\u4ed3\u5e93 $ git remote -v # \u663e\u793a\u67d0\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f $ git remote show [ remote ] # \u589e\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5e76\u547d\u540d $ git remote add [ shortname ] [ url ] # \u53d6\u56de\u8fdc\u7a0b\u4ed3\u5e93\u7684\u53d8\u5316\uff0c\u5e76\u4e0e\u672c\u5730\u5206\u652f\u5408\u5e76 $ git pull [ remote ] [ branch ] # \u4e0a\u4f20\u672c\u5730\u6307\u5b9a\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [ remote ] [ branch ] # \u5f3a\u884c\u63a8\u9001\u5f53\u524d\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u5373\u4f7f\u6709\u51b2\u7a81 $ git push [ remote ] --force # \u63a8\u9001\u6240\u6709\u5206\u652f\u5230\u8fdc\u7a0b\u4ed3\u5e93 $ git push [ remote ] --all","title":"\u8fdc\u7a0b\u540c\u6b65"},{"location":"DevOps/16%20Gitlab/Git%20use/#_9","text":"# \u6062\u590d\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout [ file ] # \u6062\u590d\u67d0\u4e2acommit\u7684\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a $ git checkout [ commit ] [ file ] # \u6062\u590d\u6682\u5b58\u533a\u7684\u6240\u6709\u6587\u4ef6\u5230\u5de5\u4f5c\u533a $ git checkout . # \u91cd\u7f6e\u6682\u5b58\u533a\u7684\u6307\u5b9a\u6587\u4ef6\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [ file ] # \u91cd\u7f6e\u6682\u5b58\u533a\u4e0e\u5de5\u4f5c\u533a\uff0c\u4e0e\u4e0a\u4e00\u6b21commit\u4fdd\u6301\u4e00\u81f4 $ git reset --hard # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684\u6307\u9488\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\uff0c\u4f46\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset [ commit ] # \u91cd\u7f6e\u5f53\u524d\u5206\u652f\u7684HEAD\u4e3a\u6307\u5b9acommit\uff0c\u540c\u65f6\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e0e\u6307\u5b9acommit\u4e00\u81f4 $ git reset --hard [ commit ] # \u91cd\u7f6e\u5f53\u524dHEAD\u4e3a\u6307\u5b9acommit\uff0c\u4f46\u4fdd\u6301\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e0d\u53d8 $ git reset --keep [ commit ] # \u65b0\u5efa\u4e00\u4e2acommit\uff0c\u7528\u6765\u64a4\u9500\u6307\u5b9acommit # \u540e\u8005\u7684\u6240\u6709\u53d8\u5316\u90fd\u5c06\u88ab\u524d\u8005\u62b5\u6d88\uff0c\u5e76\u4e14\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f $ git revert [ commit ] \u6682\u65f6\u5c06\u672a\u63d0\u4ea4\u7684\u53d8\u5316\u79fb\u9664\uff0c\u7a0d\u540e\u518d\u79fb\u5165 $ git stash $ git stash pop \u5176\u5b83 # \u751f\u6210\u4e00\u4e2a\u53ef\u4f9b\u53d1\u5e03\u7684\u538b\u7f29\u5305 $ git archive","title":"\u64a4\u9500"},{"location":"DevOps/16%20Gitlab/Gitlab%20backup%20script/","text":"Gitlab\u5907\u4efd\u811a\u672c \u00b6 #!/bin/bash # gitlab \u5907\u4efd\u8def\u5f84 LocalBackDir=/var/opt/gitlab/backups # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 gitlab\u5907\u4efd\u6587\u4ef6\u5b58\u653e\u8def\u5f84 RemoteBackDir=/data/gitlab_backup # \u5907\u4efdLog\u5b58\u653e\u8def\u5f84 BackupLogsDir=/data/logs/gitlab # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 \u767b\u5f55\u8d26\u6237 RemoteUser=root # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 IP\u5730\u5740 \uff08\u6839\u636e\u5b9e\u9645\u4fee\u6539\uff09 RemoteIP= # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 ssh\u7aef\u53e3\u53f7 \uff08\u6839\u636e\u5b9e\u9645\u4fee\u6539\uff09 RemotePort=8022 # \u5f53\u524d\u7cfb\u7edf\u65e5\u671f DATE=`date +\"%Y-%m-%d-%H:%M:%S\"` # Log\u5b58\u653e\u8def\u5f84 LogFile=$BackupLogsDir/$DATE.log # \u65b0\u5efa\u65e5\u5fd7\u6587\u4ef6 touch $LogFile # Gitlab\u5907\u4efd /usr/bin/gitlab-rake gitlab:backup:create >> $LogFile # \u5224\u65ad\u662f\u5426\u5907\u4efd\u6210\u529f if [ $? -eq 0 ] then echo \" $DATE Gitlab Backup Success! \" # >> $LogFile echo \"-------------------------------------\" # >> $LogFile else echo \"$DATE Gitlab Backup Failed\" #>> $LogFile # mail -s 'Gitlab Backup Failed' ops@gokuaidian.com < $LogFile exit fi # \u67e5\u627e \u672c\u5730\u5907\u4efd\u76ee\u5f55\u4e0b \u65f6\u95f4\u4e3a5\u5206\u949f\u4e4b\u5185\u7684\uff0c\u5e76\u4e14\u540e\u7f00\u4e3a.tar\u7684gitlab\u5907\u4efd\u6587\u4ef6 BACKUPFILE_SEND_TO_REMOTE=$(find /var/opt/gitlab/backups -type f -mmin -5 -name '*.tar*') # \u8ffd\u52a0\u65e5\u5fd7\u5230\u65e5\u5fd7\u6587\u4ef6 echo \"Gitlab auto backup to remote server, start at $DATE\" #>> $LogFile echo \"-------------------------------------\" #>> $LogFile # \u8f93\u51fa\u65e5\u5fd7\uff0c\u6253\u5370\u51fa\u6bcf\u6b21scp\u7684\u6587\u4ef6\u540d echo \"The file to scp to remote server is: $BACKUPFILE_SEND_TO_REMOTE\" #>> $LogFile # \u5907\u4efd\u5230\u8fdc\u7a0b\u670d\u52a1\u5668 scp -P $RemotePort $BACKUPFILE_SEND_TO_REMOTE $RemoteUser@$RemoteIP:$RemoteBackDir # \u8ffd\u52a0\u65e5\u5fd7\u5230\u65e5\u5fd7\u6587\u4ef6 echo \"-------------------------------------\" #>> $LogFile # \u5220\u96647\u5929\u4ee5\u4e0a\u5907\u4efd find /var/opt/gitlab/backups/ -mtime +7 -name \"*.*\" -exec rm -rf {} \\; #ssh -T $RemoteUser@$RemoteIP <<EOF # find /data/backup/gitlab/beifen/ -mtime +7 -name \"*.*\" -exec rm -rf {} \\; #EOF # \u5907\u4efd\u6210\u529f\u53d1\u9001\u90ae\u4ef6 # mail -s 'Gitlab Backup Success!' abc@abc.com < $LogFile","title":"Gitlab\u5907\u4efd\u811a\u672c"},{"location":"DevOps/16%20Gitlab/Gitlab%20backup%20script/#gitlab","text":"#!/bin/bash # gitlab \u5907\u4efd\u8def\u5f84 LocalBackDir=/var/opt/gitlab/backups # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 gitlab\u5907\u4efd\u6587\u4ef6\u5b58\u653e\u8def\u5f84 RemoteBackDir=/data/gitlab_backup # \u5907\u4efdLog\u5b58\u653e\u8def\u5f84 BackupLogsDir=/data/logs/gitlab # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 \u767b\u5f55\u8d26\u6237 RemoteUser=root # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 IP\u5730\u5740 \uff08\u6839\u636e\u5b9e\u9645\u4fee\u6539\uff09 RemoteIP= # \u8fdc\u7a0b\u5907\u4efd\u670d\u52a1\u5668 ssh\u7aef\u53e3\u53f7 \uff08\u6839\u636e\u5b9e\u9645\u4fee\u6539\uff09 RemotePort=8022 # \u5f53\u524d\u7cfb\u7edf\u65e5\u671f DATE=`date +\"%Y-%m-%d-%H:%M:%S\"` # Log\u5b58\u653e\u8def\u5f84 LogFile=$BackupLogsDir/$DATE.log # \u65b0\u5efa\u65e5\u5fd7\u6587\u4ef6 touch $LogFile # Gitlab\u5907\u4efd /usr/bin/gitlab-rake gitlab:backup:create >> $LogFile # \u5224\u65ad\u662f\u5426\u5907\u4efd\u6210\u529f if [ $? -eq 0 ] then echo \" $DATE Gitlab Backup Success! \" # >> $LogFile echo \"-------------------------------------\" # >> $LogFile else echo \"$DATE Gitlab Backup Failed\" #>> $LogFile # mail -s 'Gitlab Backup Failed' ops@gokuaidian.com < $LogFile exit fi # \u67e5\u627e \u672c\u5730\u5907\u4efd\u76ee\u5f55\u4e0b \u65f6\u95f4\u4e3a5\u5206\u949f\u4e4b\u5185\u7684\uff0c\u5e76\u4e14\u540e\u7f00\u4e3a.tar\u7684gitlab\u5907\u4efd\u6587\u4ef6 BACKUPFILE_SEND_TO_REMOTE=$(find /var/opt/gitlab/backups -type f -mmin -5 -name '*.tar*') # \u8ffd\u52a0\u65e5\u5fd7\u5230\u65e5\u5fd7\u6587\u4ef6 echo \"Gitlab auto backup to remote server, start at $DATE\" #>> $LogFile echo \"-------------------------------------\" #>> $LogFile # \u8f93\u51fa\u65e5\u5fd7\uff0c\u6253\u5370\u51fa\u6bcf\u6b21scp\u7684\u6587\u4ef6\u540d echo \"The file to scp to remote server is: $BACKUPFILE_SEND_TO_REMOTE\" #>> $LogFile # \u5907\u4efd\u5230\u8fdc\u7a0b\u670d\u52a1\u5668 scp -P $RemotePort $BACKUPFILE_SEND_TO_REMOTE $RemoteUser@$RemoteIP:$RemoteBackDir # \u8ffd\u52a0\u65e5\u5fd7\u5230\u65e5\u5fd7\u6587\u4ef6 echo \"-------------------------------------\" #>> $LogFile # \u5220\u96647\u5929\u4ee5\u4e0a\u5907\u4efd find /var/opt/gitlab/backups/ -mtime +7 -name \"*.*\" -exec rm -rf {} \\; #ssh -T $RemoteUser@$RemoteIP <<EOF # find /data/backup/gitlab/beifen/ -mtime +7 -name \"*.*\" -exec rm -rf {} \\; #EOF # \u5907\u4efd\u6210\u529f\u53d1\u9001\u90ae\u4ef6 # mail -s 'Gitlab Backup Success!' abc@abc.com < $LogFile","title":"Gitlab\u5907\u4efd\u811a\u672c"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/","text":"fmt.Printf \u4f7f\u7528 \u00b6 General \u00b6 %v \u4ee5\u9ed8\u8ba4\u7684\u65b9\u5f0f\u6253\u5370\u53d8\u91cf\u7684\u503c % T \u6253\u5370\u53d8\u91cf\u7684\u7c7b\u578b Integer \u00b6 %+ d \u5e26\u7b26\u53f7\u7684\u6574\u578b\uff0c fmt . Printf ( \"%+d\" , 255 ) \u8f93\u51fa + 255 %q \u6253\u5370\u5355\u5f15\u53f7 %o \u4e0d\u5e26\u96f6\u7684\u516b\u8fdb\u5236 % #o \u5e26\u96f6\u7684\u516b\u8fdb\u5236 %x \u5c0f\u5199\u7684\u5341\u516d\u8fdb\u5236 % X \u5927\u5199\u7684\u5341\u516d\u8fdb\u5236 % #x \u5e26 0 x\u7684\u5341\u516d\u8fdb\u5236 % U \u6253\u5370 Unicode\u5b57\u7b26 % #U \u6253\u5370\u5e26\u5b57\u7b26\u7684 Unicode %b \u6253\u5370\u6574\u578b\u7684\u4e8c\u8fdb\u5236 Integer width \u00b6 %5d \u8868\u793a\u8be5\u6574\u578b\u6700\u5927\u957f\u5ea6\u662f5\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801 %-5d \u5219\u76f8\u53cd\uff0c\u6253\u5370\u7ed3\u679c\u4f1a\u81ea\u52a8\u5de6\u5bf9\u9f50 %05d \u4f1a\u5728\u6570\u5b57\u524d\u9762\u8865\u96f6\u3002 Float \u00b6 %f ( =% .6f ) 6 \u4f4d\u5c0f\u6570\u70b9 %e ( =% .6 e ) 6 \u4f4d\u5c0f\u6570\u70b9\uff08\u79d1\u5b66\u8ba1\u6570\u6cd5\uff09 %g \u7528\u6700\u5c11\u7684\u6570\u5b57\u6765\u8868\u793a % .3 g \u6700\u591a 3 \u4f4d\u6570\u5b57\u6765\u8868\u793a % .3f \u6700\u591a 3 \u4f4d\u5c0f\u6570\u6765\u8868\u793a String \u00b6 %s \u6b63\u5e38\u8f93\u51fa\u5b57\u7b26\u4e32 %q \u5b57\u7b26\u4e32\u5e26\u53cc\u5f15\u53f7\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5f15\u53f7\u5e26\u8f6c\u4e49\u7b26 % #q \u5b57\u7b26\u4e32\u5e26\u53cd\u5f15\u53f7\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u5185\u6709\u53cd\u5f15\u53f7\uff0c\u5c31\u7528\u53cc\u5f15\u53f7\u4ee3\u66ff %x \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\u7684 16 \u8fdb\u5236\u683c\u5f0f % X \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199\u7684 16 \u8fdb\u5236\u683c\u5f0f % x \u5e26\u7a7a\u683c\u7684 16 \u8fdb\u5236\u683c\u5f0f String Width (\u4ee55\u505a\u4f8b\u5b50\uff09 \u00b6 %5s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5 %-5s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff08\u5de6\u5bf9\u9f50\uff09 %.5s \u6700\u5927\u5bbd\u5ea6\u4e3a5 %5.7s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff0c\u6700\u5927\u5bbd\u5ea6\u4e3a7 %-5.7s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff0c\u6700\u5927\u5bbd\u5ea6\u4e3a7\uff08\u5de6\u5bf9\u9f50\uff09 %5.3s \u5982\u679c\u5bbd\u5ea6\u5927\u4e8e3\uff0c\u5219\u622a\u65ad %05s \u5982\u679c\u5bbd\u5ea6\u5c0f\u4e8e5\uff0c\u5c31\u4f1a\u5728\u5b57\u7b26\u4e32\u524d\u9762\u8865\u96f6 Struct \u00b6 %v \u6b63\u5e38\u6253\u5370\u3002\u6bd4\u5982\uff1a { sam { 12345 67890 }} %+ v \u5e26\u5b57\u6bb5\u540d\u79f0\u3002\u6bd4\u5982\uff1a { name : sam phone :{ mobile : 12345 office : 67890 } % #v \u7528 Go\u7684\u8bed\u6cd5\u6253\u5370 \u3002 \u6bd4\u5982 main . People { name : \u201d sam \u201d , phone : main . Phone { mobile : \u201d 12345 \u201d , office : \u201d 67890 \u201d }} Boolean \u00b6 %t \u6253\u5370 true\u6216false Pointer \u00b6 %p \u5e26 0 x\u7684\u6307\u9488 % #p \u4e0d\u5e26 0 x\u7684\u6307\u9488","title":"01 fmt.Printf\u4f7f\u7528"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#fmtprintf","text":"","title":"fmt.Printf \u4f7f\u7528"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#general","text":"%v \u4ee5\u9ed8\u8ba4\u7684\u65b9\u5f0f\u6253\u5370\u53d8\u91cf\u7684\u503c % T \u6253\u5370\u53d8\u91cf\u7684\u7c7b\u578b","title":"General"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#integer","text":"%+ d \u5e26\u7b26\u53f7\u7684\u6574\u578b\uff0c fmt . Printf ( \"%+d\" , 255 ) \u8f93\u51fa + 255 %q \u6253\u5370\u5355\u5f15\u53f7 %o \u4e0d\u5e26\u96f6\u7684\u516b\u8fdb\u5236 % #o \u5e26\u96f6\u7684\u516b\u8fdb\u5236 %x \u5c0f\u5199\u7684\u5341\u516d\u8fdb\u5236 % X \u5927\u5199\u7684\u5341\u516d\u8fdb\u5236 % #x \u5e26 0 x\u7684\u5341\u516d\u8fdb\u5236 % U \u6253\u5370 Unicode\u5b57\u7b26 % #U \u6253\u5370\u5e26\u5b57\u7b26\u7684 Unicode %b \u6253\u5370\u6574\u578b\u7684\u4e8c\u8fdb\u5236","title":"Integer"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#integer-width","text":"%5d \u8868\u793a\u8be5\u6574\u578b\u6700\u5927\u957f\u5ea6\u662f5\uff0c\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801 %-5d \u5219\u76f8\u53cd\uff0c\u6253\u5370\u7ed3\u679c\u4f1a\u81ea\u52a8\u5de6\u5bf9\u9f50 %05d \u4f1a\u5728\u6570\u5b57\u524d\u9762\u8865\u96f6\u3002","title":"Integer width"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#float","text":"%f ( =% .6f ) 6 \u4f4d\u5c0f\u6570\u70b9 %e ( =% .6 e ) 6 \u4f4d\u5c0f\u6570\u70b9\uff08\u79d1\u5b66\u8ba1\u6570\u6cd5\uff09 %g \u7528\u6700\u5c11\u7684\u6570\u5b57\u6765\u8868\u793a % .3 g \u6700\u591a 3 \u4f4d\u6570\u5b57\u6765\u8868\u793a % .3f \u6700\u591a 3 \u4f4d\u5c0f\u6570\u6765\u8868\u793a","title":"Float"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#string","text":"%s \u6b63\u5e38\u8f93\u51fa\u5b57\u7b26\u4e32 %q \u5b57\u7b26\u4e32\u5e26\u53cc\u5f15\u53f7\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u5f15\u53f7\u5e26\u8f6c\u4e49\u7b26 % #q \u5b57\u7b26\u4e32\u5e26\u53cd\u5f15\u53f7\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u5185\u6709\u53cd\u5f15\u53f7\uff0c\u5c31\u7528\u53cc\u5f15\u53f7\u4ee3\u66ff %x \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\u7684 16 \u8fdb\u5236\u683c\u5f0f % X \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199\u7684 16 \u8fdb\u5236\u683c\u5f0f % x \u5e26\u7a7a\u683c\u7684 16 \u8fdb\u5236\u683c\u5f0f","title":"String"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#string-width-5","text":"%5s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5 %-5s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff08\u5de6\u5bf9\u9f50\uff09 %.5s \u6700\u5927\u5bbd\u5ea6\u4e3a5 %5.7s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff0c\u6700\u5927\u5bbd\u5ea6\u4e3a7 %-5.7s \u6700\u5c0f\u5bbd\u5ea6\u4e3a5\uff0c\u6700\u5927\u5bbd\u5ea6\u4e3a7\uff08\u5de6\u5bf9\u9f50\uff09 %5.3s \u5982\u679c\u5bbd\u5ea6\u5927\u4e8e3\uff0c\u5219\u622a\u65ad %05s \u5982\u679c\u5bbd\u5ea6\u5c0f\u4e8e5\uff0c\u5c31\u4f1a\u5728\u5b57\u7b26\u4e32\u524d\u9762\u8865\u96f6","title":"String Width (\u4ee55\u505a\u4f8b\u5b50\uff09"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#struct","text":"%v \u6b63\u5e38\u6253\u5370\u3002\u6bd4\u5982\uff1a { sam { 12345 67890 }} %+ v \u5e26\u5b57\u6bb5\u540d\u79f0\u3002\u6bd4\u5982\uff1a { name : sam phone :{ mobile : 12345 office : 67890 } % #v \u7528 Go\u7684\u8bed\u6cd5\u6253\u5370 \u3002 \u6bd4\u5982 main . People { name : \u201d sam \u201d , phone : main . Phone { mobile : \u201d 12345 \u201d , office : \u201d 67890 \u201d }}","title":"Struct"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#boolean","text":"%t \u6253\u5370 true\u6216false","title":"Boolean"},{"location":"DevOps/17%20Golang/01%20fmt.Printf%20use/#pointer","text":"%p \u5e26 0 x\u7684\u6307\u9488 % #p \u4e0d\u5e26 0 x\u7684\u6307\u9488","title":"Pointer"},{"location":"DevOps/17%20Golang/02%20pack/","text":"\u6253\u5305 \u00b6 go\u6253\u5305\u547d\u4ee4 \u00b6 go build \u5e38\u89c4\u6253\u5305\u65b9\u6cd5 go build -ldflags '-w -s' \u4f7f\u7528 \u201c-dflags\u201d \u7f29\u5c0f\u5927\u5c0f upx ...\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4f7f\u7528upx\u6253\u5305\u4e3a\u6700\u5c0f\u7a0b\u5e8f \u672c\u673a\u6253\u5305\u8bb0\u5f55 \u00b6 CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build -o target/ranksrv_ ` date +%Y_%m_%d ` ${ SRCPATH } CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build -ldflags '-w -s' -o pkg/prome_ali \u5404\u4e2a\u5e73\u53f0\u6253\u5305\u8bf4\u660e \u00b6 Mac \u6253\u5305Linux windows $ CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build test.go $ CGO_ENABLED = 0 GOOS = windows GOARCH = amd64 go build test.go * Linux\u6253\u5305Mac windows $ CGO_ENABLED = 0 GOOS = darwin GOARCH = amd64 go build test.go $ CGO_ENABLED = 0 GOOS = windows GOARCH = amd64 go build test.go * windows\u7f16\u8bd1Linux Mac $ SET CGO_ENABLED = 0SET GOOS = darwin3 SET GOARCH = amd64 go build test.go $ SET CGO_ENABLED = 0 SET GOOS = linux SET GOARCH = amd64 go build test.go * \u53c2\u6570\u8bf4\u660e GOOS\uff1a\u76ee\u6807\u53ef\u6267\u884c\u7a0b\u5e8f\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u652f\u6301 darwin\uff0cfreebsd\uff0clinux\uff0cwindows GOARCH\uff1a\u76ee\u6807\u53ef\u6267\u884c\u7a0b\u5e8f\u64cd\u4f5c\u7cfb\u7edf\u6784\u67b6\uff0c\u5305\u62ec 386 \uff0camd64\uff0carm","title":"02 \u6253\u5305"},{"location":"DevOps/17%20Golang/02%20pack/#_1","text":"","title":"\u6253\u5305"},{"location":"DevOps/17%20Golang/02%20pack/#go","text":"go build \u5e38\u89c4\u6253\u5305\u65b9\u6cd5 go build -ldflags '-w -s' \u4f7f\u7528 \u201c-dflags\u201d \u7f29\u5c0f\u5927\u5c0f upx ...\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4f7f\u7528upx\u6253\u5305\u4e3a\u6700\u5c0f\u7a0b\u5e8f","title":"go\u6253\u5305\u547d\u4ee4"},{"location":"DevOps/17%20Golang/02%20pack/#_2","text":"CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build -o target/ranksrv_ ` date +%Y_%m_%d ` ${ SRCPATH } CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build -ldflags '-w -s' -o pkg/prome_ali","title":"\u672c\u673a\u6253\u5305\u8bb0\u5f55"},{"location":"DevOps/17%20Golang/02%20pack/#_3","text":"Mac \u6253\u5305Linux windows $ CGO_ENABLED = 0 GOOS = linux GOARCH = amd64 go build test.go $ CGO_ENABLED = 0 GOOS = windows GOARCH = amd64 go build test.go * Linux\u6253\u5305Mac windows $ CGO_ENABLED = 0 GOOS = darwin GOARCH = amd64 go build test.go $ CGO_ENABLED = 0 GOOS = windows GOARCH = amd64 go build test.go * windows\u7f16\u8bd1Linux Mac $ SET CGO_ENABLED = 0SET GOOS = darwin3 SET GOARCH = amd64 go build test.go $ SET CGO_ENABLED = 0 SET GOOS = linux SET GOARCH = amd64 go build test.go * \u53c2\u6570\u8bf4\u660e GOOS\uff1a\u76ee\u6807\u53ef\u6267\u884c\u7a0b\u5e8f\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u652f\u6301 darwin\uff0cfreebsd\uff0clinux\uff0cwindows GOARCH\uff1a\u76ee\u6807\u53ef\u6267\u884c\u7a0b\u5e8f\u64cd\u4f5c\u7cfb\u7edf\u6784\u67b6\uff0c\u5305\u62ec 386 \uff0camd64\uff0carm","title":"\u5404\u4e2a\u5e73\u53f0\u6253\u5305\u8bf4\u660e"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/","text":"Go\u51fd\u6570 \u51fd\u6570\u8c03\u7528 \u51fd\u6570\u53c2\u6570 \u4e0d\u5b9a\u53c2\u6570 \u4e0d\u5b9a\u53c2\u6570\u7c7b\u578b \u4e0d\u5b9a\u53c2\u6570\u4f20\u9012 \u4efb\u610f\u7c7b\u578b\u4e0d\u5b9a\u53c2\u6570 \u533f\u540d\u51fd\u6570 \u95ed\u5305 Go\u51fd\u6570 \u00b6 Go\u51fd\u6570\u6982\u5ff5 /* go\u51fd\u6570\u5b9a\u4e49\u4f7f\u7528 func functi_name( [parameter list] ) [return_types] { \u51fd\u6570\u4f53 } \u51fd\u6570function Go\u51fd\u6570\u4e0d\u652f\u6301\u5d4c\u5957\u3001\u91cd\u8f7d\u548c\u9ed8\u8ba4\u83dc\u852c \u4f46\u652f\u6301\u4e00\u4e0b\u7279\u6027\uff1a \u65e0\u9700\u58f0\u660e\u539f\u578b\u3001\u4e0d\u5b9a\u957f\u5ea6\u53d8\u53c2\u3001\u591a\u8fd4\u56de\u503c\u3001\u547d\u540d\u8fd4\u56de\u503c\u53c2\u6570\u3001\u533f\u540d\u51fd\u6570\u3001\u95ed\u5305 \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57func\uff0c\u4e14\u505a\u5927\u62ec\u53f7\u4e0d\u80fd\u53e6\u8d77\u4e00\u884c \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u7c7b\u578b\u4f7f\u7528 defter \u6267\u884c\u65b9\u5f0f\u7c7b\u578b\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6790\u6784\u51fd\u6570\uff0c\u5728\u51fd\u6570\u4f53\u6267\u884c\u7ed3\u675f\u540e\u6309\u7167\u8c03\u7528\u987a\u5e8f\u7684\u60f3\u53cd\u987a\u5e8f\u9010\u4e2a\u6267\u884c \u5373\u4f7f\u51fd\u6570\u53d1\u751f\u4e25\u91cd\u9519\u8bef\u4e5f\u4f1a\u6267\u884c \u652f\u6301\u533f\u540d\u51fd\u6570\u7684\u8c03\u7528 \u5e38\u7528\u8bed\u8d44\u6e90\u6e05\u7406\uff0c\u6587\u4ef6\u5173\u95ed\uff0c\u89e3\u9501\u4ee5\u53ca\u8bb0\u5f55\u65f6\u95f4\u7b49\u64cd\u4f5c \u901a\u8fc7\u4e0e\u533f\u540d\u51fd\u6570\u914d\u5408\u53ef\u5728return\u4e4b\u540e\u4fee\u6539\u51fd\u6570\u8ba1\u7b97\u7ed3\u679c \u5982\u679c\u51fd\u6570\u4f53\u5185\u67d0\u4e2a\u53d8\u91cf\u4f5c\u4e3adefer\u65f6\u533f\u540d\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5219\u5728\u5b9a\u4e49defer\u65f6\u5373\u5df2\u7ecf\u83b7\u53d6\u4e86\u62f7\u8d1d\uff0c\u5426\u5219\u5219\u662f\u5e94\u7528\u67d0\u4e2a\u53d8\u91cf\u7684\u5730\u5740 Go\u6ca1\u6709\u5f02\u5e38\u673a\u5236\uff0c\u4f46\u662fpanic/recover\u6a21\u5f0f\u6765\u5904\u7406\u9519\u8bef Panic\u53ef\u4ee5\u518d\u4efb\u4f55\u5730\u65b9\u5f15\u53d1\uff0c\u4f46\u662frecover\u53ea\u6709\u5728defer\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u6709\u6548 */ Go\u51fd\u6570\u5b9a\u4e49 func function_name ( [ parameter list ] ) [ return_types ] { \u51fd\u6570\u4f53 } * func\uff1aGo\u7684\u51fd\u6570\u58f0\u660e\u5173\u952e\u5b57\uff0c\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u3002 * function_name\uff1a\u51fd\u6570\u540d\u79f0\uff0c\u51fd\u6570\u540d\u548c\u53c2\u6570\u5217\u8868\u4e00\u8d77\u6784\u6210\u4e86\u51fd\u6570\u7b7e\u540d\u3002 * parameter list\uff1a\u53c2\u6570\u5217\u8868\uff0c\u6307\u5b9a\u7684\u662f\u53c2\u6570\u7c7b\u578b\u3001\u987a\u5e8f\u3001\u53ca\u53c2\u6570\u4e2a\u6570\u3002\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u5373\u51fd\u6570\u53ef\u4ee5\u4e0d\u5305\u542b\u53c2\u6570\u3002\u53c2\u6570\u5c31\u50cf\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u8fd9\u662f\u53c2\u6570\u88ab\u79f0\u4e3a\u5f62\u53c2\uff0c\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u5c06\u5177\u4f53\u7684\u503c\u4f20\u9012 \u7ed9\u53c2\u6570\uff0c\u8fd9\u4e2a\u503c\u88ab\u79f0\u4e3a\u5b9e\u9645\u53c2\u6570\u3002 * return_types\uff1a\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u8fd4\u56de\u4e00\u5217\u503c\u3002return_types \u662f\u8be5\u5217\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662fGo\u51fd\u6570\u652f\u6301\u591a\u8fd4\u56de\u503c\u3002\u6709\u4e9b\u529f\u80fd\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b return_types \u4e0d\u662f\u5fc5\u987b\u7684\u3002 * \u51fd\u6570\u4f53\uff1a\u51fd\u6570\u5b9a\u4e49\u7684\u4ee3\u7801\u96c6\u5408\uff0c\u8868\u793a\u51fd\u6570\u5b8c\u6210\u7684\u52a8\u4f5c\u3002 \u51fd\u6570\u8c03\u7528 \u00b6 1.\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u51fd\u6570\u53ea\u5728\u672c\u5305\u5185\u53ef\u89c1\uff0c\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u51fd\u6570\u624d\u80fd\u88ab\u5176\u4ed6\u5305\u4f7f\u7528\u3002 2.\u540c\u65f6\u8fd9\u4e2a\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u53d8\u91cf\u7684\u53ef\u89c1\u6027\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u53d8\u91cf\u624d\u662f\u5168\u5c40\u7684 func max ( num1 , num2 int ) int { var result int if num1 > num1 { result = num1 } else { result = num2 } return result } func main () { var a int = 100 var b int = 200 var ret int ret = max ( a , b ) fmt . Println ( ret ) } * \u591a\u8fd4\u56de\u503c func swap ( x , y string ) ( string , string ) { return y , x } func main () { //a,b := swap(\"hello\",\"world\") a , _ := swap ( \"hello\" , \"world\" ) //\u53ea\u5173\u6ce8\u4e00\u4e2a\u503c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf\u4ee3\u66ff fmt . Println ( a ) } \u51fd\u6570\u53c2\u6570 \u00b6 \u503c\u4f20\u9012\uff1a\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u590d\u5236\u4e00\u4efd\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5728\u51fd\u6570\u4e2d\u5982\u679c\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u5f15\u7528\u4f20\u9012\uff1a\u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u7684\u5730\u5740\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4e2d\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u5c06\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 * \u503c\u4f20\u9012 func main () { var a int = 100 var b int = 200 fmt . Println ( \"\u4ea4\u6362\u524d\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) swap ( a , b ) fmt . Println ( \"\u4ea4\u6362\u540e\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) } func swap ( x , y int ) int { var temp int temp = x x = y y = temp return temp } * \u6267\u884c\u7ed3\u679c \u4ea4\u6362\u524d 100 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 100 \u4ea4\u6362\u540e 200 * \u5f15\u7528\u4f20\u9012 func main () { var a int = 100 var b int = 200 fmt . Println ( \"\u4ea4\u6362\u524d\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) /* \u8c03\u7528 swap() \u51fd\u6570 &a \u6307\u5411 a \u6307\u9488\uff0ca \u53d8\u91cf\u7684\u5730\u5740 &b \u6307\u5411 b \u6307\u9488\uff0cb \u53d8\u91cf\u7684\u5730\u5740 */ swap ( & a , & b ) fmt . Println ( \"\u4ea4\u6362\u540e\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) } func swap ( x , y * int ) int { var temp int temp = * x * x = * y * y = temp return temp } * \u6267\u884c\u7ed3\u679c \u4ea4\u6362\u524d 100 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 100 \u4e0d\u5b9a\u53c2\u6570 \u00b6 \u4e0d\u5b9a\u53c2\u6570\u7c7b\u578b \u00b6 \u2026type\u5728Go\u4e2d\u53ea\u80fd\u4f5c\u4e3a\u5f62\u53c2\u51fa\u73b0\uff0c\u800c\u4e14\u53ea\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570 \u51fd\u6570\u7684\u5b9a\u4e49 func myfunc ( args ... int ) { } * \u5f15\u7528\u53c2\u6570 func main () { var a int = 100 var b int = 200 myfuc ( a , b ) } func myfuc ( args ... int ) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) } } * \u6267\u884c\u7ed3\u679c [ 100 200 ] 100 200 \u4e0d\u5b9a\u53c2\u6570\u4f20\u9012 \u00b6 * \u53c2\u6570\u53ef\u4ee5\u7edf\u4e00\u8d4b\u503c ( \u6570\u7ec4\u6216\u8005\u5207\u7247 ) func main () { arr := [] int { 100 , 200 , 300 } myfuc ( arr ... ) myfuc ( arr [: 2 ] ... ) } func myfuc ( args ... int ) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) } } * \u6267\u884c\u7ed3\u679c [ 100 200 300 ] 100 200 300 [ 100 200 ] 100 200 \u4efb\u610f\u7c7b\u578b\u4e0d\u5b9a\u53c2\u6570 \u00b6 \u4f7f\u7528interface\u51fd\u6570\u4f20\u9012\u7c7b\u578b\uff0c\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u6570\u636e * interface\u7c7b\u578b\u662f\u5b89\u5168\u7684 func main () { arr := [] int { 100 , 200 , 300 } myfuc ( 100 , \"abc\" , arr ) } func myfuc ( args ... interface {}) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) fmt . Println ( reflect . TypeOf ( args )) fmt . Println ( \"=======\" ) } } * \u6267\u884c\u7ed3\u679c [ 100 abc [ 100 200 300 ]] 100 int ====== = abc string ====== = [ 100 200 300 ] [] int ====== = \u533f\u540d\u51fd\u6570 \u00b6 * \u5c06\u51fd\u6570\u5f53\u505a\u4e00\u4e2a\u53d8\u91cf\u4f7f\u7528 func main () { getSqrt := func ( a float64 ) float64 { return math . Sqrt ( a ) } fmt . Println ( getSqrt ( 4 )) } * \u6267\u884c\u6548\u679c 2 \u95ed\u5305 \u00b6 \u95ed\u5305\u662f\u6709\u51fd\u6570\u53ca\u5176\u76f8\u5173\u5f15\u7528\u73af\u5883\u7ec4\u5408\u800c\u6210\u7684\u5b9e\u4f53(\u5373\uff1a\u95ed\u5305=\u51fd\u6570+\u5f15\u7528\u73af\u5883) \u201c\u5b98\u65b9\u201d\u7684\u89e3\u91ca\u662f\uff1a\u6240\u8c13\u201c\u95ed\u5305\u201d\uff0c\u6307\u7684\u662f\u4e00\u4e2a\u62e5\u6709\u8bb8\u591a\u53d8\u91cf\u548c\u7ed1\u5b9a\u4e86\u8fd9\u4e9b\u53d8\u91cf\u7684\u73af\u5883\u7684\u8868\u8fbe\u5f0f\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u51fd\u6570\uff09\uff0c\u56e0\u800c\u8fd9\u4e9b\u53d8\u91cf\u4e5f\u662f\u8be5\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u3002 * \u7b2c\u4e00\u4e2a\u4f8b\u5b50 func a () func () int { i := 0 b := func () int { i ++ fmt . Println ( i ) return i } return b } func main () { c := a () c () c () c () //a() //\u4e0d\u4f1a\u8f93\u51fai } * \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 func outer ( x int ) func ( int ) int { return func ( y int ) int { return x + y } } func main () { f := outer ( 10 ) fmt . Println ( f ( 100 )) }","title":"03 \u51fd\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#go","text":"Go\u51fd\u6570\u6982\u5ff5 /* go\u51fd\u6570\u5b9a\u4e49\u4f7f\u7528 func functi_name( [parameter list] ) [return_types] { \u51fd\u6570\u4f53 } \u51fd\u6570function Go\u51fd\u6570\u4e0d\u652f\u6301\u5d4c\u5957\u3001\u91cd\u8f7d\u548c\u9ed8\u8ba4\u83dc\u852c \u4f46\u652f\u6301\u4e00\u4e0b\u7279\u6027\uff1a \u65e0\u9700\u58f0\u660e\u539f\u578b\u3001\u4e0d\u5b9a\u957f\u5ea6\u53d8\u53c2\u3001\u591a\u8fd4\u56de\u503c\u3001\u547d\u540d\u8fd4\u56de\u503c\u53c2\u6570\u3001\u533f\u540d\u51fd\u6570\u3001\u95ed\u5305 \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57func\uff0c\u4e14\u505a\u5927\u62ec\u53f7\u4e0d\u80fd\u53e6\u8d77\u4e00\u884c \u51fd\u6570\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u7c7b\u578b\u4f7f\u7528 defter \u6267\u884c\u65b9\u5f0f\u7c7b\u578b\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u6790\u6784\u51fd\u6570\uff0c\u5728\u51fd\u6570\u4f53\u6267\u884c\u7ed3\u675f\u540e\u6309\u7167\u8c03\u7528\u987a\u5e8f\u7684\u60f3\u53cd\u987a\u5e8f\u9010\u4e2a\u6267\u884c \u5373\u4f7f\u51fd\u6570\u53d1\u751f\u4e25\u91cd\u9519\u8bef\u4e5f\u4f1a\u6267\u884c \u652f\u6301\u533f\u540d\u51fd\u6570\u7684\u8c03\u7528 \u5e38\u7528\u8bed\u8d44\u6e90\u6e05\u7406\uff0c\u6587\u4ef6\u5173\u95ed\uff0c\u89e3\u9501\u4ee5\u53ca\u8bb0\u5f55\u65f6\u95f4\u7b49\u64cd\u4f5c \u901a\u8fc7\u4e0e\u533f\u540d\u51fd\u6570\u914d\u5408\u53ef\u5728return\u4e4b\u540e\u4fee\u6539\u51fd\u6570\u8ba1\u7b97\u7ed3\u679c \u5982\u679c\u51fd\u6570\u4f53\u5185\u67d0\u4e2a\u53d8\u91cf\u4f5c\u4e3adefer\u65f6\u533f\u540d\u51fd\u6570\u7684\u53c2\u6570\uff0c\u5219\u5728\u5b9a\u4e49defer\u65f6\u5373\u5df2\u7ecf\u83b7\u53d6\u4e86\u62f7\u8d1d\uff0c\u5426\u5219\u5219\u662f\u5e94\u7528\u67d0\u4e2a\u53d8\u91cf\u7684\u5730\u5740 Go\u6ca1\u6709\u5f02\u5e38\u673a\u5236\uff0c\u4f46\u662fpanic/recover\u6a21\u5f0f\u6765\u5904\u7406\u9519\u8bef Panic\u53ef\u4ee5\u518d\u4efb\u4f55\u5730\u65b9\u5f15\u53d1\uff0c\u4f46\u662frecover\u53ea\u6709\u5728defer\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u6709\u6548 */ Go\u51fd\u6570\u5b9a\u4e49 func function_name ( [ parameter list ] ) [ return_types ] { \u51fd\u6570\u4f53 } * func\uff1aGo\u7684\u51fd\u6570\u58f0\u660e\u5173\u952e\u5b57\uff0c\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u3002 * function_name\uff1a\u51fd\u6570\u540d\u79f0\uff0c\u51fd\u6570\u540d\u548c\u53c2\u6570\u5217\u8868\u4e00\u8d77\u6784\u6210\u4e86\u51fd\u6570\u7b7e\u540d\u3002 * parameter list\uff1a\u53c2\u6570\u5217\u8868\uff0c\u6307\u5b9a\u7684\u662f\u53c2\u6570\u7c7b\u578b\u3001\u987a\u5e8f\u3001\u53ca\u53c2\u6570\u4e2a\u6570\u3002\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u5373\u51fd\u6570\u53ef\u4ee5\u4e0d\u5305\u542b\u53c2\u6570\u3002\u53c2\u6570\u5c31\u50cf\u4e00\u4e2a\u5360\u4f4d\u7b26\uff0c\u8fd9\u662f\u53c2\u6570\u88ab\u79f0\u4e3a\u5f62\u53c2\uff0c\u5f53\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u5c06\u5177\u4f53\u7684\u503c\u4f20\u9012 \u7ed9\u53c2\u6570\uff0c\u8fd9\u4e2a\u503c\u88ab\u79f0\u4e3a\u5b9e\u9645\u53c2\u6570\u3002 * return_types\uff1a\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u8fd4\u56de\u4e00\u5217\u503c\u3002return_types \u662f\u8be5\u5217\u503c\u7684\u6570\u636e\u7c7b\u578b\u3002\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662fGo\u51fd\u6570\u652f\u6301\u591a\u8fd4\u56de\u503c\u3002\u6709\u4e9b\u529f\u80fd\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b return_types \u4e0d\u662f\u5fc5\u987b\u7684\u3002 * \u51fd\u6570\u4f53\uff1a\u51fd\u6570\u5b9a\u4e49\u7684\u4ee3\u7801\u96c6\u5408\uff0c\u8868\u793a\u51fd\u6570\u5b8c\u6210\u7684\u52a8\u4f5c\u3002","title":"Go\u51fd\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_1","text":"1.\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u51fd\u6570\u53ea\u5728\u672c\u5305\u5185\u53ef\u89c1\uff0c\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u51fd\u6570\u624d\u80fd\u88ab\u5176\u4ed6\u5305\u4f7f\u7528\u3002 2.\u540c\u65f6\u8fd9\u4e2a\u89c4\u5219\u4e5f\u9002\u7528\u4e8e\u53d8\u91cf\u7684\u53ef\u89c1\u6027\uff0c\u5373\u9996\u5b57\u6bcd\u5927\u5199\u7684\u53d8\u91cf\u624d\u662f\u5168\u5c40\u7684 func max ( num1 , num2 int ) int { var result int if num1 > num1 { result = num1 } else { result = num2 } return result } func main () { var a int = 100 var b int = 200 var ret int ret = max ( a , b ) fmt . Println ( ret ) } * \u591a\u8fd4\u56de\u503c func swap ( x , y string ) ( string , string ) { return y , x } func main () { //a,b := swap(\"hello\",\"world\") a , _ := swap ( \"hello\" , \"world\" ) //\u53ea\u5173\u6ce8\u4e00\u4e2a\u503c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf\u4ee3\u66ff fmt . Println ( a ) }","title":"\u51fd\u6570\u8c03\u7528"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_2","text":"\u503c\u4f20\u9012\uff1a\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u590d\u5236\u4e00\u4efd\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u8fd9\u6837\u5728\u51fd\u6570\u4e2d\u5982\u679c\u5bf9\u53c2\u6570\u8fdb\u884c\u4fee\u6539\uff0c\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 \u5f15\u7528\u4f20\u9012\uff1a\u662f\u6307\u5728\u8c03\u7528\u51fd\u6570\u65f6\u5c06\u5b9e\u9645\u53c2\u6570\u7684\u5730\u5740\u4f20\u9012\u5230\u51fd\u6570\u4e2d\uff0c\u90a3\u4e48\u5728\u51fd\u6570\u4e2d\u5bf9\u53c2\u6570\u6240\u8fdb\u884c\u7684\u4fee\u6539\uff0c\u5c06\u5f71\u54cd\u5230\u5b9e\u9645\u53c2\u6570\u3002 * \u503c\u4f20\u9012 func main () { var a int = 100 var b int = 200 fmt . Println ( \"\u4ea4\u6362\u524d\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) swap ( a , b ) fmt . Println ( \"\u4ea4\u6362\u540e\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) } func swap ( x , y int ) int { var temp int temp = x x = y y = temp return temp } * \u6267\u884c\u7ed3\u679c \u4ea4\u6362\u524d 100 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 100 \u4ea4\u6362\u540e 200 * \u5f15\u7528\u4f20\u9012 func main () { var a int = 100 var b int = 200 fmt . Println ( \"\u4ea4\u6362\u524d\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) /* \u8c03\u7528 swap() \u51fd\u6570 &a \u6307\u5411 a \u6307\u9488\uff0ca \u53d8\u91cf\u7684\u5730\u5740 &b \u6307\u5411 b \u6307\u9488\uff0cb \u53d8\u91cf\u7684\u5730\u5740 */ swap ( & a , & b ) fmt . Println ( \"\u4ea4\u6362\u540e\" , a ) fmt . Println ( \"\u4ea4\u6362\u540e\" , b ) } func swap ( x , y * int ) int { var temp int temp = * x * x = * y * y = temp return temp } * \u6267\u884c\u7ed3\u679c \u4ea4\u6362\u524d 100 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 200 \u4ea4\u6362\u540e 100","title":"\u51fd\u6570\u53c2\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_3","text":"","title":"\u4e0d\u5b9a\u53c2\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_4","text":"\u2026type\u5728Go\u4e2d\u53ea\u80fd\u4f5c\u4e3a\u5f62\u53c2\u51fa\u73b0\uff0c\u800c\u4e14\u53ea\u80fd\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570 \u51fd\u6570\u7684\u5b9a\u4e49 func myfunc ( args ... int ) { } * \u5f15\u7528\u53c2\u6570 func main () { var a int = 100 var b int = 200 myfuc ( a , b ) } func myfuc ( args ... int ) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) } } * \u6267\u884c\u7ed3\u679c [ 100 200 ] 100 200","title":"\u4e0d\u5b9a\u53c2\u6570\u7c7b\u578b"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_5","text":"* \u53c2\u6570\u53ef\u4ee5\u7edf\u4e00\u8d4b\u503c ( \u6570\u7ec4\u6216\u8005\u5207\u7247 ) func main () { arr := [] int { 100 , 200 , 300 } myfuc ( arr ... ) myfuc ( arr [: 2 ] ... ) } func myfuc ( args ... int ) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) } } * \u6267\u884c\u7ed3\u679c [ 100 200 300 ] 100 200 300 [ 100 200 ] 100 200","title":"\u4e0d\u5b9a\u53c2\u6570\u4f20\u9012"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_6","text":"\u4f7f\u7528interface\u51fd\u6570\u4f20\u9012\u7c7b\u578b\uff0c\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u6570\u636e * interface\u7c7b\u578b\u662f\u5b89\u5168\u7684 func main () { arr := [] int { 100 , 200 , 300 } myfuc ( 100 , \"abc\" , arr ) } func myfuc ( args ... interface {}) { fmt . Println ( args ) for _ , args := range args { fmt . Println ( args ) fmt . Println ( reflect . TypeOf ( args )) fmt . Println ( \"=======\" ) } } * \u6267\u884c\u7ed3\u679c [ 100 abc [ 100 200 300 ]] 100 int ====== = abc string ====== = [ 100 200 300 ] [] int ====== =","title":"\u4efb\u610f\u7c7b\u578b\u4e0d\u5b9a\u53c2\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_7","text":"* \u5c06\u51fd\u6570\u5f53\u505a\u4e00\u4e2a\u53d8\u91cf\u4f7f\u7528 func main () { getSqrt := func ( a float64 ) float64 { return math . Sqrt ( a ) } fmt . Println ( getSqrt ( 4 )) } * \u6267\u884c\u6548\u679c 2","title":"\u533f\u540d\u51fd\u6570"},{"location":"DevOps/17%20Golang/03%20Gorang%20function/#_8","text":"\u95ed\u5305\u662f\u6709\u51fd\u6570\u53ca\u5176\u76f8\u5173\u5f15\u7528\u73af\u5883\u7ec4\u5408\u800c\u6210\u7684\u5b9e\u4f53(\u5373\uff1a\u95ed\u5305=\u51fd\u6570+\u5f15\u7528\u73af\u5883) \u201c\u5b98\u65b9\u201d\u7684\u89e3\u91ca\u662f\uff1a\u6240\u8c13\u201c\u95ed\u5305\u201d\uff0c\u6307\u7684\u662f\u4e00\u4e2a\u62e5\u6709\u8bb8\u591a\u53d8\u91cf\u548c\u7ed1\u5b9a\u4e86\u8fd9\u4e9b\u53d8\u91cf\u7684\u73af\u5883\u7684\u8868\u8fbe\u5f0f\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u51fd\u6570\uff09\uff0c\u56e0\u800c\u8fd9\u4e9b\u53d8\u91cf\u4e5f\u662f\u8be5\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\u3002 * \u7b2c\u4e00\u4e2a\u4f8b\u5b50 func a () func () int { i := 0 b := func () int { i ++ fmt . Println ( i ) return i } return b } func main () { c := a () c () c () c () //a() //\u4e0d\u4f1a\u8f93\u51fai } * \u7b2c\u4e8c\u4e2a\u4f8b\u5b50 func outer ( x int ) func ( int ) int { return func ( y int ) int { return x + y } } func main () { f := outer ( 10 ) fmt . Println ( f ( 100 )) }","title":"\u95ed\u5305"},{"location":"DevOps/99%20Other/Invalid%20Linux%20Ctrl%20C/","text":"Linux Ctrl C\u65e0\u6548 \u00b6 \u539f\u56e0\uff1arvm \u7248\u672cbug \u89e3\u51b3\u65b9\u6cd5\uff1a \u547d\u4ee4\u67e5\u770b\uff1a \u6b63\u5e38\uff1a [ root@server002 ~ ] # trap trap -- '' SIGTSTP trap -- '' SIGTTIN trap -- '' SIGTTOU \u5f02\u5e38\uff1a [ root@server002 ~ ] # trap trap -- '' SIGTSTP trap -- '' SIGTTIN trap -- '' SIGTTOU trap -- '' SIGINT trap -- '' SIGQUIT \u73b0\u8c61\uff1a\u7ec8\u7aefCtrl + C\u5b8c\u5168\u5931\u6548\uff0c\u5f53\u6267\u884ctrap \u4fe1\u53f7\u547d\u4ee4\u65f6\u591a\u5904\u4e24\u4e2aSIGINT\u548cSIGQUIT\u4e24\u9879 \u5347\u7ea7rvm \u7248\u672c\uff1arvm get stable\uff08 1 .29.4 \u7248\u672c\u4ee5\u4e0a\u90fd\u53ef\u4ee5\u89e3\u51b3\uff09 \u5378\u8f7drvm\u5de5\u5177\uff1agem uninstall rvm","title":"Linux Ctrl C\u65e0\u6548"},{"location":"DevOps/99%20Other/Invalid%20Linux%20Ctrl%20C/#linux-ctrl-c","text":"\u539f\u56e0\uff1arvm \u7248\u672cbug \u89e3\u51b3\u65b9\u6cd5\uff1a \u547d\u4ee4\u67e5\u770b\uff1a \u6b63\u5e38\uff1a [ root@server002 ~ ] # trap trap -- '' SIGTSTP trap -- '' SIGTTIN trap -- '' SIGTTOU \u5f02\u5e38\uff1a [ root@server002 ~ ] # trap trap -- '' SIGTSTP trap -- '' SIGTTIN trap -- '' SIGTTOU trap -- '' SIGINT trap -- '' SIGQUIT \u73b0\u8c61\uff1a\u7ec8\u7aefCtrl + C\u5b8c\u5168\u5931\u6548\uff0c\u5f53\u6267\u884ctrap \u4fe1\u53f7\u547d\u4ee4\u65f6\u591a\u5904\u4e24\u4e2aSIGINT\u548cSIGQUIT\u4e24\u9879 \u5347\u7ea7rvm \u7248\u672c\uff1arvm get stable\uff08 1 .29.4 \u7248\u672c\u4ee5\u4e0a\u90fd\u53ef\u4ee5\u89e3\u51b3\uff09 \u5378\u8f7drvm\u5de5\u5177\uff1agem uninstall rvm","title":"Linux Ctrl C\u65e0\u6548"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/","text":"1. \u3042\u884c\uff08\u5143\u97f3\u884c\uff09 \u00b6 \u5e73\u5047\u540d \u3042 \u3044 \u3046 \u3048 \u304a \u7247\u5047\u540d \u30a2 \u30a4 \u30a6 \u30a8 \u30aa 1.1 \u53d1\u97f3\u8981\u9886\u4e0e\u6280\u5de7 \u00b6 \u65e5\u8bed\u7684\u7279\u70b9\uff1a\u8f7b\u67d4/\u7b80\u77ed/\u53e3\u578b\u53d8\u5316\u5c0f 1.2 \u53d1\u97f3\u8981\u9886\u4e0e\u5047\u540d\u4e66\u5199 \u00b6 a \u3042\u3000\u30a2\uff08\u6765\u6e90\u6c49\u5b57\u7684\u5b89\uff09\u3000 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u81ea\u7136\u5f20\u5f00\uff0c\u820c\u5934\u81ea\u7136\u5e73\u653e \u6ce8\u610f\uff1a\u4e0e\u6c49\u8bed\u201c\u554a\u201d\u76f8\u4f3c\uff0c\u4f46\u53e3\u578b\u8981\u5c0f \u53d1\u97f3\u6280\u5de7\uff1a\u5b89\u5168\u7b2c\u4e00\u554a i \u3044 \u30a4 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u5fae\u5f00\uff0c\u820c\u5c16\u4f4d\u4e8e\u4e0b\u9f7f\u5185\u4fa7 \u6ce8\u610f\uff1a\u5634\u89d2\u62c9\u5f00\u5e45\u5ea6\u6bd4\u6c49\u8bed\u7684\u201c\u4e00\u201d\u5c0f \u53d1\u97f3\u6280\u5de7\uff1a\u4ee5\u4e3a\u4f60\u4f9d\u7136\u7231\u6211 u \u3046\u3000\u30a6 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u81ea\u7136\u653e\u677e\uff0c\u5fae\u542f \u6ce8\u610f\uff1a\u4e0d\u60f3\u6c49\u8bed\u7684\u201c\u6c61\u201d\u90a3\u6837\u5634\u5507\u5411\u524d\u7a81 \u53d1\u97f3\u6280\u5de7\uff1a\u5b87\u5b99\u65e0\u6781\u9650 e \u3048\u3000\u30a8 \u53d1\u97f3\u8981\u9886\uff1a\u5634\u89d2\u5411\u4e24\u4fa7\u5fae\u62c9 \u6ce8\u610f\uff1a\u533a\u522b\u4e8e\u6c49\u8bed\u7684\u201c\u6328ei\u201d\uff0c\u53d1\u97f3\u8fc7\u7a0b\u4e2d\u53e3\u578b\u56fa\u5b9a\u4e0d\u52a8 \u53d1\u97f3\u6280\u5de7\uff1a\u6328\uff1f\uff01\u5143\u65e6\u4e5f\u5de5\u4f5c\uff1f o \u304a\u3000\u30aa \u53d1\u97f3\u8981\u9886\uff1a \u6ce8\u610f\uff1a \u53d1\u97f3\u6280\u5de7\uff1a\u6211\u679c\u7136\u662f\u5929\u624d 1.3 \u5bd2\u6684\u8bed \u00b6 \u3042\u3000\u3044 \u3057\u3066 \u308b \uff08\u6211\u7231\u4f60\uff09 a i shite ru 1.4 \u5355\u8bcd\u7ec3\u4e60 \u00b6 \u5047\u540d \u7f57\u9a6c\u5b57 \u7ffb\u8bd1 \u3044\u3048 i e \u5bb6 \u3046\u3048 u e \u4e0a \u3042\u3044 a i \u7231\u60c5 \u3044\u3046 i u \u8bf4 \u3042\u304a\u3044 a o i \u84dd\u8272 \u3046\u304a u o \u9c7c 2. \u3084\u3000ya \u884c \u00b6 \u5e73\u5047\u540d \u3084 \u3086 \u3088 \u7247\u5047\u540d \u30e4 \u30e6 \uff96 2.1 \u53d1\u97f3\u8981\u9886\u4e0e\u5047\u540d\u4e66\u5199 \u00b6 ya \u3084\u3000\u30ab\uff1a\u9e2d\u8089\u4e5f\u633a\u597d yu \u3086\u3000\u30e6\uff1a\u4e2d\u56fd\u4eba\u90fd\u5f88\u52c7\u6562 yo \u3088\u3000\u30e8\uff1a\u4e0a\u5c71\u53bb\u6349\u5996 | 2.2 \u5bd2\u6684\u8bed \u00b6 \u304a\u3000\u306f\u3000\u3088\u3000\u3046 \uff08\u65e9\u4e0a\u597d\uff09 \u6216\u8005 \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059 o ha yo - 2.3 \u7ec3\u4e60-\u542c\u529b \u00b6 \u3042\u3000\u3044\u3000\u305f\u3000\u3044\u3000\u3067\u3000\u3059 \uff08\u60f3\u89c1\u4f60\uff09 a i ta i de su \u3084\u3063 \u305f\u3084\u3063 \u305f\u3084 \u3063\u305f\u3000\uff08\u6210\u529f\u4e86/\u505a\u5230\u4e86\uff09 ya tta ya tta ya tta 2.4 \u7ec3\u4e60-\u53d1\u97f3 \u00b6 \u3084 \u3048 \u304a \u3084 \u3044\u3000 \u3042 \u304a \u3086 \u3042 \u3048\u3000 \u3088 \u3044 \u3086 \u304a \u3084 \u304a \u3044 ya e o ya i a o yu a e yo i yu o ya o i \u3088 \u3048 \u3084 \u3086 \u3088 \u3000 \u3044 \u3042 \u3044 \u3046 \u304a \u3000\u3048 \u3084 \u3088 \u3044 \u3084 \u3046 \u3088 yo e ya yu yo i a i u o e ya yo i ya u yo","title":"01 \u53d1\u97f3\u57fa\u7840"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#1","text":"\u5e73\u5047\u540d \u3042 \u3044 \u3046 \u3048 \u304a \u7247\u5047\u540d \u30a2 \u30a4 \u30a6 \u30a8 \u30aa","title":"1. \u3042\u884c\uff08\u5143\u97f3\u884c\uff09"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#11","text":"\u65e5\u8bed\u7684\u7279\u70b9\uff1a\u8f7b\u67d4/\u7b80\u77ed/\u53e3\u578b\u53d8\u5316\u5c0f","title":"1.1 \u53d1\u97f3\u8981\u9886\u4e0e\u6280\u5de7"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#12","text":"a \u3042\u3000\u30a2\uff08\u6765\u6e90\u6c49\u5b57\u7684\u5b89\uff09\u3000 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u81ea\u7136\u5f20\u5f00\uff0c\u820c\u5934\u81ea\u7136\u5e73\u653e \u6ce8\u610f\uff1a\u4e0e\u6c49\u8bed\u201c\u554a\u201d\u76f8\u4f3c\uff0c\u4f46\u53e3\u578b\u8981\u5c0f \u53d1\u97f3\u6280\u5de7\uff1a\u5b89\u5168\u7b2c\u4e00\u554a i \u3044 \u30a4 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u5fae\u5f00\uff0c\u820c\u5c16\u4f4d\u4e8e\u4e0b\u9f7f\u5185\u4fa7 \u6ce8\u610f\uff1a\u5634\u89d2\u62c9\u5f00\u5e45\u5ea6\u6bd4\u6c49\u8bed\u7684\u201c\u4e00\u201d\u5c0f \u53d1\u97f3\u6280\u5de7\uff1a\u4ee5\u4e3a\u4f60\u4f9d\u7136\u7231\u6211 u \u3046\u3000\u30a6 \u53d1\u97f3\u8981\u9886\uff1a\u53cc\u5507\u81ea\u7136\u653e\u677e\uff0c\u5fae\u542f \u6ce8\u610f\uff1a\u4e0d\u60f3\u6c49\u8bed\u7684\u201c\u6c61\u201d\u90a3\u6837\u5634\u5507\u5411\u524d\u7a81 \u53d1\u97f3\u6280\u5de7\uff1a\u5b87\u5b99\u65e0\u6781\u9650 e \u3048\u3000\u30a8 \u53d1\u97f3\u8981\u9886\uff1a\u5634\u89d2\u5411\u4e24\u4fa7\u5fae\u62c9 \u6ce8\u610f\uff1a\u533a\u522b\u4e8e\u6c49\u8bed\u7684\u201c\u6328ei\u201d\uff0c\u53d1\u97f3\u8fc7\u7a0b\u4e2d\u53e3\u578b\u56fa\u5b9a\u4e0d\u52a8 \u53d1\u97f3\u6280\u5de7\uff1a\u6328\uff1f\uff01\u5143\u65e6\u4e5f\u5de5\u4f5c\uff1f o \u304a\u3000\u30aa \u53d1\u97f3\u8981\u9886\uff1a \u6ce8\u610f\uff1a \u53d1\u97f3\u6280\u5de7\uff1a\u6211\u679c\u7136\u662f\u5929\u624d","title":"1.2 \u53d1\u97f3\u8981\u9886\u4e0e\u5047\u540d\u4e66\u5199"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#13","text":"\u3042\u3000\u3044 \u3057\u3066 \u308b \uff08\u6211\u7231\u4f60\uff09 a i shite ru","title":"1.3 \u5bd2\u6684\u8bed"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#14","text":"\u5047\u540d \u7f57\u9a6c\u5b57 \u7ffb\u8bd1 \u3044\u3048 i e \u5bb6 \u3046\u3048 u e \u4e0a \u3042\u3044 a i \u7231\u60c5 \u3044\u3046 i u \u8bf4 \u3042\u304a\u3044 a o i \u84dd\u8272 \u3046\u304a u o \u9c7c","title":"1.4 \u5355\u8bcd\u7ec3\u4e60"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#2-ya","text":"\u5e73\u5047\u540d \u3084 \u3086 \u3088 \u7247\u5047\u540d \u30e4 \u30e6 \uff96","title":"2. \u3084\u3000ya \u884c"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#21","text":"ya \u3084\u3000\u30ab\uff1a\u9e2d\u8089\u4e5f\u633a\u597d yu \u3086\u3000\u30e6\uff1a\u4e2d\u56fd\u4eba\u90fd\u5f88\u52c7\u6562 yo \u3088\u3000\u30e8\uff1a\u4e0a\u5c71\u53bb\u6349\u5996 |","title":"2.1 \u53d1\u97f3\u8981\u9886\u4e0e\u5047\u540d\u4e66\u5199"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#22","text":"\u304a\u3000\u306f\u3000\u3088\u3000\u3046 \uff08\u65e9\u4e0a\u597d\uff09 \u6216\u8005 \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059 o ha yo -","title":"2.2 \u5bd2\u6684\u8bed"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#23-","text":"\u3042\u3000\u3044\u3000\u305f\u3000\u3044\u3000\u3067\u3000\u3059 \uff08\u60f3\u89c1\u4f60\uff09 a i ta i de su \u3084\u3063 \u305f\u3084\u3063 \u305f\u3084 \u3063\u305f\u3000\uff08\u6210\u529f\u4e86/\u505a\u5230\u4e86\uff09 ya tta ya tta ya tta","title":"2.3 \u7ec3\u4e60-\u542c\u529b"},{"location":"Japanese/01%20Fundamentals%20of%20pronunciation/#24-","text":"\u3084 \u3048 \u304a \u3084 \u3044\u3000 \u3042 \u304a \u3086 \u3042 \u3048\u3000 \u3088 \u3044 \u3086 \u304a \u3084 \u304a \u3044 ya e o ya i a o yu a e yo i yu o ya o i \u3088 \u3048 \u3084 \u3086 \u3088 \u3000 \u3044 \u3042 \u3044 \u3046 \u304a \u3000\u3048 \u3084 \u3088 \u3044 \u3084 \u3046 \u3088 yo e ya yu yo i a i u o e ya yo i ya u yo","title":"2.4 \u7ec3\u4e60-\u53d1\u97f3"},{"location":"Japanese/02%20Let%27s%20go%20and%20buy%20some%20cakes/","text":"","title":"02 \u6211\u4eec\u53bb\u4e70\u86cb\u7cd5\u5427"},{"location":"Japanese/03%20like%20like%20like/","text":"","title":"03 \u559c\u6b22\u559c\u6b22\u597d\u559c\u6b22"},{"location":"Japanese/04%20buy%20buy%20buy/","text":"","title":"04 \u4e70\u4e70\u4e70"},{"location":"Japanese/05%20family/","text":"","title":"05 \u5bb6\u4eba"},{"location":"Japanese/06%20what%20time%20is%20the%20Shinkansen/","text":"","title":"06 \u51e0\u70b9\u7684\u65b0\u5e72\u7ebf"},{"location":"Japanese/07%20want%20to%20want%20good%20want/","text":"","title":"07 \u60f3\u8981\u60f3\u8981\u597d\u60f3\u8981"},{"location":"Japanese/08%20want%20to%20eat/","text":"","title":"08 \u60f3\u5403\u60f3\u5403\u597d\u60f3\u5403"},{"location":"Japanese/09%20my%20dream/","text":"","title":"09 \u6211\u7684\u68a6\u60f3"},{"location":"Japanese/10%20It%27s%2010%20days%2C%20five%20nights%20and%20nine%20nights/","text":"","title":"10 \u671d\u4e94\u665a\u4e5d\u5f00\u59cb\u5566"},{"location":"Japanese/11%20my/","text":"","title":"11 \u6211"},{"location":"%E6%9D%82%E9%A1%B9/Goaccess/","text":"goaccess \u00b6 sed -n '/2019-12-18T07:30:00+08:00/,/2019-12-18T08:30:00+08:00/p' nginx.access.main.20191218.log >>nginx01.log goaccess -f { nginx3.log,nginx1.log,nginx2.log,nginx4.log } -a -d -p /usr/local/etc/goaccess.conf -o nginx0730-0830.html & goaccess -f nginx3.log -a -d -p /root/goaccess.conf -o nginx.html &","title":"goaccess"},{"location":"%E6%9D%82%E9%A1%B9/Goaccess/#goaccess","text":"sed -n '/2019-12-18T07:30:00+08:00/,/2019-12-18T08:30:00+08:00/p' nginx.access.main.20191218.log >>nginx01.log goaccess -f { nginx3.log,nginx1.log,nginx2.log,nginx4.log } -a -d -p /usr/local/etc/goaccess.conf -o nginx0730-0830.html & goaccess -f nginx3.log -a -d -p /root/goaccess.conf -o nginx.html &","title":"goaccess"},{"location":"%E6%9D%82%E9%A1%B9/Mac%E7%AC%AC%E4%B8%89%E6%96%B9%E7%A0%B4%E8%A7%A3/","text":"Mac \u7b2c\u4e09\u65b9\u5e94\u7528\u7834\u89e3 \u00b6 sudo spctl --master-disable # 10.15\u4e4b\u540e\u9700\u8981\u7ed5\u8fc7\u82f9\u679c\u7684\u516c\u8ba4 sudo xattr -r -d com.apple.quarantine /Applications/xxx.app # Mac \u7b2c\u4e09\u65b9\u5e94\u7528\u7834\u89e3 \u200b ``` sudo spctl --master-disable # 10.15\u4e4b\u540e\u9700\u8981\u7ed5\u8fc7\u82f9\u679c\u7684\u516c\u8ba4 sudo xattr -r -d com.apple.quarantine /Applications/xxx.app \u200b ``` \u200b ``` \u4e0b\u8f7d\u5730\u5740\uff1a https://mac.orsoon.com 17710122442 Carsonfan@123 \u200b ``` xxxxxxxxxx \u4e0b\u8f7d\u5730\u5740\uff1ahttps://mac.orsoon.com 17710122442 Carsonfan@12","title":"Mac \u7b2c\u4e09\u65b9\u5e94\u7528\u7834\u89e3"},{"location":"%E6%9D%82%E9%A1%B9/Mac%E7%AC%AC%E4%B8%89%E6%96%B9%E7%A0%B4%E8%A7%A3/#mac","text":"sudo spctl --master-disable # 10.15\u4e4b\u540e\u9700\u8981\u7ed5\u8fc7\u82f9\u679c\u7684\u516c\u8ba4 sudo xattr -r -d com.apple.quarantine /Applications/xxx.app # Mac \u7b2c\u4e09\u65b9\u5e94\u7528\u7834\u89e3 \u200b ``` sudo spctl --master-disable # 10.15\u4e4b\u540e\u9700\u8981\u7ed5\u8fc7\u82f9\u679c\u7684\u516c\u8ba4 sudo xattr -r -d com.apple.quarantine /Applications/xxx.app \u200b ``` \u200b ``` \u4e0b\u8f7d\u5730\u5740\uff1a https://mac.orsoon.com 17710122442 Carsonfan@123 \u200b ``` xxxxxxxxxx \u4e0b\u8f7d\u5730\u5740\uff1ahttps://mac.orsoon.com 17710122442 Carsonfan@12","title":"Mac \u7b2c\u4e09\u65b9\u5e94\u7528\u7834\u89e3"},{"location":"%E6%9D%82%E9%A1%B9/Tmux%E4%BD%BF%E7%94%A8/","text":"Tmux\u4f7f\u7528 \u00b6 [toc] \u5b89\u88c5\uff1a \u00b6 CentOs: yum -y install tmux MaxOs: brew install tmux \u7a97\u683c\u64cd\u4f5c\uff1a % \u5de6\u53f3\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c \" \u4e0a\u4e0b\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c x \u5173\u95ed\u5f53\u524d\u7a97\u683c { \u5f53\u524d\u7a97\u683c\u524d\u79fb } \u5f53\u524d\u7a97\u683c\u540e\u79fb ; \u9009\u62e9\u4e0a\u6b21\u4f7f\u7528\u7684\u7a97\u683c o \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u683c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u6765\u9009\u62e9 space \u5207\u6362\u7a97\u683c\u5e03\u5c40\uff0ctmux \u5185\u7f6e\u4e86\u4e94\u79cd\u7a97\u683c\u5e03\u5c40\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u23251 \u81f3 \u23255\u6765\u5207\u6362 z \u6700\u5927\u5316\u5f53\u524d\u7a97\u683c\uff0c\u518d\u6b21\u6267\u884c\u53ef\u6062\u590d\u539f\u6765\u5927\u5c0f q \u663e\u793a\u6240\u6709\u7a97\u683c\u7684\u5e8f\u53f7\uff0c\u5728\u5e8f\u53f7\u51fa\u73b0\u671f\u95f4\u6309\u4e0b\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u5373\u53ef\u8df3\u8f6c\u81f3\u5bf9\u5e94\u7684\u7a97\u683c \u7a97\u53e3\u64cd\u4f5c \u00b6 tmux \u9664\u4e86\u7a97\u683c\u4ee5\u5916\uff0c\u8fd8\u6709\u7a97\u53e3\uff08window\uff09 \u7684\u6982\u5ff5\u3002\u4f9d\u6b21\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\u6765\u719f\u6089 tmux \u7684\u7a97\u53e3\u64cd\u4f5c\uff1a * c \u65b0\u5efa\u7a97\u53e3\uff0c\u6b64\u65f6\u5f53\u524d\u7a97\u53e3\u4f1a\u5207\u6362\u81f3\u65b0\u7a97\u53e3\uff0c\u4e0d\u5f71\u54cd\u539f\u6709\u7a97\u53e3\u7684\u72b6\u6001 * p \u5207\u6362\u81f3\u4e0a\u4e00\u7a97\u53e3 * n \u5207\u6362\u81f3\u4e0b\u4e00\u7a97\u53e3 * w \u7a97\u53e3\u5217\u8868\u9009\u62e9\uff0c\u6ce8\u610f macOS \u4e0b\u4f7f\u7528 \u2303p \u548c \u2303n \u8fdb\u884c\u4e0a\u4e0b\u9009\u62e9 * & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 * , \u91cd\u547d\u540d\u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\uff0c\u91cd\u547d\u540d\u540e\u80fd\u5728 tmux \u72b6\u6001\u680f\u66f4\u5feb\u901f\u7684\u8bc6\u522b\u7a97\u53e3 id * 0 \u5207\u6362\u81f3 0 \u53f7\u7a97\u53e3\uff0c\u4f7f\u7528\u5176\u4ed6\u6570\u5b57 id \u5207\u6362\u81f3\u5bf9\u5e94\u7a97\u53e3 * f \u6839\u636e\u7a97\u53e3\u540d\u641c\u7d22\u9009\u62e9\u7a97\u53e3\uff0c\u53ef\u6a21\u7cca\u5339\u914d \u4f1a\u8bdd\u64cd\u4f5c \u00b6 \u5982\u679c\u8fd0\u884c\u4e86\u591a\u6b21 tmux \u547d\u4ee4\u5219\u4f1a\u5f00\u542f\u591a\u4e2a tmux \u4f1a\u8bdd\uff08session\uff09\u3002\u5728 tmux \u4f1a\u8bdd\u4e2d\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u914d\u5408\u4ee5\u4e0b\u5feb\u6377\u952e\u53ef\u64cd\u4f5c\u4f1a\u8bdd\uff1a * $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd * s \u9009\u62e9\u4f1a\u8bdd\u5217\u8868 * d detach \u5f53\u524d\u4f1a\u8bdd\uff0c\u8fd0\u884c\u540e\u5c06\u4f1a\u9000\u51fa tmux \u8fdb\u7a0b\uff0c\u8fd4\u56de\u81f3 shell \u4e3b\u8fdb\u7a0b * \u5728 shell\u4e3b\u8fdb\u7a0b\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64cd\u4f5c tmux \u4f1a\u8bdd\uff1a * tmux new -s foo # \u65b0\u5efa\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd * tmux ls # \u5217\u51fa\u6240\u6709 tmux \u4f1a\u8bdd * tmux a # \u6062\u590d\u81f3\u4e0a\u4e00\u6b21\u7684\u4f1a\u8bdd * tmux a -t foo # \u6062\u590d\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd\uff0c\u4f1a\u8bdd\u9ed8\u8ba4\u540d\u79f0\u4e3a\u6570\u5b57 * tmux kill-session -t foo # \u5220\u9664\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd * tmux kill-server # \u5220\u9664\u6240\u6709\u7684\u4f1a\u8bdd * \u9664\u4ee5\u4e0a\u63d0\u5230\u7684\u5feb\u6377\u952e\u4ee5\u5916\uff0ctmux \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5feb\u6377\u952e\u548c\u547d\u4ee4\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u52a0 ? \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u5feb\u6377\u952e\u5217\u8868\uff0c\u8be5\u5217\u8868\u89c6\u56fe\u4e3a tmux copy \u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u4e0b\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\uff08\u65e0\u9700\u52a0 \u2303b \u524d\u7f00\uff09\uff1a * \u2303v \u4e0b\u4e00\u9875 * Meta v \u4e0a\u4e00\u9875 \uff08tmux \u5feb\u6377\u952e\u4e3a Emacs \u98ce\u683c\uff0c\u8fd9\u91cc\u7684 Meta \u952e\u53ef\u7528 Esc \u6a21\u62df\uff09 * \u2303s \u5411\u524d\u641c\u7d22 * q \u9000\u51fa copy \u6a21\u5f0f tmux rename-session -t <\u4f1a\u8bdd\u540d> tmux choose-session -t <\u4f1a\u8bdd\u540d> tmux kill-session -t <\u4f1a\u8bdd\u540d> \u67e5\u770b\u4f1a\u8bdd\u5217\u8868 tmux ls \u521b\u5efa\u4e00\u4e2a\u65b0\u4f1a\u8bdd tmux new -s [ session_name ] \u540d\u79f0 \u8fde\u63a5\u4f1a\u8bdd tmux a ( attach ) -t [ session_name ] \u540d\u79f0 \u9000\u51fa\u4f1a\u8bdd ctrl+b d \u4f1a\u8bdd\u73af\u5883\u67e5\u770b\u4f1a\u8bdd\u5217\u8868 ctrl+b s \u521b\u5efa\u7a97\u53e3 ctrl+b c \u5173\u95ed\u7a97\u53e3\uff1a ctrl+b & \u5782\u76f4\u5206\u5c4f\uff1a ctrl+b % \u6c34\u5e73\u5206\u5c4f\uff1a ctrl+b \" \u5173\u95edpane\uff1a ctrl+b x \u5e2e\u52a9\uff1a ctrl+b ? \u9009\u62e9\u5173\u95ed\u4f1a\u8bdd\uff0c\u8be5\u547d\u4ee4\u4f1a\u5217\u51fa\u5f53\u524d\u4f1a\u8bdd\u7684\u767b\u5f55\u5217\u8868 ctrl-b + shift-d \u5207\u6362\u7a97\u53e3: ctrl+b p (previous\u7684\u9996\u5b57\u6bcd) \u5207\u6362\u5230\u4e0a\u4e00\u4e2awindow\u3002 ctrl+b n (next\u7684\u9996\u5b57\u6bcd) \u5207\u6362\u5230\u4e0b\u4e00\u4e2awindow\u3002 ctrl+b 0 \u5207\u6362\u52300\u53f7window\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u53ef\u6362\u6210\u4efb\u610f\u7a97\u53e3\u5e8f\u53f7 ctrl+b w (windows\u7684\u9996\u5b57\u6bcd) \u5217\u51fa\u5f53\u524dsession\u6240\u6709window\uff0c\u901a\u8fc7\u4e0a\u3001\u4e0b\u952e\u5207\u6362\u7a97\u53e3 ctrl+b l (\u5b57\u6bcdL\u7684\u5c0f\u5199)\u76f8\u90bb\u7684window\u5207\u6362 \u5207\u6362pane\uff1a ctrl+b o \u4f9d\u6b21\u5207\u6362\u5f53\u524d\u7a97\u53e3\u4e0b\u7684\u5404\u4e2apane\u3002 ctrl+b Up|Down|Left|Right \u6839\u636e\u6309\u7bad\u65b9\u5411\u9009\u62e9\u5207\u6362\u5230\u67d0\u4e2apane\u3002 ctrl+b Space (\u7a7a\u683c\u952e) \u5bf9\u5f53\u524d\u7a97\u53e3\u4e0b\u7684\u6240\u6709pane\u91cd\u65b0\u6392\u5217\u5e03\u5c40\uff0c\u6bcf\u6309\u4e00\u6b21\uff0c\u6362\u4e00\u79cd\u6837\u5f0f\u3002 ctrl+b z \u6700\u5927\u5316\u5f53\u524dpane\u3002\u518d\u6309\u4e00\u6b21\u540e\u6062\u590d\u3002","title":"Tmux\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/Tmux%E4%BD%BF%E7%94%A8/#tmux","text":"[toc]","title":"Tmux\u4f7f\u7528"},{"location":"%E6%9D%82%E9%A1%B9/Tmux%E4%BD%BF%E7%94%A8/#_1","text":"CentOs: yum -y install tmux MaxOs: brew install tmux \u7a97\u683c\u64cd\u4f5c\uff1a % \u5de6\u53f3\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c \" \u4e0a\u4e0b\u5e73\u5206\u51fa\u4e24\u4e2a\u7a97\u683c x \u5173\u95ed\u5f53\u524d\u7a97\u683c { \u5f53\u524d\u7a97\u683c\u524d\u79fb } \u5f53\u524d\u7a97\u683c\u540e\u79fb ; \u9009\u62e9\u4e0a\u6b21\u4f7f\u7528\u7684\u7a97\u683c o \u9009\u62e9\u4e0b\u4e00\u4e2a\u7a97\u683c\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u952e\u6765\u9009\u62e9 space \u5207\u6362\u7a97\u683c\u5e03\u5c40\uff0ctmux \u5185\u7f6e\u4e86\u4e94\u79cd\u7a97\u683c\u5e03\u5c40\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 \u23251 \u81f3 \u23255\u6765\u5207\u6362 z \u6700\u5927\u5316\u5f53\u524d\u7a97\u683c\uff0c\u518d\u6b21\u6267\u884c\u53ef\u6062\u590d\u539f\u6765\u5927\u5c0f q \u663e\u793a\u6240\u6709\u7a97\u683c\u7684\u5e8f\u53f7\uff0c\u5728\u5e8f\u53f7\u51fa\u73b0\u671f\u95f4\u6309\u4e0b\u5bf9\u5e94\u7684\u6570\u5b57\uff0c\u5373\u53ef\u8df3\u8f6c\u81f3\u5bf9\u5e94\u7684\u7a97\u683c","title":"\u5b89\u88c5\uff1a"},{"location":"%E6%9D%82%E9%A1%B9/Tmux%E4%BD%BF%E7%94%A8/#_2","text":"tmux \u9664\u4e86\u7a97\u683c\u4ee5\u5916\uff0c\u8fd8\u6709\u7a97\u53e3\uff08window\uff09 \u7684\u6982\u5ff5\u3002\u4f9d\u6b21\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\u6765\u719f\u6089 tmux \u7684\u7a97\u53e3\u64cd\u4f5c\uff1a * c \u65b0\u5efa\u7a97\u53e3\uff0c\u6b64\u65f6\u5f53\u524d\u7a97\u53e3\u4f1a\u5207\u6362\u81f3\u65b0\u7a97\u53e3\uff0c\u4e0d\u5f71\u54cd\u539f\u6709\u7a97\u53e3\u7684\u72b6\u6001 * p \u5207\u6362\u81f3\u4e0a\u4e00\u7a97\u53e3 * n \u5207\u6362\u81f3\u4e0b\u4e00\u7a97\u53e3 * w \u7a97\u53e3\u5217\u8868\u9009\u62e9\uff0c\u6ce8\u610f macOS \u4e0b\u4f7f\u7528 \u2303p \u548c \u2303n \u8fdb\u884c\u4e0a\u4e0b\u9009\u62e9 * & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 * , \u91cd\u547d\u540d\u7a97\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e2d\u6587\uff0c\u91cd\u547d\u540d\u540e\u80fd\u5728 tmux \u72b6\u6001\u680f\u66f4\u5feb\u901f\u7684\u8bc6\u522b\u7a97\u53e3 id * 0 \u5207\u6362\u81f3 0 \u53f7\u7a97\u53e3\uff0c\u4f7f\u7528\u5176\u4ed6\u6570\u5b57 id \u5207\u6362\u81f3\u5bf9\u5e94\u7a97\u53e3 * f \u6839\u636e\u7a97\u53e3\u540d\u641c\u7d22\u9009\u62e9\u7a97\u53e3\uff0c\u53ef\u6a21\u7cca\u5339\u914d","title":"\u7a97\u53e3\u64cd\u4f5c"},{"location":"%E6%9D%82%E9%A1%B9/Tmux%E4%BD%BF%E7%94%A8/#_3","text":"\u5982\u679c\u8fd0\u884c\u4e86\u591a\u6b21 tmux \u547d\u4ee4\u5219\u4f1a\u5f00\u542f\u591a\u4e2a tmux \u4f1a\u8bdd\uff08session\uff09\u3002\u5728 tmux \u4f1a\u8bdd\u4e2d\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u914d\u5408\u4ee5\u4e0b\u5feb\u6377\u952e\u53ef\u64cd\u4f5c\u4f1a\u8bdd\uff1a * $ \u91cd\u547d\u540d\u5f53\u524d\u4f1a\u8bdd * s \u9009\u62e9\u4f1a\u8bdd\u5217\u8868 * d detach \u5f53\u524d\u4f1a\u8bdd\uff0c\u8fd0\u884c\u540e\u5c06\u4f1a\u9000\u51fa tmux \u8fdb\u7a0b\uff0c\u8fd4\u56de\u81f3 shell \u4e3b\u8fdb\u7a0b * \u5728 shell\u4e3b\u8fdb\u7a0b\u4e0b\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u4ee5\u64cd\u4f5c tmux \u4f1a\u8bdd\uff1a * tmux new -s foo # \u65b0\u5efa\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd * tmux ls # \u5217\u51fa\u6240\u6709 tmux \u4f1a\u8bdd * tmux a # \u6062\u590d\u81f3\u4e0a\u4e00\u6b21\u7684\u4f1a\u8bdd * tmux a -t foo # \u6062\u590d\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd\uff0c\u4f1a\u8bdd\u9ed8\u8ba4\u540d\u79f0\u4e3a\u6570\u5b57 * tmux kill-session -t foo # \u5220\u9664\u540d\u79f0\u4e3a foo \u7684\u4f1a\u8bdd * tmux kill-server # \u5220\u9664\u6240\u6709\u7684\u4f1a\u8bdd * \u9664\u4ee5\u4e0a\u63d0\u5230\u7684\u5feb\u6377\u952e\u4ee5\u5916\uff0ctmux \u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u7684\u5feb\u6377\u952e\u548c\u547d\u4ee4\uff0c\u4f7f\u7528\u524d\u7f00\u5feb\u6377\u952e \u2303b \u52a0 ? \u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7684\u5feb\u6377\u952e\u5217\u8868\uff0c\u8be5\u5217\u8868\u89c6\u56fe\u4e3a tmux copy \u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u4e0b\u53ef\u4f7f\u7528\u4ee5\u4e0b\u5feb\u6377\u952e\uff08\u65e0\u9700\u52a0 \u2303b \u524d\u7f00\uff09\uff1a * \u2303v \u4e0b\u4e00\u9875 * Meta v \u4e0a\u4e00\u9875 \uff08tmux \u5feb\u6377\u952e\u4e3a Emacs \u98ce\u683c\uff0c\u8fd9\u91cc\u7684 Meta \u952e\u53ef\u7528 Esc \u6a21\u62df\uff09 * \u2303s \u5411\u524d\u641c\u7d22 * q \u9000\u51fa copy \u6a21\u5f0f tmux rename-session -t <\u4f1a\u8bdd\u540d> tmux choose-session -t <\u4f1a\u8bdd\u540d> tmux kill-session -t <\u4f1a\u8bdd\u540d> \u67e5\u770b\u4f1a\u8bdd\u5217\u8868 tmux ls \u521b\u5efa\u4e00\u4e2a\u65b0\u4f1a\u8bdd tmux new -s [ session_name ] \u540d\u79f0 \u8fde\u63a5\u4f1a\u8bdd tmux a ( attach ) -t [ session_name ] \u540d\u79f0 \u9000\u51fa\u4f1a\u8bdd ctrl+b d \u4f1a\u8bdd\u73af\u5883\u67e5\u770b\u4f1a\u8bdd\u5217\u8868 ctrl+b s \u521b\u5efa\u7a97\u53e3 ctrl+b c \u5173\u95ed\u7a97\u53e3\uff1a ctrl+b & \u5782\u76f4\u5206\u5c4f\uff1a ctrl+b % \u6c34\u5e73\u5206\u5c4f\uff1a ctrl+b \" \u5173\u95edpane\uff1a ctrl+b x \u5e2e\u52a9\uff1a ctrl+b ? \u9009\u62e9\u5173\u95ed\u4f1a\u8bdd\uff0c\u8be5\u547d\u4ee4\u4f1a\u5217\u51fa\u5f53\u524d\u4f1a\u8bdd\u7684\u767b\u5f55\u5217\u8868 ctrl-b + shift-d \u5207\u6362\u7a97\u53e3: ctrl+b p (previous\u7684\u9996\u5b57\u6bcd) \u5207\u6362\u5230\u4e0a\u4e00\u4e2awindow\u3002 ctrl+b n (next\u7684\u9996\u5b57\u6bcd) \u5207\u6362\u5230\u4e0b\u4e00\u4e2awindow\u3002 ctrl+b 0 \u5207\u6362\u52300\u53f7window\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u53ef\u6362\u6210\u4efb\u610f\u7a97\u53e3\u5e8f\u53f7 ctrl+b w (windows\u7684\u9996\u5b57\u6bcd) \u5217\u51fa\u5f53\u524dsession\u6240\u6709window\uff0c\u901a\u8fc7\u4e0a\u3001\u4e0b\u952e\u5207\u6362\u7a97\u53e3 ctrl+b l (\u5b57\u6bcdL\u7684\u5c0f\u5199)\u76f8\u90bb\u7684window\u5207\u6362 \u5207\u6362pane\uff1a ctrl+b o \u4f9d\u6b21\u5207\u6362\u5f53\u524d\u7a97\u53e3\u4e0b\u7684\u5404\u4e2apane\u3002 ctrl+b Up|Down|Left|Right \u6839\u636e\u6309\u7bad\u65b9\u5411\u9009\u62e9\u5207\u6362\u5230\u67d0\u4e2apane\u3002 ctrl+b Space (\u7a7a\u683c\u952e) \u5bf9\u5f53\u524d\u7a97\u53e3\u4e0b\u7684\u6240\u6709pane\u91cd\u65b0\u6392\u5217\u5e03\u5c40\uff0c\u6bcf\u6309\u4e00\u6b21\uff0c\u6362\u4e00\u79cd\u6837\u5f0f\u3002 ctrl+b z \u6700\u5927\u5316\u5f53\u524dpane\u3002\u518d\u6309\u4e00\u6b21\u540e\u6062\u590d\u3002","title":"\u4f1a\u8bdd\u64cd\u4f5c"},{"location":"%E6%9D%82%E9%A1%B9/V2ray/","text":"v2ray \u00b6 https://sub.qianglie.xyz/subscribe.php?sid = 18019 & token = mJM05AbWmFzp","title":"v2ray"},{"location":"%E6%9D%82%E9%A1%B9/V2ray/#v2ray","text":"https://sub.qianglie.xyz/subscribe.php?sid = 18019 & token = mJM05AbWmFzp","title":"v2ray"},{"location":"%E6%9D%82%E9%A1%B9/Windows%E5%9F%9FOu%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/","text":"\u57dfOu\u65e0\u6cd5\u5220\u9664 \u00b6 windows server 2008 AD\u57df\u65e0\u6cd5\u5220\u9664\u7ec4\u7ec7\u5355\u4f4d\u7684\u539f\u56e0 \u5728 windows server 2008\u4e2d Active Directory \u57df\u670d\u52a1\u4e2d \u521b\u5efa\u7ec4\u7ec7\u5355\u4f4d\u4e4b\u540e\u60f3\u5220\u9664 \u5374\u53d1\u73b0\u6ca1\u6709\u8db3\u591f\u7684\u6743\u9650\u3001\u800c\u4e14\u662f\u7528\u7684 Administrator \u539f\u56e0\uff1a\u5728\u521b\u5efa\u7684\u65f6\u5019 \u52fe\u9009\u4e86 \u9632\u6b62\u5bf9\u8c61\u4ee5\u610f\u5916\u5220\u9664 \u5904\u7406\u65b9\u6cd5\uff1a\u5f00\u59cb -\u8fd0\u884c-dsa.msc-\u53f3\u51fb\u60f3\u8981\u5220\u9664\u7684\u7ec4\u7ec7\u5355\u4f4d\uff08OU\uff09 -\u5c5e\u6027- \u5bf9\u8c61 \u9009\u5361\u2014\u53d6\u6d88\u9009\u9879\uff1a\u9632\u6b62\u5bf9\u8c61\u610f\u5916\u5220\u9664 \u5982\u679c\u6ca1\u6709\u5bf9\u8c61 \u9009\u5361 \u53ef\u4ee5 alt+v\uff08\u83dc\u5355\u91cc \u67e5\u770b\u2014\u9ad8\u7ea7\u529f\u80fd\uff09 \u7136\u540e\u2014\u2014\u53f3\u51fb\u60f3\u8981\u5220\u9664\u7684\u7ec4\u7ec7\u5355\u4f4d\uff08OU\uff09 -\u5c5e\u6027- \u5bf9\u8c61 \u9009\u5361\u2014\u53d6\u6d88\u9009\u9879\uff1a\u9632\u6b62\u5bf9\u8c61\u610f\u5916\u5220\u9664","title":"\u57dfOu\u65e0\u6cd5\u5220\u9664"},{"location":"%E6%9D%82%E9%A1%B9/Windows%E5%9F%9FOu%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4/#ou","text":"windows server 2008 AD\u57df\u65e0\u6cd5\u5220\u9664\u7ec4\u7ec7\u5355\u4f4d\u7684\u539f\u56e0 \u5728 windows server 2008\u4e2d Active Directory \u57df\u670d\u52a1\u4e2d \u521b\u5efa\u7ec4\u7ec7\u5355\u4f4d\u4e4b\u540e\u60f3\u5220\u9664 \u5374\u53d1\u73b0\u6ca1\u6709\u8db3\u591f\u7684\u6743\u9650\u3001\u800c\u4e14\u662f\u7528\u7684 Administrator \u539f\u56e0\uff1a\u5728\u521b\u5efa\u7684\u65f6\u5019 \u52fe\u9009\u4e86 \u9632\u6b62\u5bf9\u8c61\u4ee5\u610f\u5916\u5220\u9664 \u5904\u7406\u65b9\u6cd5\uff1a\u5f00\u59cb -\u8fd0\u884c-dsa.msc-\u53f3\u51fb\u60f3\u8981\u5220\u9664\u7684\u7ec4\u7ec7\u5355\u4f4d\uff08OU\uff09 -\u5c5e\u6027- \u5bf9\u8c61 \u9009\u5361\u2014\u53d6\u6d88\u9009\u9879\uff1a\u9632\u6b62\u5bf9\u8c61\u610f\u5916\u5220\u9664 \u5982\u679c\u6ca1\u6709\u5bf9\u8c61 \u9009\u5361 \u53ef\u4ee5 alt+v\uff08\u83dc\u5355\u91cc \u67e5\u770b\u2014\u9ad8\u7ea7\u529f\u80fd\uff09 \u7136\u540e\u2014\u2014\u53f3\u51fb\u60f3\u8981\u5220\u9664\u7684\u7ec4\u7ec7\u5355\u4f4d\uff08OU\uff09 -\u5c5e\u6027- \u5bf9\u8c61 \u9009\u5361\u2014\u53d6\u6d88\u9009\u9879\uff1a\u9632\u6b62\u5bf9\u8c61\u610f\u5916\u5220\u9664","title":"\u57dfOu\u65e0\u6cd5\u5220\u9664"},{"location":"%E6%9D%82%E9%A1%B9/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2sql%E6%9F%A5%E8%AF%A2/","text":"\u6570\u636e\u5e93\u6162sql\u6392\u67e5 \u00b6 select id , user , host , db , command , time , state , info from information_schema . PROCESSLIST order by time desc","title":"\u6570\u636e\u5e93\u6162sql\u6392\u67e5"},{"location":"%E6%9D%82%E9%A1%B9/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%85%A2sql%E6%9F%A5%E8%AF%A2/#sql","text":"select id , user , host , db , command , time , state , info from information_schema . PROCESSLIST order by time desc","title":"\u6570\u636e\u5e93\u6162sql\u6392\u67e5"}]}